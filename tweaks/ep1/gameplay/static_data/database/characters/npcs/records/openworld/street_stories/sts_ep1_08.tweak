package Character
using RTDB, BaseStats, Items

sts_ep1_08_client : Quest_NPC_Base
{
	quest = "NPCQuestAffiliation.StreetStory";
	entityTemplatePath = "ep1\openworld\street_stories\sts_ep1_08\entities\sts_ep1_08_client.ent";
	priority = "SpawnableObjectPriority.Quest";
	baseAttitudeGroup = "friendly";
	displayName = "LocKey#80881";
	fullDisplayName = "LocKey#34579";
	savable = true;
	fk< Affiliation > affiliation = "Factions.Unaffiliated";
	reactionPreset = "ReactionPresets.NoReaction";
}

sts_ep1_08_client_boss : Quest_NPC_Base
{
	quest = "NPCQuestAffiliation.StreetStory";
	entityTemplatePath = "ep1\openworld\street_stories\sts_ep1_08\entities\sts_ep1_08_client_boss.ent";
	priority = "SpawnableObjectPriority.Quest";
	baseAttitudeGroup = "friendly";
	displayName = "LocKey#80883";
	fullDisplayName = "LocKey#80884";
	savable = true;
	fk< Affiliation > affiliation = "Factions.Unaffiliated";
	reactionPreset = "ReactionPresets.NoReaction";
}

sts_ep1_08_client_background : Quest_NPC_Base
{
	quest = "NPCQuestAffiliation.StreetStory";
	entityTemplatePath = "ep1\openworld\street_stories\sts_ep1_08\entities\sts_ep1_08_client_background.ent";
	priority = "SpawnableObjectPriority.Quest";
	baseAttitudeGroup = "friendly";
	displayName = "LocKey#80879";
	fullDisplayName = "LocKey#34579";
	savable = true;
	fk< Affiliation > affiliation = "Factions.Unaffiliated";
	reactionPreset = "ReactionPresets.NoReaction";
}

sts_ep1_08_target : Quest_NPC_Base
{
	quest = "NPCQuestAffiliation.StreetStory";
	entityTemplatePath = "ep1\openworld\street_stories\sts_ep1_08\entities\sts_ep1_08_target_agent.ent";
	priority = "SpawnableObjectPriority.Quest";
	baseAttitudeGroup = "neutral";
	displayName = "LocKey#32390";
	fullDisplayName = "LocKey#34579";
	alternativeDisplayName = "LocKey#80835";
	alternativeFullDisplayName = "LocKey#80878";
	savable = true;
	fk< Affiliation > affiliation = "Factions.Unaffiliated";
	fk< ObjectAction >[] objectActions = 
	[
		"GenericInteraction.Talk", "GenericInteraction.ReturnTalk"
	];
}

sts_ep1_08_scavenger_grunt1_ranged1_slaughtomatic_wa : ep1_scavenger_grunt1_ranged1_slaughtomatic_wa
{
	displayName = "Scav";
	fullDisplayName = "Scavenger";
	CName baseAttitudeGroup = "sts_ep1_08_scavengers";
	savable = true;
	fk< Affiliation > affiliation = "Factions.Scavengers";
	quest = "NPCQuestAffiliation.StreetStory";
}

sts_ep1_08_scavenger_grunt2_ranged2_pulsar_ma : ep1_scavenger_grunt2_ranged2_pulsar_ma
{
	displayName = "Scav";
	fullDisplayName = "Scavenger";
	CName baseAttitudeGroup = "sts_ep1_08_scavengers";
	savable = true;
	fk< Affiliation > affiliation = "Factions.Scavengers";
	quest = "NPCQuestAffiliation.StreetStory";
}

sts_ep1_08_scavenger_elite2_shotgun_igla_ma : ep1_scavenger_elite2_shotgun_igla_ma
{
	displayName = "Scav";
	fullDisplayName = "Scavenger";
	CName baseAttitudeGroup = "sts_ep1_08_scavengers";
	savable = true;
	fk< Affiliation > affiliation = "Factions.Scavengers";
	quest = "NPCQuestAffiliation.StreetStory";
}

sts_ep1_08_scavenger_grunt2_melee2_knife_wa : ep1_scavenger_grunt2_melee2_knife_wa
{
	displayName = "Scav";
	fullDisplayName = "Scavenger";
	CName baseAttitudeGroup = "sts_ep1_08_scavengers";
	savable = true;
	fk< Affiliation > affiliation = "Factions.Scavengers";
	quest = "NPCQuestAffiliation.StreetStory";
}

sts_ep1_08_scavenger_grunt2_ranged2_copperhead_ma : ep1_scavenger_grunt2_ranged2_copperhead_ma
{
	displayName = "Scav";
	fullDisplayName = "Scavenger";
	CName baseAttitudeGroup = "sts_ep1_08_scavengers";
	savable = true;
	fk< Affiliation > affiliation = "Factions.Scavengers";
	quest = "NPCQuestAffiliation.StreetStory";
}

sts_ep1_08_scavenger_elite3_sniper2_grad_ma : ep1_scavenger_elite3_sniper2_grad_ma
{
	displayName = "Scav";
	fullDisplayName = "Scavenger";
	CName baseAttitudeGroup = "sts_ep1_08_scavengers";
	savable = true;
	fk< Affiliation > affiliation = "Factions.Scavengers";
	quest = "NPCQuestAffiliation.StreetStory";
}

sts_ep1_08_scavenger_before_building_wa_grunt2_melee2_knife_wa : ep1_scavenger_grunt2_melee2_knife_wa
{
	displayName = "Scav";
	fullDisplayName = "Scavenger";
	CName baseAttitudeGroup = "sts_ep1_08_scavengers";
	savable = true;
	fk< Affiliation > affiliation = "Factions.Scavengers";
	quest = "NPCQuestAffiliation.StreetStory";
}

sts_ep1_08_before_building_ma_scavenger_grunt2_ranged2_pulsar_ma : ep1_scavenger_grunt2_ranged2_pulsar_ma
{
	displayName = "Scav";
	fullDisplayName = "Scavenger";
	CName baseAttitudeGroup = "sts_ep1_08_scavengers";
	savable = true;
	fk< Affiliation > affiliation = "Factions.Scavengers";
	quest = "NPCQuestAffiliation.StreetStory";
}

sts_ep1_08_scavenger_netrunner2_netrunner2_nova_wa_rare : ep1_scavenger_netrunner2_netrunner2_nova_wa_rare
{
	displayName = "Scav";
	fullDisplayName = "Scavenger";
	CName baseAttitudeGroup = "sts_ep1_08_scavengers";
	savable = true;
	fk< Affiliation > affiliation = "Factions.Scavengers";
	quest = "NPCQuestAffiliation.StreetStory";
}

Boris_Equipment_Primary : NPCEquipmentItem
{
	equipSlot = "AttachmentSlots.WeaponRight";
	onBodySlot = "AttachmentSlots.ItemSlotGenericRanged";
	equipCondition = 
	[
		"WeaponConditions.SniperPrimaryWeaponSniperEquipCondition"
	];
	unequipCondition = 
	[
		"WeaponConditions.SniperPrimaryWeaponSniperUnequipCondition"
	];
}

Boris_Equipment_Secondary : NPCEquipmentItem
{
	equipSlot = "AttachmentSlots.WeaponRight";
	onBodySlot = "AttachmentSlots.ItemSlotGenericRanged";
	equipCondition = 
	[
		"WeaponConditions.RangedHybridPrimaryWeaponRangedEquipCondition"
	];
	unequipCondition = 
	[
		"WeaponConditions.RangedHybridPrimaryWeaponRangedUnequipCondition"
	];
}

sts_ep1_08_kgb_boss : arasaka_sniper_sniper3_nekomata_ma_elite
{
	quest = "NPCQuestAffiliation.StreetStory";
	entityTemplatePath = "ep1\openworld\street_stories\sts_ep1_08\entities\sts_ep1_08_kgb_boss.ent";
	priority = "SpawnableObjectPriority.Quest";
	displayName = "LocKey#81272";
	fullDisplayName = "LocKey#81273";
	savable = true;
	fk< Affiliation > affiliation = "Factions.Scavengers";
	archetypeName = "boris_ribakov";
	archetypeData = "ArchetypeData.FastSniperT3_NoHealing";
	dropsWeaponOnDeath = false;
	lootDrop = "LootTables.sts_ep1_08_kgb_boss_loot_table";
	actionMap = "RibakovBoss.RibakovActionMap";
	statModifiers += 
	[
		{
			statType = "BaseStats.Health";
			modifierType = "Multiplier";
			value = 1.5;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.NPCDamage";
			modifierType = "Multiplier";
			id = "boss_power_level_to_dps_mult";
			column = "ribakov_level_to_dps_mult";
			refStat = "BaseStats.PowerLevel";
		} : CurveStatModifier, 
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Additive";
			value = 25;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ImpactDamageThresholdInCover";
			modifierType = "Multiplier";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThresholdInCover";
			modifierType = "Multiplier";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ImpactDamageThresholdImpulse";
			modifierType = "Multiplier";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThresholdImpulse";
			modifierType = "Multiplier";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThresholdInCover";
			modifierType = "Multiplier";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThresholdImpulse";
			modifierType = "Multiplier";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.HackingResistance";
			modifierType = "Additive";
			id = "puppet_hacking_res_to_upload";
			column = "netrunner_hacking_res_to_npc_rarity";
			refStat = "BaseStats.NPCRarity";
		} : CurveStatModifier, 
		{
			statType = "BaseStats.HitTimerAfterImpact";
			modifierType = "Additive";
			value = 10;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.HitTimerAfterImpactMelee";
			modifierType = "Additive";
			value = 10;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.HitTimerAfterStagger";
			modifierType = "Additive";
			value = 10;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.HitTimerAfterStaggerMelee";
			modifierType = "Additive";
			value = 10;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.HitTimerAfterKnockdown";
			modifierType = "Additive";
			value = 10;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.MaxPercentDamageTakenPerHit";
			modifierType = "Additive";
			value = 7.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StunImmunity";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier
	];
	statModifierGroups += 
	[
		"Character.Boss_Poise_Primary_Stat_ModGroup"
	];
	bossHealthBarThresholds = 
	[
		5.f, 65.f
	];
	primaryEquipment = 
	{
		equipmentItems = 
		[
			{
				item = "Items.Preset_Nekomata_Boris";
			} : Boris_Equipment_Primary
		];
	};
	secondaryEquipment = 
	{
		equipmentItems = 
		[
			{
				item = "Items.Preset_Warden_Boris";
			} : Boris_Equipment_Secondary
		];
	};
	abilities += 
	[
		"Ability.HasSandevistanTier1", "Ability.HasChargeJump", "Ability.CanCatchUpDistance", "Ability.CanCatchUp", "Ability.CanUseCovers", "Ability.HasElectricExplosion", "Ability.CanWeaponMalfunctionQuickHack", "Ability.CanUseGrenades", "Ability.IsExcludedFromExtraHealingOnHigherDifficulties", "Ability.HasExtendedHitReactionImmunity", "Ability.HasMeleeHitReactionAndTakedownResistance"
	];
	items += 
	[
		{
			item = "Items.GrenadeSmokeOda";
			quantity = 99;
		}, 
		{
			item = "Items.GrenadeFlashRegular";
			quantity = 99;
		}
	];
	combatSensesPreset = "Absolute";
	sensePreset = "Senses.Absolute";
	rarity = "NPCRarity.Boss";
	hideUIDetection = true;
}

sts_ep1_08_kgb_boss_hologram : arasaka_sniper_sniper3_nekomata_ma_elite
{
	quest = "NPCQuestAffiliation.StreetStory";
	entityTemplatePath = "ep1\openworld\street_stories\sts_ep1_08\entities\sts_ep1_08_kgb_boss_hologram.ent";
	priority = "SpawnableObjectPriority.Quest";
	displayName = "LocKey#81272";
	fullDisplayName = "LocKey#34579";
	savable = true;
	rarity = "NPCRarity.Trash";
	lootDrop = "LootTables.Empty";
	dropsWeaponOnDeath = false;
	string relaxedSensesPreset = "AbsoluteBossChimera";
	string alertedSensesPreset = "AbsoluteBossChimera";
	string combatSensesPreset = "AbsoluteBossChimera";
	fk< StatModifier >[] statModifiers += 
	[
		{
			statType = "BaseStats.Health";
			modifierType = "Multiplier";
			value = 0.01;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.NPCDamage";
			modifierType = "Multiplier";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismHeadDamageThreshold";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismLArmDamageThreshold";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismRArmDamageThreshold";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismLLegDamageThreshold";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismRLegDamageThreshold";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DefeatedHeadDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DefeatedLArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DefeatedRArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DefeatedLLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DefeatedRLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismHeadDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismLArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismRArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismLLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismRLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundedImmunity";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier
	];
	primaryEquipment = 
	{
		equipmentItems = 
		[
			{
				item = "Items.Preset_Warden_Boris_Hologram";
			} : Boris_Equipment_Primary
		];
	};
	secondaryEquipment = 
	{
		equipmentItems = 
		[
			{
				item = "Items.Preset_Warden_Boris_Hologram";
			} : Boris_Equipment_Secondary
		];
	};
}

sts_ep1_08_kgb_boss_hologram_final_scene : arasaka_sniper_sniper3_nekomata_ma_elite
{
	quest = "NPCQuestAffiliation.StreetStory";
	entityTemplatePath = "ep1\openworld\street_stories\sts_ep1_08\entities\sts_ep1_08_kgb_boss_hologram.ent";
	priority = "SpawnableObjectPriority.Quest";
	displayName = "LocKey#81272";
	fullDisplayName = "LocKey#34579";
	savable = true;
	rarity = "NPCRarity.Trash";
	lootDrop = "LootTables.Empty";
	dropsWeaponOnDeath = false;
	string relaxedSensesPreset = "AbsoluteBossChimera";
	string alertedSensesPreset = "AbsoluteBossChimera";
	string combatSensesPreset = "AbsoluteBossChimera";
	fk< StatModifier >[] statModifiers += 
	[
		{
			statType = "BaseStats.Health";
			modifierType = "Multiplier";
			value = 0.01;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.NPCDamage";
			modifierType = "Multiplier";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismHeadDamageThreshold";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismLArmDamageThreshold";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismRArmDamageThreshold";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismLLegDamageThreshold";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismRLegDamageThreshold";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DefeatedHeadDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DefeatedLArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DefeatedRArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DefeatedLLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DefeatedRLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismHeadDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismLArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismRArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismLLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismRLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundedImmunity";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier
	];
	primaryEquipment = 
	{
		equipmentItems = 
		[
			{
				item = "Items.Preset_Warden_Boris_Hologram";
			} : Boris_Equipment_Primary
		];
	};
	secondaryEquipment = 
	{
		equipmentItems = 
		[
			{
				item = "Items.Preset_Warden_Boris_Hologram";
			} : Boris_Equipment_Secondary
		];
	};
}

sts_ep1_08_kgb_boss_hologram_final_scene_sniper : arasaka_sniper_sniper3_nekomata_ma_elite
{
	quest = "NPCQuestAffiliation.StreetStory";
	entityTemplatePath = "ep1\openworld\street_stories\sts_ep1_08\entities\sts_ep1_08_kgb_boss_hologram.ent";
	priority = "SpawnableObjectPriority.Quest";
	displayName = "LocKey#81272";
	fullDisplayName = "LocKey#34579";
	savable = true;
	rarity = "NPCRarity.Trash";
	lootDrop = "LootTables.Empty";
	dropsWeaponOnDeath = false;
	string relaxedSensesPreset = "AbsoluteBossChimera";
	string alertedSensesPreset = "AbsoluteBossChimera";
	string combatSensesPreset = "AbsoluteBossChimera";
	fk< StatModifier >[] statModifiers += 
	[
		{
			statType = "BaseStats.Health";
			modifierType = "Multiplier";
			value = 0.01;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.NPCDamage";
			modifierType = "Multiplier";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismHeadDamageThreshold";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismLArmDamageThreshold";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismRArmDamageThreshold";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismLLegDamageThreshold";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismRLegDamageThreshold";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DefeatedHeadDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DefeatedLArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DefeatedRArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DefeatedLLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DefeatedRLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismHeadDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismLArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismRArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismLLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismRLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundedImmunity";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier
	];
	primaryEquipment = 
	{
		equipmentItems = 
		[
			{
				item = "Items.Preset_Nekomata_Boris_Hologram";
			} : Boris_Equipment_Primary
		];
	};
	secondaryEquipment = 
	{
		equipmentItems = 
		[
			{
				item = "Items.Preset_Nekomata_Boris_Hologram";
			} : Boris_Equipment_Secondary
		];
	};
}

sts_ep1_08_boss_fight_drone : Drone_Griffin_Base
{
	quest = "NPCQuestAffiliation.StreetStory";
}

sts_ep1_08_bana : Quest_NPC_Base
{
	quest = "NPCQuestAffiliation.StreetStory";
	priority = "SpawnableObjectPriority.Quest";
	baseAttitudeGroup = "friendly";
	displayName = "LocKey#81270";
	fullDisplayName = "LocKey#81271";
	savable = true;
}

