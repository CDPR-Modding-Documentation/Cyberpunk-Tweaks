package GameplayRestriction
using RTDB, Effectors, Prereqs, Perks

FistFight : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"FistFight", "Fists", "NoRadialMenus", "Melee", "NoQuickHacks", "DisableRagdoll", "NoPhone", "VehicleNoInteraction", "NoInhalerOrInjector", "NoGrenadeOrGadget"
	];
}

Melee : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"Melee"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.HasBerserk";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasSandevistan";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasKerenzikov";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

SecurityLocker : Melee
{
}

NoCyberware : GameplayRestrictionStatusEffect
{
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.HasBerserk";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasSandevistan";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasKerenzikov";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

Firearms : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"Firearms", "NoGrenadeOrGadget"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.HasBerserk";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasSandevistan";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasKerenzikov";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

NoGrenadeOrGadget : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"NoGrenadeOrGadget"
	];
}

ShootingRangeCompetition : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"ShootingRangeCompetition", "Firearms", "FirearmsNoSwitch", "NoQuickMelee", "NoRadialMenus"
	];
}

FirearmsNoUnequipNoSwitch : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"FirearmsNoUnequip", "FirearmsNoSwitch", "Firearms", "NoWeaponWheel"
	];
}

NoQuickMelee : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"NoQuickMelee"
	];
}

OneHandedFirearms : GameplayRestrictionStatusEffect
{
	savable = false;
	gameplayTags += 
	[
		"OneHandedFirearms"
	];
}

InfiniteAmmo : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"InfiniteAmmo"
	];
}

PhoneCall : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"PhoneCall", "BlockFastTravel"
	];
	CName restrictionName = "PhoneCall_Restriction";
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.HasBerserk";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasSandevistan";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasKerenzikov";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

NoPhone : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"NoPhone"
	];
}

PhoneInterrupted : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"PhoneInterrupted", "NoPhone"
	];
}

NoZooming : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"NoZooming"
	];
}

NoCameraControl : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"NoCameraControl"
	];
}

VehicleNoSummoning : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"VehicleNoSummoning"
	];
}

NoRadialMenus : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"NoRadialMenus", "VehicleBlockRadioInput"
	];
}

NoCombat : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"NoCombat", "NoQuickHacks", "NoGrenadeOrGadget"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.HasBerserk";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasSandevistan";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasKerenzikov";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

NoPhotoMode : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"NoPhotoMode"
	];
}

VehicleSummoning : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"VehicleSummoning", "NoPhone", "NoInhalerOrInjector", "NoGrenadeOrGadget"
	];
}

CustomVehicleSummon : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"CustomVehicleSummon"
	];
}

NoWorldInteractions : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"NoWorldInteractions"
	];
}

VehicleNoInteraction : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"VehicleNoInteraction"
	];
}

VehicleScene : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"VehicleScene", "NoWeaponWheel"
	];
}

VehicleSceneFpp : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"VehicleScene", "VehicleFPP", "NoWeaponWheel"
	];
}

VehicleOnlyForward : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"VehicleOnlyForward"
	];
}

VehicleSceneFppOnlyForward : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"VehicleScene", "VehicleFPP", "VehicleOnlyForward", "NoWeaponWheel"
	];
}

VehicleCombat : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"VehicleCombat", "InfiniteAmmo", "Firearms"
	];
}

VehicleBlockExit : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"VehicleBlockExit"
	];
}

VehicleBlockRadioInput : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"VehicleBlockRadioInput"
	];
}

VehicleCombatNoInterruptions : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"VehicleCombat", "VehicleCombatBlockExit", "InfiniteAmmo", "FirearmsNoUnequip", "Firearms", "BlockAllHubMenu", "NoPhone"
	];
}

VehicleCombatBlockExit : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"VehicleCombat", "InfiniteAmmo", "Firearms", "VehicleCombatBlockExit", "FirearmsNoUnequip", "NoPhone"
	];
}

VehicleFPP : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"VehicleFPP"
	];
}

NoDriving : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"NoDriving"
	];
}

BlockTrafficInteractions : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"BlockTrafficInteractions"
	];
}

BodyCarryingNoDrop : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"BodyCarryingNoDrop"
	];
}

BodyCarryingForceDrop : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"BodyCarryingForceDrop"
	];
}

BodyCarryingGeneric : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"BodyCarryingGeneric", "NoRadialMenus", "NoLadder", "NoQuickMelee", "FirearmsNoSwitch", "NoInhalerOrInjector", "NoGrenadeOrGadget"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.JumpHeight";
					modifierType = "Multiplier";
					value = 0.5f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Acceleration";
					modifierType = "Multiplier";
					value = 0.5f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.MaxSpeed";
					modifierType = "Additive";
					id = "locomotion_stats";
					column = "max_speed_mul_in_carry";
					refStat = "BaseStats.Strength";
				} : CurveStatModifier, 
				{
					statType = "BaseStats.MaxSpeed";
					modifierType = "Multiplier";
					value = 0.7f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanSprint";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodge";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodgeAir";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasChargeJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDoubleJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

BodyCarryingFriendly : BodyCarryingGeneric
{
	gameplayTags += 
	[
		"BodyCarryingFriendly"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.CanSprint";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JumpHeight";
					modifierType = "Multiplier";
					value = 0.5f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Acceleration";
					modifierType = "Multiplier";
					value = 0.5f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.MaxSpeed";
					modifierType = "Additive";
					id = "locomotion_stats";
					column = "max_speed_mul_in_carry";
					refStat = "BaseStats.Strength";
				} : CurveStatModifier, 
				{
					statType = "BaseStats.MaxSpeed";
					modifierType = "Multiplier";
					value = 0.7f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodge";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodgeAir";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasChargeJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDoubleJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

BodyCarryingCanSprint : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"BodyCarryingCanSprint", "NoSlide", "OneHandedFirearms", "NoLadder", "NoQuickMelee"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.CanSprint";
					modifierType = "Multiplier";
					value = 1.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanJump";
					modifierType = "Multiplier";
					value = 1.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JumpHeight";
					modifierType = "Multiplier";
					value = 0.5f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Acceleration";
					modifierType = "Multiplier";
					value = 0.5f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.MaxSpeed";
					modifierType = "Additive";
					id = "locomotion_stats";
					column = "max_speed_mul_in_carry";
					refStat = "BaseStats.Strength";
				} : CurveStatModifier, 
				{
					statType = "BaseStats.MaxSpeed";
					modifierType = "Multiplier";
					value = 0.7f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodge";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodgeAir";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasChargeJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDoubleJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

Braindance : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"Braindance", "NoCombat"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.CanDash";
					modifierType = "Multiplier";
					value = 0;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanUseCovers";
					modifierType = "Multiplier";
					value = 0;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanJump";
					modifierType = "Multiplier";
					value = 0;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodge";
					modifierType = "Multiplier";
					value = 0;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanUseGrenades";
					modifierType = "Multiplier";
					value = 0;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanBlock";
					modifierType = "Multiplier";
					value = 0;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanParry";
					modifierType = "Multiplier";
					value = 0;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanGrab";
					modifierType = "Multiplier";
					value = 0;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanUseTakedowns";
					modifierType = "Multiplier";
					value = 0;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanUseLeftHand";
					modifierType = "Multiplier";
					value = 0;
				} : ConstantStatModifier
			];
		}
	];
}

Cyberspace : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"Cyberspace", "CyberspacePresence", "Tier2Locomotion", "BlockAllHubMenu", "NoScanning", "NoRadialMenus", "NoZooming", "NoPhone", "VehicleSummoning", "NoEncumbrance"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.CanJump";
					modifierType = "Multiplier";
					value = 0;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanSprint";
					modifierType = "Multiplier";
					value = 0;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanCrouch";
					modifierType = "Multiplier";
					value = 0;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodge";
					modifierType = "Multiplier";
					value = 0;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasChargeJump";
					modifierType = "Multiplier";
					value = 0;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDoubleJump";
					modifierType = "Multiplier";
					value = 0;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasAirHover";
					modifierType = "Multiplier";
					value = 0;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodgeAir";
					modifierType = "Multiplier";
					value = 0;
				} : ConstantStatModifier
			];
		} : GameplayLogicPackage
	];
}

FastForward : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"FastForward", "NoMovement", "NoJump", "NoCombat", "NoWorldInteractions", "NoQuickMelee", "NoScanning", "NoRadialMenus", "NoZooming", "NoPhone"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.FFInputLock";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.MaxSpeed";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Deceleration";
					modifierType = "Additive";
					value = 32;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanCrouch";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasChargeJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanSprint";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodge";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasBerserk";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasSandevistanTier1";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasKerenzikov";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

FastForwardCrouchLock : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"FastForwardCrouchLock"
	];
	duration = 
	{
		statModifiers = 
		[
			{
				statType = "BaseStats.MaxDuration";
				modifierType = "Additive";
				value = 2.5;
			} : ConstantStatModifier
		];
	};
	maxStacks = 
	{
		statModifiers = 
		[
			{
				statType = "BaseStats.MaxStacks";
				modifierType = "Additive";
				value = 1;
			} : ConstantStatModifier
		];
	};
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.FFInputLock";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanCrouch";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

NoMovement : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"NoMovement"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.MaxSpeed";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Deceleration";
					modifierType = "Additive";
					value = 32;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasChargeJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanSprint";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodge";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDoubleJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

NoJump : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"NoJump"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.CanJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasChargeJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDoubleJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasAirHover";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

Tier2LocomotionSlow : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"Tier2Locomotion", "NoSlide", "NoLadder", "NoInhalerOrInjector", "NoGrenadeOrGadget"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.CanJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodge";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasBerserk";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasSandevistan";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasKerenzikov";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodge";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodgeAir";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasChargeJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDoubleJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

Tier2Locomotion : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"Tier2Locomotion", "NoLadder", "NoInhalerOrInjector", "NoGrenadeOrGadget"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.HasDodge";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasBerserk";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasSandevistan";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasKerenzikov";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodge";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodgeAir";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasChargeJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDoubleJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

Tier2LocomotionFast : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"Tier2Locomotion", "NoLadder", "NoInhalerOrInjector", "NoGrenadeOrGadget"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.HasDodge";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasBerserk";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasSandevistan";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasKerenzikov";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodge";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodgeAir";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasChargeJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDoubleJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

SandstormLocomotion : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"SandstormLocomotion", "NoCombat", "NoRadialMenus", "FirearmsNoSwitch"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.CanCrouch";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

SpaceShuttleInterior : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"SpaceShuttleInterior", "NoCombat", "NoRadialMenus", "VehicleNoInteraction"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			animationWrapperOverrides = 
			[
				"lowGravity"
			];
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.MaxSpeed";
					modifierType = "Multiplier";
					value = 0.4f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Acceleration";
					modifierType = "Multiplier";
					value = 0.08f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Deceleration";
					modifierType = "Multiplier";
					value = 0.09f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Brake";
					modifierType = "Additive";
					value = -35f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.BrakeDot";
					modifierType = "Additive";
					value = -0.4f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanCrouch";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanSprint";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodge";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodgeAir";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasChargeJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDoubleJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

ForceCrouch : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"ForceCrouch"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.CanCrouch";
					modifierType = "Multiplier";
					value = 1;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasChargeJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanSprint";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodge";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

ForceStand : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"ForceStand"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.CanCrouch";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasChargeJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanSprint";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodge";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

ForceAim : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"ForceAim"
	];
}

ForceCrouchNoMovementOnlyFirearms : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"ForceCrouchNoMovementOnlyFirearms", "ForceCrouch", "Firearms"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.MaxSpeed";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Deceleration";
					modifierType = "Additive";
					value = 32;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanCrouch";
					modifierType = "Multiplier";
					value = 1;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasChargeJump";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanSprint";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodge";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

FocusModeLocomotion : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"FocusModeLocomotion"
	];
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			fk< StatModifier >[] stats = 
			[
				{
					statType = "BaseStats.HasDodge";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasDodgeAir";
					modifierType = "Multiplier";
					value = 0.f;
				} : ConstantStatModifier
			];
		}
	];
}

GrappleNoBreakFree : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"GrappleNoBreakFree"
	];
}

NoScanning : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"NoScanning"
	];
}

NoTimeSkip : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"NoTimeSkip"
	];
}

NoTimeDisplay : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"NoTimeDisplay"
	];
}

NoCrafting : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"NoCrafting"
	];
}

NoEncumbrance : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"NoEncumbrance"
	];
}

InDaClub : GameplayRestrictionStatusEffect
{
	fk< GameplayLogicPackage >[] packages = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						stateName = "InCombat";
						isInState = false;
					} : Prereqs.CombatPSMPrereq;
					effectorToApply = 
					{
						statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.CanSprint";
									modifierType = "Multiplier";
									value = 0.f;
								} : ConstantStatModifier, 
								{
									statType = "BaseStats.HasChargeJump";
									modifierType = "Multiplier";
									value = 0.f;
								} : ConstantStatModifier, 
								{
									statType = "BaseStats.HasDoubleJump";
									modifierType = "Multiplier";
									value = 0.f;
								} : ConstantStatModifier
							];
						};
					} : ApplyStatGroupOnPlayer;
				} : Perks.ApplyEffectorOnPlayer
			];
		}
	];
}

BlockAllHubMenu : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"BlockAllHubMenu"
	];
}

LockInHubMenu : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"LockInHubMenu"
	];
}

BlockFastTravel : GameplayRestrictionStatusEffect
{
	gameplayTags += 
	[
		"BlockFastTravel"
	];
	CName restrictionName = "Generic_BlockFastTravel";
}

BlockDeviceInteractions : GameplayRestrictionStatusEffect
{
	fk< ActionRestrictionGroup > actionRestriction = "ActionRestriction.LockAllActionsRestriction";
}

OnlyOpenDoor : GameplayRestrictionStatusEffect
{
	fk< ActionRestrictionGroup > actionRestriction = "ActionRestriction.OnlyOpenDoorRestriction";
}

BodyCarryingActionRestriction : GameplayRestrictionStatusEffect
{
	fk< ActionRestrictionGroup > actionRestriction = "ActionRestriction.CarryingRestriction";
}

PhoneCallDeviceActionRestrictions : GameplayRestrictionStatusEffect
{
	fk< ActionRestrictionGroup > actionRestriction = "ActionRestriction.PhoneCallRestriction";
}

