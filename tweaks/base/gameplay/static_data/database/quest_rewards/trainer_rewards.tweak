package TrainerReward
using RTDB, RPGActionRewards

StrengthSkill_Training : RewardBase
{
	string name = "StrengthSkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				"RPGActionRewards.SkillBookQualityExp", "RPGActionRewards.StrengthSkillLvlExp", "RPGActionRewards.SkillBookExpBalance"
			];
			type = "Proficiencies.StrengthSkill";
		}
	];
}

ReflexesSkill_Training : RewardBase
{
	string name = "ReflexesSkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				"RPGActionRewards.SkillBookQualityExp", "RPGActionRewards.ReflexesSkillLvlExp", "RPGActionRewards.SkillBookExpBalance"
			];
			type = "Proficiencies.ReflexesSkill";
		}
	];
}

IntelligenceSkill_Training : RewardBase
{
	string name = "IntelligenceSkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				"RPGActionRewards.SkillBookQualityExp", "RPGActionRewards.IntelligenceSkillLvlExp", "RPGActionRewards.SkillBookExpBalance"
			];
			type = "Proficiencies.IntelligenceSkill";
		}
	];
}

TechnicalAbilitySkill_Training : RewardBase
{
	string name = "TechAbilitySkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				"RPGActionRewards.SkillBookQualityExp", "RPGActionRewards.TechnicalAbilitySkillLvlExp", "RPGActionRewards.SkillBookExpBalance"
			];
			type = "Proficiencies.TechnicalAbilitySkill";
		}
	];
}

CoolSkill_Training : RewardBase
{
	string name = "CoolSkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				"RPGActionRewards.SkillBookQualityExp", "RPGActionRewards.CoolSkillLvlExp", "RPGActionRewards.SkillBookExpBalance"
			];
			type = "Proficiencies.CoolSkill";
		}
	];
}

StrengthSkill_Training_Reward : RewardBase
{
	string name = "StrengthSkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				"RPGActionRewards.RewardSkillBookQualityExp", "RPGActionRewards.StrengthSkillLvlExp", "RPGActionRewards.SkillBookExpBalance"
			];
			type = "Proficiencies.StrengthSkill";
		}
	];
}

ReflexesSkill_Training_Reward : RewardBase
{
	string name = "ReflexesSkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				"RPGActionRewards.RewardSkillBookQualityExp", "RPGActionRewards.ReflexesSkillLvlExp", "RPGActionRewards.SkillBookExpBalance"
			];
			type = "Proficiencies.ReflexesSkill";
		}
	];
}

IntelligenceSkill_Training_Reward : RewardBase
{
	string name = "IntelligenceSkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				"RPGActionRewards.RewardSkillBookQualityExp", "RPGActionRewards.IntelligenceSkillLvlExp", "RPGActionRewards.SkillBookExpBalance"
			];
			type = "Proficiencies.IntelligenceSkill";
		}
	];
}

TechnicalAbilitySkill_Training_Reward : RewardBase
{
	string name = "TechAbilitySkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				"RPGActionRewards.RewardSkillBookQualityExp", "RPGActionRewards.TechnicalAbilitySkillLvlExp", "RPGActionRewards.SkillBookExpBalance"
			];
			type = "Proficiencies.TechnicalAbilitySkill";
		}
	];
}

CoolSkill_Training_Reward : RewardBase
{
	string name = "CoolSkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				"RPGActionRewards.RewardSkillBookQualityExp", "RPGActionRewards.CoolSkillLvlExp", "RPGActionRewards.SkillBookExpBalance"
			];
			type = "Proficiencies.CoolSkill";
		}
	];
}

CoolSkill_Training_Rare : RewardBase
{
	string name = "CoolSkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 200;
				} : RPGActionRewards.Experience, 
				"RPGActionRewards.CoolSkillLvlExp", "RPGActionRewards.SkillBookExpBalance"
			];
			type = "Proficiencies.CoolSkill";
		}
	];
}

StrengthSkill_Training_Legendary : RewardBase
{
	string name = "StrengthSkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 400;
				} : RPGActionRewards.Experience, 
				"RPGActionRewards.StrengthSkillLvlExp", "RPGActionRewards.SkillBookExpBalance"
			];
			type = "Proficiencies.StrengthSkill";
		}
	];
}

ReflexesSkill_Training_Legendary : RewardBase
{
	string name = "ReflexesSkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 400;
				} : RPGActionRewards.Experience, 
				"RPGActionRewards.ReflexesSkillLvlExp", "RPGActionRewards.SkillBookExpBalance"
			];
			type = "Proficiencies.ReflexesSkill";
		}
	];
}

IntelligenceSkill_Training_Legendary : RewardBase
{
	string name = "IntelligenceSkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 400;
				} : RPGActionRewards.Experience, 
				"RPGActionRewards.IntelligenceSkillLvlExp", "RPGActionRewards.SkillBookExpBalance"
			];
			type = "Proficiencies.IntelligenceSkill";
		}
	];
}

TechnicalAbilitySkill_Training_Legendary : RewardBase
{
	string name = "TechAbilitySkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 400;
				} : RPGActionRewards.Experience, 
				"RPGActionRewards.TechnicalAbilitySkillLvlExp", "RPGActionRewards.SkillBookExpBalance"
			];
			type = "Proficiencies.TechnicalAbilitySkill";
		}
	];
}

CoolSkill_Training_Legendary : RewardBase
{
	string name = "TechAbilitySkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 400;
				} : RPGActionRewards.Experience, 
				"RPGActionRewards.CoolSkillLvlExp", "RPGActionRewards.SkillBookExpBalance"
			];
			type = "Proficiencies.CoolSkill";
		}
	];
}

StrengthTraining_Strong : RewardBase
{
	string name = "StrengthSkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 5000;
				} : RPGActionRewards.Experience
			];
			type = "Proficiencies.StrengthSkill";
		}
	];
}

ReflexesTraining_Strong : RewardBase
{
	string name = "ReflexesSkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 5000;
				} : RPGActionRewards.Experience
			];
			type = "Proficiencies.ReflexesSkill";
		}
	];
}

TechTraining_Strong : RewardBase
{
	string name = "TechnicalAbilitySkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 5000;
				} : RPGActionRewards.Experience
			];
			type = "Proficiencies.TechnicalAbilitySkill";
		}
	];
}

IntelligenceTraining_Strong : RewardBase
{
	string name = "IntelligenceSkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 5000;
				} : RPGActionRewards.Experience
			];
			type = "Proficiencies.IntelligenceSkill";
		}
	];
}

CoolTraining_Strong : RewardBase
{
	string name = "CoolSkill";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 5000;
				} : RPGActionRewards.Experience
			];
			type = "Proficiencies.CoolSkill";
		}
	];
}

GunslingerTraining : RewardBase
{
	string name = "Gunslinger";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 500;
				} : RPGActionRewards.Experience
			];
			type = "Proficiencies.Gunslinger";
		}
	];
}

AssaultTraining : RewardBase
{
	string name = "Assault";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 500;
				} : RPGActionRewards.Experience
			];
			type = "Proficiencies.Assault";
		}
	];
}

KenjutsuTraining : RewardBase
{
	string name = "Kenjutsu";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 500;
				} : RPGActionRewards.Experience
			];
			type = "Proficiencies.Kenjutsu";
		}
	];
}

DemolitionTraining : RewardBase
{
	string name = "Demolition";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 500;
				} : RPGActionRewards.Experience
			];
			type = "Proficiencies.Demolition";
		}
	];
}

BrawlingTraining : RewardBase
{
	string name = "Brawling";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 500;
				} : RPGActionRewards.Experience
			];
			type = "Proficiencies.Brawling";
		}
	];
}

ColdBloodTraining : RewardBase
{
	string name = "Cold Blood";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 500;
				} : RPGActionRewards.Experience
			];
			type = "Proficiencies.ColdBlood";
		}
	];
}

StealthTraining : RewardBase
{
	string name = "Stealth";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 500;
				} : RPGActionRewards.Experience
			];
			type = "Proficiencies.Stealth";
		}
	];
}

CombatHackingTraining : RewardBase
{
	string name = "Combat Hacking";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 500;
				} : RPGActionRewards.Experience
			];
			type = "Proficiencies.CombatHacking";
		}
	];
}

AthleticsTraining : RewardBase
{
	string name = "Athletics";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 500;
				} : RPGActionRewards.Experience
			];
			type = "Proficiencies.Athletics";
		}
	];
}

HackingTraining : RewardBase
{
	string name = "Netrunning";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 500;
				} : RPGActionRewards.Experience
			];
			type = "Proficiencies.Hacking";
		}
	];
}

EngineeringTraining : RewardBase
{
	string name = "Engineering";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 500;
				} : RPGActionRewards.Experience
			];
			type = "Proficiencies.Engineering";
		}
	];
}

CraftingTraining : RewardBase
{
	string name = "Crafting";
	fk< XPPoints >[] experience = 
	[
		{
			quantityModifiers = 
			[
				{
					value = 500;
				} : RPGActionRewards.Experience
			];
			type = "Proficiencies.Crafting";
		}
	];
}

bls_ina_se5_melee_01_training : AthleticsTraining
{
}

wat_kab_netrunner_01_training : HackingTraining
{
}

wat_lch_melee_01_training : AthleticsTraining
{
}

wat_lch_melee_02_training : AthleticsTraining
{
}

wbr_jpn_melee_01_training : AthleticsTraining
{
}

std_arr_melee_01_training : AthleticsTraining
{
}

pac_cvi_melee_01_training : AthleticsTraining
{
}

hey_rey_netrunner_01_training : HackingTraining
{
}

wbr_jpn_netrunner_01_training : HackingTraining
{
}

pac_wwd_melee_01_training : AthleticsTraining
{
}

wbr_jpn_netrunner_02_training : HackingTraining
{
}

