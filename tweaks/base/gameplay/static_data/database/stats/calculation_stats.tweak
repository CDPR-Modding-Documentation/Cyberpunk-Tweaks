package BaseStats
using RTDB

RandomCurveInput : Stat
{
	enumName = "RandomCurveInput";
	enumComment = "Used to store a uniform random number that can be converted to a different stat using a curve probability distribution";
	flags = 
	[
		"ExcludeRootCombination"
	];
}

IntrinsicZoomLevelBonus : WeaponStat
{
	enumName = "IntrinsicZoomLevelBonus";
	localizedName = "LocKey#79491";
	bool displayPlus = true;
	bool isMultiplier = true;
}

IntrinsicReloadTimeBonus : WeaponStat
{
	enumName = "IntrinsicReloadTimeBonus";
	localizedName = "LocKey#79490";
	bool isPercentage = true;
}

IntrinsicQuickHackUploadBonus : Stat
{
	enumName = "IntrinsicQuickHackUploadBonus";
	localizedName = "LocKey#79391";
	bool displayPlus = true;
	bool isPercentage = true;
}

DummyModCritDamage : Stat
{
	enumName = "DummyModCritDamage";
	flags = 
	[
		"EquipOnPlayer"
	];
	bool isPercentage = true;
	bool displayPlus = true;
	localizedName = "LocKey#36320";
	improvementRelation = "ImprovementRelation.Direct";
}

StrengthSkillcheckBonus : Stat
{
	enumName = "StrengthSkillcheckBonus";
	localizedName = "LocKey#80461";
	flags = 
	[
		"EquipOnPlayer"
	];
}

IntelligenceSkillcheckBonus : Stat
{
	enumName = "IntelligenceSkillcheckBonus";
	localizedName = "LocKey#80462";
	flags = 
	[
		"EquipOnPlayer"
	];
}

TechnicalAbilitySkillcheckBonus : Stat
{
	enumName = "TechnicalAbilitySkillcheckBonus";
	localizedName = "LocKey#80463";
	flags = 
	[
		"EquipOnPlayer"
	];
}

BonusDamagePerHit : Stat
{
	enumName = "BonusDamagePerHit";
}

ScalingBlocked : Stat
{
	enumName = "ScalingBlocked";
	min = 0;
	max = 1;
}

