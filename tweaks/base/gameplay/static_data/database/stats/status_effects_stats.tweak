package BaseStats
using RTDB

EffectApplicationChance : Stat
{
	CName[] flags = 
	[
		"EquipOnPlayer", "EquipOnNPC"
	];
	min = 0;
	max = 100;
}

BleedingApplicationRate : EffectApplicationChance
{
	enumName = "BleedingApplicationRate";
	localizedName = "LocKey#40228";
	decimalPlaces = 1;
	displayPercent = true;
	displayPlus = true;
}

BurningApplicationRate : EffectApplicationChance
{
	enumName = "BurningApplicationRate";
	localizedName = "LocKey#40229";
	decimalPlaces = 1;
	displayPercent = true;
	displayPlus = true;
}

PoisonedApplicationRate : EffectApplicationChance
{
	enumName = "PoisonedApplicationRate";
	localizedName = "LocKey#40230";
	decimalPlaces = 1;
	displayPercent = true;
	displayPlus = true;
}

ElectrocutedApplicationRate : EffectApplicationChance
{
	enumName = "ElectrocutedApplicationRate";
	localizedName = "LocKey#40231";
	decimalPlaces = 1;
	displayPercent = true;
	displayPlus = true;
}

StunApplicationRate : EffectApplicationChance
{
	enumName = "StunApplicationRate";
	localizedName = "LocKey#85864";
	decimalPlaces = 1;
	displayPercent = true;
	displayPlus = true;
}

SEApplicationRateBasedOnWeaponCharge : EffectApplicationChance
{
	enumName = "SEApplicationRateBasedOnWeaponCharge";
}

StatusEffectDurationBonus : Stat
{
	min = 0;
	max = 2;
}

CanBleedingCriticallyHit : StatFlag
{
	enumName = "CanBleedingCriticallyHit";
}

CanBurningCriticallyHit : StatFlag
{
	enumName = "CanBurningCriticallyHit";
}

CanBleedingSlowTarget : StatFlag
{
	enumName = "CanBleedingSlowTarget";
}

CanFistsCauseBleeding : StatFlag
{
	enumName = "CanFistsCauseBleeding";
}

DurationBonusBleeding : StatusEffectDurationBonus
{
	enumName = "DurationBonusBleeding";
	enumComment = "";
	max = 10;
	flags = 
	[
		"EquipOnPlayer"
	];
}

DurationBonusPoisoned : StatusEffectDurationBonus
{
	enumName = "DurationBonusPoisoned";
	enumComment = "";
	max = 50;
}

DurationBonusBurning : StatusEffectDurationBonus
{
	enumName = "DurationBonusBurning";
	enumComment = "";
}

DurationBonusElectrified : StatusEffectDurationBonus
{
	enumName = "DurationBonusElectrified";
	enumComment = "";
}

DurationBonusStun : StatusEffectDurationBonus
{
	enumName = "DurationBonusStun";
	enumComment = "";
}

DurationBonusQuickhack : StatusEffectDurationBonus
{
	enumName = "DurationBonusQuickhack";
	flags = 
	[
		"EquipOnPlayer"
	];
	localizedName = "LocKey#52722";
	decimalPlaces = 1;
	displayPercent = true;
	displayPlus = true;
	multiplyBy100InText = true;
	improvementRelation = "ImprovementRelation.Direct";
}

DurationBonusControlQuickhack : StatusEffectDurationBonus
{
	enumName = "DurationBonusControlQuickhack";
}

DurationBonusCovertQuickhack : StatusEffectDurationBonus
{
	enumName = "DurationBonusCovertQuickhack";
}

DurationBonusOverclock : StatusEffectDurationBonus
{
	enumName = "DurationBonusOverclock";
}

DurationReductionDot : Stat
{
	enumName = "DurationReductionDot";
	flags = 
	[
		"EquipOnPlayer"
	];
	localizedName = "LocKey#79451";
	displayPercent = true;
	displayPlus = true;
	min = 0;
	max = 100;
}

StatusEffectMaxStacksBonus : Stat
{
	min = 0;
	max = 10;
}

MaxStacksBonusBleeding : StatusEffectMaxStacksBonus
{
	enumName = "MaxStacksBonusBleeding";
}

MaxStacksBonusBurning : StatusEffectMaxStacksBonus
{
	enumName = "MaxStacksBonusBurning";
}

MechanicalsBuffDPSBonus : Stat
{
	enumName = "MechanicalsBuffDPSBonus";
}

SimpleWeaponMod04 : Stat
{
	enumName = "SimpleWeaponMod04";
}

AirDrop_BurningApplicationRate : Stat
{
	min = 0;
	max = 100;
	enumName = "AirDrop_BurningApplicationRate";
}

Liberty_Padre_BurningApplicationRate : Stat
{
	min = 0;
	max = 100;
	enumName = "Liberty_Padre_BurningApplicationRate";
}

ManiacStatCounter : Stat
{
	enumName = "ManiacStatCounter";
	min = 0;
	max = 1;
}

Nue_Jackie_Headshot_Counter : Stat
{
	enumName = "ChingadaMadreBonanza";
	min = 0;
	max = 10;
}

MultiKill_Counter : Stat
{
	enumName = "MultiKill_Counter";
	min = 0;
	max = 10;
}

