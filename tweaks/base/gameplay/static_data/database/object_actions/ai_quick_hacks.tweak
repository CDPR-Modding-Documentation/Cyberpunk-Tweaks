package AIQuickHack
using RTDB, AIQuickHackStatusEffect, ChoiceCaptionParts, Prereqs

AIQuickHack : ObjectAction
{
	bool isQuickHack = true;
	objectActionType = "ObjectActionType.Remote";
	targetPrereqs = 
	[
		{
			statType = "QuickHackImmunity";
			valueToCheck = 1;
			comparisonType = "Less";
		} : StatPrereq, 
		{
			valueToCheck = 0;
			statPoolType = "QuickHackUpload";
			comparisonType = "LessOrEqual";
		} : StatPoolPrereq
	];
	targetActivePrereqs = 
	[
		"Prereqs.QuickHackUploadingPrereq"
	];
	cooldown = 
	{
		duration = 12.f;
	} : Cooldown;
}

HackBurning : AIQuickHack
{
	activationTime += 
	[
		{
			statType = "BaseStats.QuickHackUpload";
			modifierType = "Additive";
			value = 5.f;
		} : ConstantStatModifier
	];
	completionEffects = 
	[
		{
			statusEffect = "AIQuickHackStatusEffect.HackBurning";
			recipient = "ObjectActionReference.Target";
		}
	];
	objectActionUI = "Interactions.BurningHack";
}

HackOverheat : AIQuickHack
{
	activationTime += 
	[
		{
			statType = "BaseStats.QuickHackUpload";
			modifierType = "Additive";
			value = 5.f;
		} : ConstantStatModifier
	];
	completionEffects = 
	[
		{
			statusEffect = "AIQuickHackStatusEffect.HackOverheat";
			recipient = "ObjectActionReference.Target";
		}
	];
	objectActionUI = "Interactions.OverheatHack";
}

HackOverload : AIQuickHack
{
	activationTime += 
	[
		{
			statType = "BaseStats.QuickHackUpload";
			modifierType = "Additive";
			value = 5.f;
		} : ConstantStatModifier
	];
	completionEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.Overload";
			recipient = "ObjectActionReference.Target";
		}
	];
	objectActionUI = "Interactions.EMPOverloadHack";
}

HackWeaponMalfunction : AIQuickHack
{
	activationTime += 
	[
		{
			statType = "BaseStats.QuickHackUpload";
			modifierType = "Additive";
			value = 10.f;
		} : ConstantStatModifier
	];
	completionEffects = 
	[
		{
			statusEffect = "AIQuickHackStatusEffect.HackWeaponMalfunction";
			recipient = "ObjectActionReference.Target";
		}
	];
	objectActionUI = "Interactions.WeaponMalfunctionHack";
}

HackLocomotion : AIQuickHack
{
	activationTime += 
	[
		{
			statType = "BaseStats.QuickHackUpload";
			modifierType = "Additive";
			value = 10.f;
		} : ConstantStatModifier
	];
	completionEffects = 
	[
		{
			statusEffect = "AIQuickHackStatusEffect.HackLocomotion";
			recipient = "ObjectActionReference.Target";
		}
	];
	objectActionUI = "Interactions.LocomotionMalfunctionHack";
}

HackCyberware : AIQuickHack
{
	activationTime += 
	[
		{
			statType = "BaseStats.QuickHackUpload";
			modifierType = "Additive";
			value = 10.f;
		} : ConstantStatModifier
	];
	completionEffects = 
	[
		{
			statusEffect = "AIQuickHackStatusEffect.HackCyberware";
			recipient = "ObjectActionReference.Target";
		}
	];
	objectActionUI = "Interactions.CyberwareMalfunctionHack";
}

HackDeath : AIQuickHack
{
	activationTime += 
	[
		{
			statType = "BaseStats.QuickHackUpload";
			modifierType = "Additive";
			value = 15.f;
		} : ConstantStatModifier
	];
	completionEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.ForceKill";
			recipient = "ObjectActionReference.Target";
		}
	];
	objectActionUI = "Interactions.DeathHack";
}

HackRevealPosition : AIQuickHack
{
	activationTime += 
	[
		{
			statType = "BaseStats.QuickHackUpload";
			modifierType = "Additive";
			value = 8.f;
		} : ConstantStatModifier
	];
	objectActionUI = "Interactions.RevealPositionHack";
}

BuffCamo : AIQuickHack
{
	activationTime += 
	[
		{
			statType = "BaseStats.QuickHackUpload";
			modifierType = "Additive";
			value = 2.f;
		} : ConstantStatModifier
	];
	completionEffects = 
	[
		{
			statusEffect = "AIQuickHackStatusEffect.BuffCamo";
			recipient = "ObjectActionReference.Target";
		}
	];
	objectActionUI = "Interactions.LocomotionMalfunctionHack";
}

BuffSturdiness : AIQuickHack
{
	activationTime += 
	[
		{
			statType = "BaseStats.QuickHackUpload";
			modifierType = "Additive";
			value = 2.f;
		} : ConstantStatModifier
	];
	completionEffects = 
	[
		{
			statusEffect = "AIQuickHackStatusEffect.BuffSturdiness";
			recipient = "ObjectActionReference.Target";
		}
	];
	objectActionUI = "Interactions.LocomotionMalfunctionHack";
}

TrackedVirus : AIQuickHack
{
	activationTime += 
	[
		{
			statType = "BaseStats.QuickHackUpload";
			modifierType = "Additive";
			value = 0.f;
		} : ConstantStatModifier
	];
	completionEffects = 
	[
		{
			statusEffect = "AIQuickHackStatusEffect.TrackedVirus";
			recipient = "ObjectActionReference.Target";
		}
	];
}

