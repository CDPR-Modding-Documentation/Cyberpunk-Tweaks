package Gang_LongBlade
using RTDB, ReactionsActions, CombatDecorator, MeleeActions, MeleeOneHandedActions

Map : AINodeMap
{
	map = 
	[
		{
			node = "GenericArchetype.MeleeCloseAttackLight02Condition";
			isOverriddenBy = "";
		}, 
		{
			node = "GenericArchetype.MeleeAttackLight01Condition";
			isOverriddenBy = "";
		}, 
		{
			node = "GenericArchetype.MeleeAttackLight03Condition";
			isOverriddenBy = "";
		}, 
		{
			node = "GenericArchetype.MeleeStrongSingle02Condition";
			isOverriddenBy = "";
		}, 
		{
			node = "GenericArchetype.MeleeChargeSingle02Condition";
			isOverriddenBy = "";
		}, 
		{
			node = "GenericArchetype.MeleeChargeSingle03Condition";
			isOverriddenBy = "";
		}, 
		{
			node = "GenericArchetype.MeleeChargeJump02Condition";
			isOverriddenBy = "";
		}, 
		{
			node = "MeleeActions.SimpleMeleeCombatComboSelector";
			isOverriddenBy = "Gang_LongBlade.CustomSimpleMeleeCombatComboSelector";
		}, 
		{
			node = "MeleeActions.MeleeParry01Selector";
			isOverriddenBy = "Gang_LongBlade.MeleeParry01Selector";
		}, 
		{
			node = "MeleeActions.MeleeBlock01Selector";
			isOverriddenBy = "Gang_LongBlade.MeleeBlock01Selector";
		}, 
		{
			node = "MeleeActions.MeleeKerenzikovDodge01Selector";
			isOverriddenBy = "Gang_LongBlade.MeleeKerenzikovDodge01Selector";
		}, 
		{
			node = "MeleeActions.MeleeBlockDodge01Selector";
			isOverriddenBy = "Gang_LongBlade.MeleeBlockDodge01Selector";
		}, 
		{
			node = "MeleeActions.MeleeBlockDodgeToParry01Selector";
			isOverriddenBy = "Gang_LongBlade.MeleeBlockDodgeToParry01Selector";
		}, 
		{
			node = "MeleeActions.MeleePushAttack01Selector";
			isOverriddenBy = "Gang_LongBlade.MeleePushAttack01Selector";
		}, 
		{
			node = "MeleeActions.MeleeLightCloseSingleLeft01Selector";
			isOverriddenBy = "Gang_LongBlade.MeleeLightCloseSingleLeft01Selector";
		}, 
		{
			node = "MeleeActions.MeleeLightCloseSingleRight01Selector";
			isOverriddenBy = "Gang_LongBlade.MeleeLightCloseSingleRight01Selector";
		}, 
		{
			node = "MeleeActions.MeleeLightCloseSingleBack01Selector";
			isOverriddenBy = "Gang_LongBlade.MeleeLightCloseSingleBack01Selector";
		}, 
		{
			node = "MeleeActions.MeleeLightCloseCombo01Selector";
			isOverriddenBy = "Gang_LongBlade.MeleeLightCloseCombo01Selector";
		}, 
		{
			node = "MeleeActions.MeleeLightCloseCombo02Selector";
			isOverriddenBy = "Gang_LongBlade.MeleeLightCloseCombo02Selector";
		}, 
		{
			node = "MeleeActions.MeleeLightCombo01Selector";
			isOverriddenBy = "Gang_LongBlade.MeleeLightCombo01Selector";
		}, 
		{
			node = "MeleeActions.MeleeLightCombo02Selector";
			isOverriddenBy = "Gang_LongBlade.MeleeLightCombo02Selector";
		}, 
		{
			node = "MeleeActions.MeleeStrongSingle01Selector";
			isOverriddenBy = "Gang_LongBlade.MeleeStrongSingle01Selector";
		}, 
		{
			node = "MeleeActions.MeleeStrongSingle02Selector";
			isOverriddenBy = "Gang_LongBlade.MeleeStrongSingle02Selector";
		}, 
		{
			node = "MeleeActions.MeleeChargeSingle01Selector";
			isOverriddenBy = "Gang_LongBlade.MeleeChargeSingle01Selector";
		}, 
		{
			node = "MeleeActions.MeleeChargeSingle02Selector";
			isOverriddenBy = "Gang_LongBlade.MeleeChargeSingle02Selector";
		}, 
		{
			node = "MeleeActions.MeleeChargeJump01Selector";
			isOverriddenBy = "Gang_LongBlade.MeleeChargeJump01Selector";
		}, 
		{
			node = "MeleeActions.MeleeChargeJump02Selector";
			isOverriddenBy = "Gang_LongBlade.MeleeChargeJump02Selector";
		}, 
		{
			node = "MeleeActions.DeflectReactionCompositeSelectorDefinition";
			isOverriddenBy = "Gang_LongBlade.DeflectReactionCompositeSelectorDefinition";
		}, 
		{
			node = "MeleeActions.MeleeTauntSupportAreaSelector";
			isOverriddenBy = "Gang_LongBlade.MeleeTauntSupportAreaSelector";
		}, 
		{
			node = "MeleeActions.MeleeTauntCombatAreaSelector";
			isOverriddenBy = "Gang_LongBlade.MeleeTauntCombatAreaSelector";
		}, 
		{
			node = "MeleeActions.MeleeTauntContactAreaSelector";
			isOverriddenBy = "Gang_LongBlade.MeleeTauntContactAreaSelector";
		}, 
		{
			node = "MeleeActions.MeleeTauntHitReactionSelector";
			isOverriddenBy = "Gang_LongBlade.MeleeTauntHitReactionSelector";
		}, 
		{
			node = "MeleeActions.MeleeTauntPreAttackSelector";
			isOverriddenBy = "Gang_LongBlade.MeleeTauntPreAttackSelector";
		}
	];
}

CustomSimpleMeleeCombatComboSelector : AIActionSmartComposite
{
	nodes = 
	[
		"MeleeOneHandedActions.SimpleMeleeCombatComboDefinition"
	];
}

MeleeCloseAttackLight02Condition : MeleeCloseAttackLight02ConditionDefinition
{
	disableAction = true;
}

MeleeAttackLight01Condition : MeleeAttackLight01ConditionDefinition
{
	disableAction = true;
}

MeleeAttackLight03Condition : MeleeAttackLight03ConditionDefinition
{
	disableAction = true;
}

MeleeStrongSingle02Condition : MeleeStrongSingle02ConditionDefinition
{
	disableAction = true;
}

MeleeChargeSingle02Condition : MeleeChargeSandevistan02ConditionDefinition
{
	disableAction = true;
}

MeleeChargeSingle03Condition : MeleeChargeSandevistan03ConditionDefinition
{
	disableAction = true;
}

MeleeChargeJump02Condition : MeleeChargeJump02ConditionDefinition
{
	disableAction = true;
}

MeleeParry01Selector : MeleeActions.MeleeParry01Selector
{
	nodes = 
	[
		"MeleeOneHandedActions.MeleeParry01Definition"
	];
}

MeleeBlock01Selector : MeleeActions.MeleeBlock01Selector
{
	nodes = 
	[
		"MeleeOneHandedActions.MeleeBlock01Definition"
	];
}

MeleeKerenzikovDodge01Selector : MeleeActions.MeleeKerenzikovDodge01Selector
{
	nodes = 
	[
		"MeleeOneHandedActions.MeleeKerenzikovDodge01Definition"
	];
}

MeleeBlockDodge01Selector : MeleeActions.MeleeBlockDodge01Selector
{
	nodes = 
	[
		"MeleeOneHandedActions.MeleeBlockDodge01Definition"
	];
}

MeleeBlockDodgeToParry01Selector : MeleeActions.MeleeBlockDodgeToParry01Selector
{
	nodes = 
	[
		"MeleeOneHandedActions.MeleeBlockDodgeToParry01Definition"
	];
}

MeleePushAttack01Selector : MeleeActions.MeleePushAttack01Selector
{
	nodes = 
	[
		"MeleeOneHandedActions.MeleePushAttack01Definition"
	];
}

MeleeLightCloseSingleLeft01Selector : MeleeActions.MeleeLightCloseSingleLeft01Selector
{
	nodes = 
	[
		"MeleeOneHandedActions.MeleeLightCloseSingleLeft01Definition"
	];
}

MeleeLightCloseSingleRight01Selector : MeleeActions.MeleeLightCloseSingleRight01Selector
{
	nodes = 
	[
		"MeleeOneHandedActions.MeleeLightCloseSingleRight01Definition"
	];
}

MeleeLightCloseSingleBack01Selector : MeleeActions.MeleeLightCloseSingleBack01Selector
{
	nodes = 
	[
		"MeleeOneHandedActions.MeleeLightCloseSingleBack01Definition"
	];
}

MeleeLightCloseCombo01Selector : MeleeActions.MeleeLightCloseCombo01Selector
{
	nodes = 
	[
		"MeleeOneHandedActions.MeleeLightCloseCombo01Definition"
	];
}

MeleeLightCloseCombo02Selector : MeleeActions.MeleeLightCloseCombo02Selector
{
	nodes = 
	[
		"MeleeOneHandedActions.MeleeLightCloseCombo02Definition"
	];
}

MeleeLightCombo01Selector : MeleeActions.MeleeLightCombo01Selector
{
	nodes = 
	[
		"MeleeOneHandedActions.MeleeLightCombo01Definition"
	];
}

MeleeLightCombo02Selector : MeleeActions.MeleeLightCombo02Selector
{
	nodes = 
	[
		"MeleeOneHandedActions.MeleeLightCombo02Definition"
	];
}

MeleeStrongSingle01Selector : MeleeActions.MeleeStrongSingle01Selector
{
	nodes = 
	[
		"MeleeOneHandedActions.MeleeStrongSingle01Definition"
	];
}

MeleeStrongSingle02Selector : MeleeActions.MeleeStrongSingle02Selector
{
	nodes = 
	[
		"MeleeOneHandedActions.MeleeStrongSingle02Definition"
	];
}

MeleeChargeSingle01Selector : MeleeActions.MeleeChargeSingle01Selector
{
	nodes = 
	[
		"MeleeOneHandedActions.MeleeChargeSingle01Definition"
	];
}

MeleeChargeSingle02Selector : MeleeActions.MeleeChargeSingle02Selector
{
	nodes = 
	[
		"MeleeOneHandedActions.MeleeChargeSingle02Definition"
	];
}

MeleeChargeJump01Selector : MeleeActions.MeleeChargeJump01Selector
{
	nodes = 
	[
		"MeleeOneHandedActions.MeleeChargeJump01Definition"
	];
}

MeleeChargeJump02Selector : MeleeActions.MeleeChargeJump02Selector
{
	nodes = 
	[
		"MeleeOneHandedActions.MeleeChargeJump02Definition"
	];
}

DeflectReactionCompositeSelectorDefinition : MeleeActions.DeflectReactionCompositeSelectorDefinition
{
	nodes = 
	[
		"MeleeOneHandedActions.DeflectReactionSelectorDefinition", "MeleeActions.DeflectReactionSelectorDefinition"
	];
}

MeleeTauntSupportAreaSelector : MeleeActions.MeleeTauntSupportAreaSelector
{
	actions = 
	[
		"MeleeOneHandedActions.MeleeTauntSupportAreaDefinition"
	];
	defaultAction = "GenericArchetype.Success";
}

MeleeTauntCombatAreaSelector : MeleeActions.MeleeTauntCombatAreaSelector
{
	actions = 
	[
		"MeleeOneHandedActions.MeleeTauntCombatAreaDefinition"
	];
	defaultAction = "GenericArchetype.Success";
}

MeleeTauntContactAreaSelector : MeleeActions.MeleeTauntContactAreaSelector
{
	actions = 
	[
		"MeleeOneHandedActions.MeleeTauntContactAreaDefinition"
	];
	defaultAction = "GenericArchetype.Success";
}

MeleeTauntHitReactionSelector : MeleeActions.MeleeTauntHitReactionSelector
{
	actions = 
	[
		"MeleeOneHandedActions.MeleeTauntHitReactionDefinition"
	];
	defaultAction = "GenericArchetype.Success";
}

MeleeTauntPreAttackSelector : MeleeActions.MeleeTauntPreAttackSelector
{
	actions = 
	[
		"MeleeOneHandedActions.MeleeTauntPreAttackDefinition"
	];
	defaultAction = "GenericArchetype.Success";
}

