package 0xF242B6C8F
using RTDB, ItemHandling, AIActionTarget, Condition, CoverActions

0x7A0BDE62E : AIAction
{
}

0xFD7C1B2D1 : AIActionSmartComposite
{
	disableActionsLimit = true;
	repeat = 0;
	nodes = 
	[
		"0xF242B6C8F.0x14BC224BFC", "0xF242B6C8F.0xCCFA57F2F", "0xF242B6C8F.0xC9FC5CE31", "0xF242B6C8F.0x17E083DD2B", "0xF242B6C8F.0x19CBA2BC32", "0xF242B6C8F.0x92A1AF6B9", "0xF242B6C8F.0xB37BEA251", "0xF242B6C8F.0x111F0AA178", "GenericArchetype.Failure"
	];
}

0x182E076EA8 : AIActionSmartComposite
{
	disableActionsLimit = true;
	repeat = 0;
	nodes = 
	[
		"0xF242B6C8F.0x14BC224BFC", "0xF242B6C8F.0xC9FC5CE31", "0xF242B6C8F.0x1E9DC55613", "0xF242B6C8F.0x20A6572727", "0xF242B6C8F.0x13E9163741", "0xF242B6C8F.0x181A292E3F", "0xF242B6C8F.0x7A0BDE62E"
	];
	gracefulInterruptionConditionCheckInterval = 0.5f;
	gracefulInterruptionCondition = 
	[
		{
			condition = 
			{
				OR = 
				[
					"Condition.FriendlyTargetInStatesSprint"
				];
			} : AIActionOR;
		}
	];
}

0x18256266E3 : AIActionSmartComposite
{
	repeat = 0;
	nodes = 
	[
		"ItemHandling.ReloadSelector", "0xF242B6C8F.0x139B9CE405", "0xF242B6C8F.0x7A0BDE62E"
	];
}

0x15ADCA091C : AIActionSmartComposite
{
	repeat = 0;
	nodes = 
	[
		"ItemHandling.ReloadSelector", "0xF242B6C8F.0x139B9CE405", "0xF242B6C8F.0x2065116CE7", "0xF242B6C8F.0x7A0BDE62E"
	];
}

0x22AC5BD25C : AIActionSmartComposite
{
	repeat = 0;
	nodes = 
	[
		"0xF242B6C8F.0x7A0BDE62E"
	];
}

0x17430FF53C : AIActionSmartComposite
{
	repeat = 0;
	nodes = 
	[
		"0xF242B6C8F.0x1C9DE05451", "GenericArchetype.Success"
	];
}

0x1C9DE05451 : AIActionSelector
{
	activationCondition = "0xF242B6C8F.0x17C6D37027";
	actions = 
	[
		"MovementActions.LocomotionMalfunction", "0xF242B6C8F.0x1114BC1DDC", "0xF242B6C8F.0x10102E0868", "0xF242B6C8F.0xE0812F78A", "0xF242B6C8F.0x1323574F0B"
	];
	defaultAction = "0xF242B6C8F.0x7A0BDE62E";
}

0x24E477DD49 : AIActionSelector
{
	activationCondition = "0xF242B6C8F.0x1F6B0420E2";
	actions = 
	[
		"0xF242B6C8F.0x21F54D4BF4"
	];
	defaultAction = "0xF242B6C8F.0x7A0BDE62E";
}

0x1CFBCE963E : AIActionSelector
{
	activationCondition = 
	{
		condition = "Condition.IsFollower";
	};
	actions = 
	[
		"0xF242B6C8F.0x14E9285A83"
	];
	defaultAction = "0xF242B6C8F.0x7A0BDE62E";
}

0x1BE8A153E9 : MovementPolicy
{
	target = "AIActionTarget.FriendlyTarget";
	movementType = "Walk";
	distance = 4.f;
	dontUseStart = true;
	getOutOfWay = true;
	deadAngle = 40.f;
	dynamicTargetUpdateTimer = 0.2f;
	ignoreSpotReservation = true;
}

0x1BF4DC4111 : 0x1BE8A153E9
{
	strafingTarget = "AIActionTarget.CombatTarget";
}

0x15CC8AE890 : MovementPolicy
{
	target = "AIActionTarget.FriendlyTarget";
	movementType = "Walk";
	tolerance = 3.f;
	distance = 3.f;
	deadAngle = 40.f;
	useFollowSlots = true;
	spatialHintMults = ( 1.f, 2.f, 3.f );
	maxPathLengthToDirectDistanceRatioCurve = "FollowersRatio";
	maxPathLength = 100.f;
}

0x10E492A051 : 0x15CC8AE890
{
}

0x2EDAB18131 : 0x212F9FC6F3
{
	deadAngle = 130.f;
}

0x212F9FC6F3 : 0x15CC8AE890
{
	strafingTarget = "AIActionTarget.FriendlyTarget";
}

0x2C29A5F8A9 : 0x1FB2259E8D
{
	deadAngle = 90.f;
}

0x1FB2259E8D : 0x15CC8AE890
{
	strafingTarget = "AIActionTarget.TopThreat";
}

0x135EA7BEC5 : MovementPolicy
{
	target = "AIActionTarget.FriendlyTarget";
	movementType = "Walk";
	tolerance = 3.f;
	distance = 3.f;
	deadAngle = 40.f;
	useFollowSlots = true;
	spatialHintMults = ( 1.f, 2.f, 3.f );
	maxPathLengthToDirectDistanceRatioCurve = "FollowersRatio";
	maxPathLength = 100.f;
	keepLineOfSight = "Avoid";
}

0x3541395940 : 0x28F9B325C4
{
	deadAngle = 130.f;
}

0x28F9B325C4 : 0x135EA7BEC5
{
	strafingTarget = "AIActionTarget.FriendlyTarget";
}

0x3350961E68 : 0x26FDC75D93
{
	deadAngle = 90.f;
}

0x26FDC75D93 : 0x135EA7BEC5
{
	strafingTarget = "AIActionTarget.TopThreat";
}

0x16EA41B1BD : MovementPolicy
{
	target = "AIActionTarget.FriendlyTarget";
	movementType = "Sprint";
	tolerance = 3.f;
	distance = 3.f;
	useFollowSlots = true;
	spatialHintMults = ( 1.f, 2.f, 3.f );
	maxPathLengthToDirectDistanceRatioCurve = "FollowersRatio";
	maxPathLength = 100.f;
}

0x14BC224BFC : AIAction
{
	activationCondition = 
	{
		condition = 
		{
			OR = 
			[
				"Condition.EnterCoverCondition", "Condition.TicketTakeCover", "Condition.IsEnteringOrLeavingCover", "Condition.IsUsingOffMeshLink", "Condition.NotMovePolicyCooldown"
			];
		} : AIActionOR;
	};
	loop = 
	{
		duration = 0.2f;
	};
}

0x17C6D37027 : AIActionCondition
{
	condition = 
	{
		AND = 
		[
			"Condition.NotTicketTakeCover", "Condition.InStatesMoving", "Condition.NotIsEnteringOrLeavingCover", "Condition.NotIsUsingOffMeshLink", "Condition.NotAIMoveCommand", "Condition.NotAIUseWorkspotCommand"
		];
	} : AIActionAND;
}

0x1F6B0420E2 : AIActionCondition
{
	condition = 
	{
		AND = 
		[
			"Condition.NotIsFriendInVeryFarRange", "Condition.CalculatePathToFollower", "Condition.NotIsCoverSelected", "Condition.NotIsEnteringOrLeavingCover", "Condition.NotIsUsingOffMeshLink", "Condition.NotAIMoveCommand", "Condition.NotAIUseWorkspotCommand"
		];
	} : AIActionAND;
}

0x11993ED351 : 0xF242B6C8F.0x7A0BDE62E
{
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.IsFollower"
			];
		} : AIActionAND;
	};
}

0x10102E0868 : AIAction
{
	completeWithFailure = true;
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.CombatSprintToFollowerCondition"
			];
		} : AIActionAND;
	};
	loop = 
	{
		movePolicy = 
		{
			target = "AIActionTarget.FriendlyTarget";
			movementType = "Sprint";
			tolerance = 3.f;
			distance = 5.f;
			zDiff = 3.2f;
			avoidThreatRange = 0.f;
			avoidThreatCost = 0.f;
			spatialHintMults = ( 1.f, 1.5f, 2.f );
		};
		toNextPhaseConditionCheckInterval = 0.2f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					OR = 
					[
						"Condition.CombatMovementInterruptionCondition", "Condition.SprintToFollowerInterruptionCondition"
					];
				} : AIActionOR;
			}
		];
	};
	subActions = 
	[
		{
			cooldowns = 
			[
				{
					duration = 0.f;
				} : 0xF242B6C8F.0x17778B3282
			];
		} : AISubActionStartCooldown
	];
}

0xE0812F78A : AIAction
{
	completeWithFailure = true;
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.CombatTooFarToFollowerCondition"
			];
		} : AIActionAND;
	};
	loop = 
	{
		movePolicy = 
		{
			target = "AIActionTarget.FriendlyTarget";
			movementType = "Walk";
			tolerance = 4.f;
			distance = 2.f;
			zDiff = 3.2f;
			avoidThreatRange = 0.f;
			avoidThreatCost = 0.f;
			spatialHintMults = ( 1.f, 1.5f, 2.f );
		};
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					OR = 
					[
						"Condition.CombatMovementInterruptionCondition", "Condition.SprintToFollowerInterruptionCondition"
					];
				} : AIActionOR;
			}
		];
	};
	subActions = 
	[
		{
			cooldowns = 
			[
				{
					duration = 0.f;
				} : 0xF242B6C8F.0x17778B3282
			];
		} : AISubActionStartCooldown
	];
}

0x1323574F0B : AIAction
{
	loop = 
	{
		movePolicy = 
		{
			target = "AIActionTarget.FriendlyTarget";
			strafingTarget = "AIActionTarget.CombatTarget";
			movementType = "Walk";
			tolerance = 3.f;
			distance = 5.f;
			avoidThreatRange = 0.f;
			avoidThreatCost = 0.f;
			spatialHintMults = ( 1.f, 1.5f, 2.f );
			keepLineOfSight = "Keep";
		};
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					OR = 
					[
						"Condition.CombatMovementInterruptionCondition", "Condition.GetOutOfWayDoublePredictionCond", "Condition.CombatSprintToFollowerCondition"
					];
				} : AIActionOR;
			}
		];
	};
	subActions = 
	[
		{
			cooldowns = 
			[
				{
					duration = 0.f;
				} : 0xF242B6C8F.0x17778B3282
			];
		} : AISubActionStartCooldown
	];
}

0x21F54D4BF4 : 0xF242B6C8F.0x1323574F0B
{
	activationCondition = 
	{
	};
}

0x2786A2E3E2 : IsFriendInVeryFarRange
{
	fk< AIActionTarget > source = "AIActionTarget.FriendlyTarget";
	fk< AIActionTarget > target = "AIActionTarget.CombatTarget";
	distance = ( 0.0f, 34.0f );
}

0x14E9285A83 : AIAction
{
	loop = 
	{
		toNextPhaseConditionCheckInterval = 1.f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					OR = 
					[
						"Condition.NotFollower"
					];
				} : AIActionOR;
			}
		];
	};
	subActions = 
	[
		{
			preset = "FollowerCompound";
			initialPreset = "FollowerCompound";
			gatheringObjectCenter = "AIActionTarget.FriendlyTarget";
		} : AISubActionChangeCoverSelectionPreset
	];
}

0xC917AFA36 : AIAction
{
	activationCondition = 
	{
		condition = "Condition.TopThreat";
	};
}

0x15C61E44C8 : AIAction
{
	activationCondition = 
	{
		condition = 
		{
			OR = 
			[
				"Condition.IsInCameraFrustrum", "Condition.IsTargetInCameraFrustrum"
			];
		} : AIActionOR;
	};
}

0x249FDB2183 : AIActionCondition
{
	condition = "Condition.IncreaseFollowingSpeedCondition";
}

0x23DABB1A92 : AIActionCondition
{
	condition = "Condition.NotIncreaseFollowingSpeedCondition";
}

0x111F0AA178 : AIAction
{
	completeWithFailure = true;
	activationCondition = 
	{
		condition = "Condition.GetOutOfWayDoublePredictionCond";
	};
	loop = 
	{
		movePolicy = "0xF242B6C8F.0x1BE8A153E9";
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = "Condition.LeaveGetOutOfWayCondition";
			}
		];
	};
}

0x1114BC1DDC : AIAction
{
	activationCondition = 
	{
		condition = "Condition.GetOutOfWayDoublePredictionCond";
	};
	loop = 
	{
		movePolicy = "0xF242B6C8F.0x1BF4DC4111";
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = "Condition.LeaveGetOutOfWayCondition";
			}
		];
	};
}

0x181A292E3F : AIAction
{
	activationCondition = 
	{
		condition = "Condition.GetOutOfWayDoublePredictionCond";
	};
	loop = 
	{
		movePolicy = "0xF242B6C8F.0x1BE8A153E9";
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					OR = 
					[
						"Condition.LeaveGetOutOfWayCondition", "Condition.EnterCoverCondition"
					];
				} : AIActionOR;
			}
		];
	};
}

0x92A1AF6B9 : AIAction
{
	completeWithFailure = true;
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.NotGetOutOfWayDoublePredictionCond", "Condition.CalculatePathToFollower", "Condition.FollowFarEnterCondition"
			];
		} : AIActionAND;
	};
	loop = 
	{
		movePolicy = "0xF242B6C8F.0x16EA41B1BD";
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = "Condition.FollowFarStopCondition";
			}
		];
	};
}

0xB37BEA251 : AIAction
{
	completeWithFailure = true;
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.NotGetOutOfWayDoublePredictionCond", "Condition.CalculatePathToFollower", "Condition.IsMoving", "Condition.NotFollowFarEnterCondition"
			];
		} : AIActionAND;
	};
	loop = 
	{
		movePolicy = "0xF242B6C8F.0x15CC8AE890";
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					AND = 
					[
						"Condition.NotIsUsingOffMeshLink", {
							OR = 
							[
								"Condition.FollowFarEnterCondition", "Condition.GetOutOfWayDoublePredictionCond", "Condition.EnterStealthCondition", "Condition.EnterVehicleAICondition", "Condition.NotIsMoving"
							];
						} : AIActionOR
					];
				} : AIActionAND;
			}
		];
	};
}

0x19CBA2BC32 : AIActionSequence
{
	failOnNodeActivationConditionFailure = true;
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.NotGetOutOfWayDoublePredictionCond", "Condition.NotTopThreatMinAccuracySharedValue0"
			];
		} : AIActionAND;
	};
	actions = 
	[
		"0xF242B6C8F.0x17FE5FE87E", "0xF242B6C8F.0xA5589B06F"
	];
}

0x20A6572727 : 0x19CBA2BC32
{
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.NotGetOutOfWayDoublePredictionCond"
			];
		} : AIActionAND;
	};
	actions = 
	[
		"0xF242B6C8F.0x1EE600DB8A", "0xF242B6C8F.0x11E2570092"
	];
}

0x17E083DD2B : AIActionSequence
{
	failOnNodeActivationConditionFailure = true;
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.NotGetOutOfWayDoublePredictionCond", "Condition.TopThreatMinAccuracySharedValue0dot5"
			];
		} : AIActionAND;
	};
	actions = 
	[
		"0xF242B6C8F.0x156CF07AC7", "0xF242B6C8F.0x19F1DB4FDD"
	];
}

0x1E9DC55613 : AIActionSequence
{
	failOnNodeActivationConditionFailure = true;
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.TopThreatMinAccuracySharedValue0dot5"
			];
		} : AIActionAND;
	};
	actions = 
	[
		"0xF242B6C8F.0x1CA0A79E80", "0xF242B6C8F.0x203EDB122D"
	];
}

0x17FE5FE87E : AIAction
{
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.FollowerAbove40deg", "Condition.NotIsMoving"
			];
		} : AIActionAND;
	};
	loop = 
	{
		movePolicy = "0xF242B6C8F.0x212F9FC6F3";
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					OR = 
					[
						"Condition.LeavingTurningCond"
					];
				} : AIActionOR;
			}
		];
	};
}

0x1EE600DB8A : 0x17FE5FE87E
{
	loop = 
	{
		movePolicy = "0xF242B6C8F.0x28F9B325C4";
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					OR = 
					[
						"Condition.LeavingTurningStealthCond"
					];
				} : AIActionOR;
			}
		];
	};
}

0x156CF07AC7 : AIAction
{
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.FollowerAbove40deg", "Condition.NotIsMoving"
			];
		} : AIActionAND;
	};
	loop = 
	{
		movePolicy = "0xF242B6C8F.0x1FB2259E8D";
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					OR = 
					[
						"Condition.LeavingTurningCond"
					];
				} : AIActionOR;
			}
		];
	};
}

0x1CA0A79E80 : 0x156CF07AC7
{
	loop = 
	{
		movePolicy = "0xF242B6C8F.0x26FDC75D93";
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					OR = 
					[
						"Condition.LeavingTurningStealthCond"
					];
				} : AIActionOR;
			}
		];
	};
}

0x19F1DB4FDD : 0xA5589B06F
{
	loop = 
	{
		movePolicy = "0xF242B6C8F.0x2C29A5F8A9";
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					OR = 
					[
						"Condition.LeavingStayingCond", "Condition.NotTopThreatMinAccuracySharedValue0"
					];
				} : AIActionOR;
			}
		];
	};
}

0xA5589B06F : AIAction
{
	completeWithFailure = true;
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.NotIsMoving"
			];
		} : AIActionAND;
	};
	loop = 
	{
		movePolicy = "0xF242B6C8F.0x2EDAB18131";
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					OR = 
					[
						"Condition.LeavingStayingCond", "Condition.TopThreatMinAccuracySharedValue0dot5"
					];
				} : AIActionOR;
			}
		];
	};
}

0x203EDB122D : 0x11E2570092
{
	loop = 
	{
		movePolicy = "0xF242B6C8F.0x3350961E68";
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					OR = 
					[
						"Condition.LeavingStayingStealthCond", "Condition.NotTopThreatMinAccuracySharedValue0"
					];
				} : AIActionOR;
			}
		];
	};
}

0x11E2570092 : 0xA5589B06F
{
	loop = 
	{
		movePolicy = "0xF242B6C8F.0x3541395940";
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					OR = 
					[
						"Condition.LeavingStayingStealthCond", "Condition.TopThreatMinAccuracySharedValue0dot5"
					];
				} : AIActionOR;
			}
		];
	};
}

0x1C4C83A47E : AIActionAND
{
	AND = 
	[
		"Condition.IsMoving", "Condition.NotIsFriendInMiddleRange"
	];
}

0x13E9163741 : AIAction
{
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"0xF242B6C8F.0x1C4C83A47E"
			];
		} : AIActionAND;
	};
	loop = 
	{
		movePolicy = "0xF242B6C8F.0x135EA7BEC5";
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					AND = 
					[
						"Condition.NotIsUsingOffMeshLink", {
							OR = 
							[
								"Condition.EnterCoverCondition", "Condition.NotIsMoving", "Condition.GetOutOfWayDoublePredictionCond", "Condition.EnterVehicleAICondition"
							];
						} : AIActionOR
					];
				} : AIActionAND;
			}
		];
	};
}

0x10D0982DB8 : AIAction
{
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.FollowerPOVAbove270deg", "Condition.NotFollowerInVehicle", "Condition.NotIsUsingOffMeshLink", "Condition.IsFollowerOnNavmesh", {
					OR = 
					[
						"Condition.PathFindingFailed", {
							AND = 
							[
								"Condition.NotIsMoving", "Condition.NotCalculatePathToFollower"
							];
						} : AIActionAND
					];
				} : AIActionOR, 
				"Condition.TeleportToFollowerCooldown", "Condition.NotFriendlyTargetInStatesJump"
			];
		} : AIActionAND;
	};
	loop = 
	{
	};
	subActions = 
	[
		"0xF242B6C8F.0x12C3CD749C"
	];
}

0x16D14843FD : 0x10D0982DB8
{
}

0x139B9CE405 : ItemHandling.EquipPrimarySequence
{
	activationCondition = "0xF242B6C8F.0x1EBC6ACD3C";
}

0x2065116CE7 : AIActionSequence
{
	activationCondition = "0xF242B6C8F.0x20F52B0420";
	actions = 
	[
		"0xF242B6C8F.0x15674BD9F2", "0xF242B6C8F.0xDA41F4778", "0xF242B6C8F.0x7A0BDE62E"
	];
}

0x15674BD9F2 : AIAction
{
	loop = 
	{
		duration = 0.666f;
	};
}

0x14384D90B0 : AISubActionStartCooldown
{
	cooldowns = 
	[
		{
			duration = 2.f;
			name = "SwitchWeapon";
		}
	];
}

0x14B2042699 : AISubActionStartCooldown
{
	delay = -1.f;
	cooldowns = 
	[
		{
			duration = 2.f;
			name = "SwitchStates";
		}
	];
}

0x12C3CD749C : AISubActionStartCooldown
{
	cooldowns = 
	[
		{
			duration = 6.f;
			name = "TeleportToFollower";
		}
	];
}

0x1EBC6ACD3C : AIActionCondition
{
	condition = 
	{
		AND = 
		[
			"Condition.NotHasAnyWeapon", "Condition.SwitchWeaponCooldown", "Condition.FriendlyTargetHasWeapon", {
				OR = 
				[
					"Condition.TopThreat", "Condition.NotFriendlyTargetInStatesPublic", "Condition.StatusEffectNPCForceEquipPrimaryWeapon", "Condition.StatusEffectNPCForceEquipSecondaryWeapon"
				];
			} : AIActionOR
		];
	} : AIActionAND;
}

0x20F52B0420 : AIActionCondition
{
	condition = 
	{
		AND = 
		[
			"Condition.SwitchWeaponCooldown", "Condition.HasAnyItem", "Condition.NotInCover", "Condition.NotIsEnteringOrLeavingCover", "Condition.NotIsUsingOffMeshLink", "Condition.NotSprint", "Condition.NotStatusEffectNPCForceEquipPrimaryWeapon", "Condition.NotStatusEffectNPCForceEquipSecondaryWeapon", {
				OR = 
				[
					"Condition.NotFriendlyTargetHasWeapon", "Condition.FriendlyTargetInStatesPublic"
				];
			} : AIActionOR
		];
	} : AIActionAND;
}

0xDA41F4778 : AIAction
{
	tickets = 
	[
		"AITicketType.Equip"
	];
	activationCondition = "0xF242B6C8F.0x20F52B0420";
	loop = 
	{
		duration = 1.333f;
		changeNPCState = 
		{
			upperBodyState = "Equip";
		};
	};
	loopSubActions = 
	[
		{
			attachmentSlot = "AttachmentSlots.WeaponRight";
			animationTime = 1.333f;
			delay = -1.f;
		} : AISubActionForceUnequip, 
		{
			attachmentSlot = "AttachmentSlots.WeaponLeft";
			animationTime = 1.333f;
			delay = -1.f;
		} : AISubActionForceUnequip, 
		"0xF242B6C8F.0x14384D90B0"
	];
}

0x163350B5E7 : AIAction
{
	tickets = 
	[
		"AITicketType.Equip"
	];
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.HasAnyItem"
			];
		} : AIActionAND;
	};
	loop = 
	{
		duration = 1.f;
		changeNPCState = 
		{
			upperBodyState = "Equip";
		};
	};
	loopSubActions = 
	[
		{
			attachmentSlot = "AttachmentSlots.WeaponRight";
			animationTime = 1.333f;
			delay = -1.f;
		} : AISubActionForceUnequip, 
		{
			attachmentSlot = "AttachmentSlots.WeaponLeft";
			animationTime = 1.333f;
			delay = -1.f;
		} : AISubActionForceUnequip, 
		"0xF242B6C8F.0x14384D90B0"
	];
}

0x54CC9A9C1 : AIAction
{
	tickets = 
	[
		"AITicketType.TakeCover"
	];
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.EnterCoverCondition"
			];
		} : AIActionAND;
	};
	loop = 
	{
		changeNPCState = 
		{
			stanceState = "Cover";
		};
		conditionSuccessDuration = 0.5f;
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					AND = 
					[
						"Condition.NotIsUsingOffMeshLink", "Condition.NotIsEnteringOrLeavingCover", {
							OR = 
							[
								"Condition.NotTopThreat", {
									AND = 
									[
										"Condition.SwitchStatesCooldown", "Condition.NotFriendlyTargetInStatesCrouch", "Condition.NotTicketEquip", {
											OR = 
											[
												"Condition.FriendlyTargetInStatesSprint", "Condition.NotTopThreatMinAccuracySharedValue0dot5", "Condition.StatusEffectFollowerGameplayRestrictionNoCombat"
											];
										} : AIActionOR
									];
								} : AIActionAND
							];
						} : AIActionOR
					];
				} : AIActionAND;
			}
		];
	};
}

0x1D2A62C35F : AIActionSmartComposite
{
	nodes = 
	[
		"0xF242B6C8F.0xDB201F73E", "0xF242B6C8F.0x10063E4A36", "GenericArchetype.WaitASecond"
	];
	type = "AISmartCompositeType.Sequence";
}

0x17778B3282 : AIActionCooldown
{
	name = "SetDesiredCover";
	duration = 5.f;
}

0x1746F638B2 : AIAction
{
	loop = 
	{
	};
	subActions = 
	[
		{
			preset = "Follower";
			initialPreset = "Follower";
			gatheringObjectCenter = "AIActionTarget.FriendlyTarget";
			coverDisablingDuration = 7.0f;
		} : AISubActionChangeCoverSelectionPreset
	];
}

0x14EBC6D90E : AIAction
{
	loop = 
	{
		toNextPhaseConditionCheckInterval = 0.2f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					AND = 
					[
						"Condition.NotIsEnteringOrLeavingCover", "Condition.DesiredCoverChanged", "Condition.NotIsUsingOffMeshLink"
					];
				} : AIActionAND;
			}
		];
	};
}

0x13A8C8A98B : AIActionAND
{
	AND = 
	[
		"Condition.NotIsEnteringOrLeavingCover", {
			OR = 
			[
				"Condition.DesiredCoverChanged", "Condition.NotInCover", "Condition.NotIsCoverInMiddleRange", "Condition.IsFriendInTooCloseRange"
			];
		} : AIActionOR
	];
}

0x14CB90FFC0 : AIAction
{
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.EnterCoverCondition"
			];
		} : AIActionAND;
	};
	loop = 
	{
		changeNPCState = 
		{
			locomotionMode = "Static";
		};
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					OR = 
					[
						"0xF242B6C8F.0x13A8C8A98B", "Condition.TopThreatAbove120deg"
					];
				} : AIActionOR;
			}
		];
	};
	animData = 
	{
		animVariationSubAction = 
		{
			setInitialCoverData = true;
		} : AISubActionCover;
	};
}

0x14595BEA6E : AISubActionCover
{
	target = "AIActionTarget.TopThreat";
	setCoverExposureAnim = true;
	coverExposureMethods = 
	[
		"Crouching_Step_Left", "Crouching_Step_Right", "Stand_Up"
	];
}

0xDB201F73E : AIAction
{
	loop = 
	{
		duration = 0.f;
	};
	subActions = 
	[
		"0xF242B6C8F.0x14595BEA6E"
	];
	animData = 
	{
		animVariationSubAction = "0xF242B6C8F.0x14595BEA6E";
	};
}

0x10063E4A36 : CoverPeek
{
	activationCondition = "";
	cooldowns = 
	[
		{
			name = "StealthCoverPeek";
			duration = 8.5f;
		}
	];
	lookats = 
	[
		{
			preset = "LookatPreset.Gang_Rifle_Body_LootAt";
			target = 
			{
				trackingMode = "TargetTracking.RealPosition";
				targetSlot = "Head";
			} : AIActionTarget.TopThreat;
		}
	];
	allowBlendDuration = 0.2f;
}

0x176F482051 : AIActionSmartComposite
{
	repeat = 0;
	nodes = 
	[
		"0xF242B6C8F.0x1BB457A4F7", "0xF242B6C8F.0x1D46AE53B1", "0xF242B6C8F.0x7A0BDE62E"
	];
}

0x1F43DB4F4F : 0x1CF16F6C86
{
	invert = true;
}

0x1CF16F6C86 : AITargetCond
{
	target = "AIActionTarget.ObjectOfInterest";
}

0x1BB457A4F7 : AIAction
{
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.NotIsMoving"
			];
		} : AIActionAND;
	};
	loop = 
	{
		toNextPhaseConditionCheckInterval = 1.f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					AND = 
					[
						"Condition.IsMoving"
					];
				} : AIActionAND;
			}
		];
	};
	loopSubActions = 
	[
		{
			randomPointDurationRange = ( 0.5f, 2.5f );
			squadMateDurationRange = ( 3.0f, 6.0f );
			friendlyTargetDurationRange = ( 3.0f, 10.0f );
			closestThreatDurationRange = ( 3.0f, 6.0f );
			choosingRandomPointChanceWeight = 4.0f;
			choosingSquadMateChanceWeight = 4.0f;
			choosingFriendlyTargetChanceWeight = 6.0f;
			choosingClosestThreatChanceWeight = 16.0f;
			squadMateWatchingMaxAngle = 120.0f;
			friendlyTargetWatchingMaxAngle = 140.0f;
			closestThreatWatchingMaxAngle = 120.0f;
			randomPointZRotationAngleRange = ( -60.0f, 60.0f );
			randomPointYRotationAngleRange = ( -6.0f, 10.0f );
		} : AISubActionGeneratePointOfInterestTarget
	];
	lookats = 
	[
		{
			activationCondition = 
			{
				condition = 
				{
					AND = 
					[
						"0xF242B6C8F.0x1CF16F6C86", "Condition.NotInStatesStealth"
					];
				} : AIActionAND;
			};
			target = 
			{
				trackingMode = "TargetTracking.RealPosition";
				targetSlot = "Head";
			} : AIActionTarget.ObjectOfInterest;
			preset = "LookatPreset.LookAtObjectOfInterest";
		}, 
		{
			activationCondition = 
			{
				condition = 
				{
					AND = 
					[
						"0xF242B6C8F.0x1CF16F6C86", "Condition.InStatesStealth"
					];
				} : AIActionAND;
			};
			target = 
			{
				trackingMode = "TargetTracking.RealPosition";
				targetSlot = "Head";
			} : AIActionTarget.ObjectOfInterest;
			preset = "LookatPreset.LookAtObjectOfInterestStealth";
		}, 
		{
			activationCondition = 
			{
				condition = 
				{
					AND = 
					[
						"0xF242B6C8F.0x1F43DB4F4F", "Condition.NotInStatesStealth"
					];
				} : AIActionAND;
			};
			target = 
			{
				trackingMode = "TargetTracking.RealPosition";
			} : AIActionTarget.PointOfInterest;
			preset = "LookatPreset.LookAtPointOfInterest";
		}, 
		{
			activationCondition = 
			{
				condition = 
				{
					AND = 
					[
						"0xF242B6C8F.0x1F43DB4F4F", "Condition.InStatesStealth"
					];
				} : AIActionAND;
			};
			target = 
			{
				trackingMode = "TargetTracking.RealPosition";
			} : AIActionTarget.PointOfInterest;
			preset = "LookatPreset.LookAtPointOfInterestStealth";
		}
	];
	subActionsCanCompleteAction = true;
}

0x1D382C16ED : AIAction
{
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.FollowerBelow180deg", "Condition.NotIsMoving"
			];
		} : AIActionAND;
	};
	loop = 
	{
	};
	loopSubActions = 
	[
		{
			randomPointDurationRange = ( 2.0f, 4.0f );
			friendlyTargetDurationRange = ( 2.0f, 4.0f );
			choosingRandomPointChanceWeight = 0.0f;
			choosingSquadMateChanceWeight = 0.0f;
			choosingFriendlyTargetChanceWeight = 1.0f;
			choosingClosestThreatChanceWeight = 1.0f;
			friendlyTargetWatchingMaxAngle = 90.0f;
			randomPointZRotationAngleRange = ( -10.0f, 10.0f );
			randomPointYRotationAngleRange = ( -0.0f, 0.0f );
		} : AISubActionGeneratePointOfInterestTarget
	];
	lookats = 
	[
		{
			activationCondition = 
			{
				condition = 
				{
					AND = 
					[
						"Condition.NotInStatesStealth"
					];
				} : AIActionAND;
			};
			target = 
			{
				trackingMode = "TargetTracking.RealPosition";
				targetSlot = "Head";
			} : AIActionTarget.FriendlyTarget;
			preset = "LookatPreset.LookAtObjectOfInterest";
		}, 
		{
			activationCondition = 
			{
				condition = 
				{
					AND = 
					[
						"Condition.InStatesStealth"
					];
				} : AIActionAND;
			};
			target = 
			{
				trackingMode = "TargetTracking.RealPosition";
				targetSlot = "Head";
			} : AIActionTarget.FriendlyTarget;
			preset = "LookatPreset.LookAtObjectOfInterestStealth";
		}
	];
	subActionsCanCompleteAction = true;
}

0x1D46AE53B1 : AIActionSequence
{
	actions = 
	[
		"0xF242B6C8F.0xE9B3253DF", "0xF242B6C8F.0x1D382C16ED"
	];
}

0x1CC591F802 : AIAction
{
	loop = 
	{
		toNextPhaseConditionCheckInterval = 1.f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					OR = 
					[
						"Condition.FollowerBelow180deg", "Condition.NotIsMoving"
					];
				} : AIActionOR;
			}
		];
	};
}

0xE9B3253DF : AIAction
{
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.FollowerBelow180deg"
			];
		} : AIActionAND;
	};
	lookats = 
	[
		{
			activationCondition = 
			{
				condition = 
				{
					AND = 
					[
						"Condition.NotInStatesStealth"
					];
				} : AIActionAND;
			};
			target = 
			{
				trackingMode = "TargetTracking.RealPosition";
				targetSlot = "Head";
			} : AIActionTarget.FriendlyTarget;
			preset = "LookatPreset.LookAtObjectOfInterest";
		}, 
		{
			activationCondition = 
			{
				condition = 
				{
					AND = 
					[
						"Condition.InStatesStealth"
					];
				} : AIActionAND;
			};
			target = 
			{
				trackingMode = "TargetTracking.RealPosition";
				targetSlot = "Head";
			} : AIActionTarget.FriendlyTarget;
			preset = "LookatPreset.LookAtObjectOfInterestStealth";
		}
	];
	loop = 
	{
		toNextPhaseConditionCheckInterval = 1.f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					OR = 
					[
						"Condition.FollowerAbove180deg", "Condition.NotIsMoving"
					];
				} : AIActionOR;
			}
		];
	};
}

0x1E62BCFFCD : 0x176F482051
{
}

0xA9084E3E1 : AIAction
{
	startup = 
	{
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					AND = 
					[
						"Condition.NotIsMoving"
					];
				} : AIActionAND;
			}
		];
	};
}

0xCCFA57F2F : AIActionSequence
{
	activationCondition = 
	{
		condition = "Condition.EnterStealthCondition";
	};
	actions = 
	[
		"0xF242B6C8F.0x191EB3F2C8", "0xF242B6C8F.0x15429F2380"
	];
}

0xD4C7C506A : AIAction
{
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.NotInStatesStealth", "Condition.NotInCover"
			];
		} : AIActionAND;
	};
	startup = 
	{
		duration = 0.2f;
	};
	loop = 
	{
		duration = 0.367f;
	};
	recovery = 
	{
		duration = 0.233f;
	};
	animData = 
	{
		animFeature = "IdleToStealth";
		animSlot = 
		{
		};
		weaponOverride = 2;
	};
}

0xD78E57290 : AIAction
{
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.InStatesStealth", "Condition.NotInCover"
			];
		} : AIActionAND;
	};
	startup = 
	{
		duration = 0.267f;
	};
	loop = 
	{
		duration = 0.333f;
	};
	recovery = 
	{
		duration = 0.2f;
	};
	animData = 
	{
		animFeature = "StealthToIdle";
		animSlot = 
		{
		};
		weaponOverride = 2;
	};
}

0x191EB3F2C8 : 0xF242B6C8F.0xA9084E3E1
{
	loop = 
	{
		duration = 0.7f;
		toNextPhaseConditionCheckInterval = 0.35f;
		toNextPhaseCondition = 
		[
			{
				condition = "Condition.LeaveStealthCondition";
			}
		];
	};
}

0x15429F2380 : AIAction
{
	activationCondition = 
	{
		condition = "Condition.EnterStealthCondition";
	};
	loop = 
	{
		duration = 0.01f;
	};
	loopSubActions = 
	[
		{
			name = "EnterStealth";
		} : AISubActionQueueAIEvent, 
		"0xF242B6C8F.0x14B2042699"
	];
}

0xC5399CED0 : AIAction
{
	activationCondition = 
	{
		condition = "Condition.LeaveStealthCondition";
	};
}

0x147415D527 : AIActionSequence
{
	actions = 
	[
		"0xF242B6C8F.0x18F99F6E0B", "0xF242B6C8F.0x15DDB01411"
	];
}

0x18F99F6E0B : 0xF242B6C8F.0xA9084E3E1
{
	loop = 
	{
		duration = 0.7f;
		toNextPhaseConditionCheckInterval = 0.35f;
		toNextPhaseCondition = 
		[
			{
				condition = "Condition.EnterStealthCondition";
			}
		];
	};
}

0x15DDB01411 : AIAction
{
	activationCondition = 
	{
		condition = "Condition.LeaveStealthCondition";
	};
	loop = 
	{
		duration = 0.01f;
	};
	loopSubActions = 
	[
		{
			name = "LeaveStealth";
		} : AISubActionQueueAIEvent, 
		"0xF242B6C8F.0x14B2042699"
	];
}

0x151B549FCE : AIActionCondition
{
	condition = "Condition.EnterVehicleAICondition";
}

0xC9FC5CE31 : AIAction
{
	activationCondition = "0xF242B6C8F.0x151B549FCE";
	loop = 
	{
	};
	loopSubActions = 
	[
		{
			vehicle = "AIActionTarget.FriendlyTarget";
			mountInstantly = false;
		} : AISubActionMountVehicle
	];
}

0xBB88D6BDC : AIAction
{
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.IsFollower", "Condition.NotDriver", "Condition.NotFollowerInVehicle"
			];
		} : AIActionAND;
	};
	loop = 
	{
	};
	subActions = 
	[
		{
			name = "ExitVehicle";
		} : AISubActionQueueAIEvent
	];
}

