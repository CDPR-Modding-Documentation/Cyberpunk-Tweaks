package MeleeOneHandedActions
using RTDB, MeleeActions, MovementActions, DashAndDodgeActions, OdaBoss

DodgeHitReactionSelectorDefinition : AIActionSelector
{
	actions = 
	[
		"MeleeOneHandedActions.DodgeMeleeKerenzikovLeftDefinition", "MeleeOneHandedActions.DodgeHitMeleeLeftDefinition", "MeleeOneHandedActions.DodgeMeleeKerenzikovRightDefinition", "MeleeOneHandedActions.DodgeHitMeleeRightDefinition", "MeleeOneHandedActions.DodgeMeleeKerenzikovBackDefinition", "MeleeOneHandedActions.DodgeHitMeleeBackDefinition"
	];
	defaultAction = "MeleeOneHandedActions.SlowPushAttack01Definition";
}

DodgeMeleeSelectorDefinition : AIActionSelector
{
	actions = 
	[
		"MeleeOneHandedActions.DodgeMeleeKerenzikovLeftDefinition", "MeleeOneHandedActions.DodgeMeleeLeftDefinition", "MeleeOneHandedActions.DodgeMeleeKerenzikovRightDefinition", "MeleeOneHandedActions.DodgeMeleeRightDefinition", "MeleeOneHandedActions.DodgeMeleeKerenzikovBackDefinition"
	];
	defaultAction = "MeleeOneHandedActions.DodgeMeleeBackDefinition";
}

DodgeForParryMeleeSelectorDefinition : AIActionSelector
{
	actions = 
	[
		"MeleeOneHandedActions.DodgeMeleeForParryMeleeBackDefinition"
	];
	defaultAction = "GenericArchetype.Success";
}

KerenzikovDodgeSelectorDefinition : AIActionSelector
{
	actions = 
	[
		"MeleeOneHandedActions.DodgeKerenzikovLeftOnSpotDefinition", "MeleeOneHandedActions.DodgeKerenzikovRightOnSpotDefinition", "MeleeOneHandedActions.DodgeKerenzikovRightFrontDefinition", "MeleeOneHandedActions.DodgeKerenzikovLeftFrontDefinition"
	];
	defaultAction = "MeleeOneHandedActions.DodgeKerenzikovBackDefinition";
}

DodgeMeleeLeftDefinition : DashAndDodgeActions.DodgeMeleeLeftDefinition
{
	startup = 
	{
		duration = 0.333f;
		changeNPCState = 
		{
			hitReactionMode = "StaggerMin";
			upperBodyState = "Taunt";
		};
	};
	loop = 
	{
		duration = 0.333f;
		changeNPCState = 
		{
			hitReactionMode = "StaggerMin";
			upperBodyState = "Taunt";
		};
	};
	recovery = 
	{
		duration = 0.267f;
		changeNPCState = 
		{
			upperBodyState = "Taunt";
		};
	};
}

DodgeHitMeleeLeftDefinition : DashAndDodgeActions.DodgeHitMeleeLeftDefinition
{
	startup = 
	{
		duration = 0.333f;
		changeNPCState = 
		{
			hitReactionMode = "Unstoppable";
			upperBodyState = "Taunt";
		};
	};
	loop = 
	{
		duration = 0.333f;
		changeNPCState = 
		{
			hitReactionMode = "Unstoppable";
			upperBodyState = "Taunt";
		};
	};
	recovery = 
	{
		duration = 0.267f;
		changeNPCState = 
		{
			upperBodyState = "Taunt";
		};
	};
}

DodgeMeleeKerenzikovLeftDefinition : DashAndDodgeActions.DodgeMeleeKerenzikovLeftDefinition
{
}

DodgeMeleeRightDefinition : DashAndDodgeActions.DodgeMeleeRightDefinition
{
	startup = 
	{
		duration = 0.333f;
		changeNPCState = 
		{
			hitReactionMode = "StaggerMin";
			upperBodyState = "Taunt";
		};
	};
	loop = 
	{
		duration = 0.333f;
		changeNPCState = 
		{
			hitReactionMode = "StaggerMin";
			upperBodyState = "Taunt";
		};
	};
	recovery = 
	{
		duration = 0.267f;
		changeNPCState = 
		{
			upperBodyState = "Taunt";
		};
	};
}

DodgeHitMeleeRightDefinition : DashAndDodgeActions.DodgeHitMeleeRightDefinition
{
	startup = 
	{
		duration = 0.333f;
		changeNPCState = 
		{
			hitReactionMode = "Unstoppable";
			upperBodyState = "Taunt";
		};
	};
	loop = 
	{
		duration = 0.333f;
		changeNPCState = 
		{
			hitReactionMode = "Unstoppable";
			upperBodyState = "Taunt";
		};
	};
	recovery = 
	{
		duration = 0.267f;
		changeNPCState = 
		{
			upperBodyState = "Taunt";
		};
	};
}

DodgeMeleeKerenzikovRightDefinition : DashAndDodgeActions.DodgeMeleeKerenzikovRightDefinition
{
}

DodgeMeleeBackDefinition : DashAndDodgeActions.DodgeMeleeBackDefinition
{
}

DodgeHitMeleeBackDefinition : DashAndDodgeActions.DodgeHitMeleeBackDefinition
{
}

DodgeMeleeKerenzikovBackDefinition : DashAndDodgeActions.DodgeMeleeKerenzikovBackDefinition
{
}

DodgeMeleeForParryMeleeBackDefinition : DashAndDodgeActions.DodgeMeleeForParryMeleeBackDefinition
{
	loop = 
	{
		duration = 0.5f;
		changeNPCState = 
		{
			hitReactionMode = "Unstoppable";
			upperBodyState = "Taunt";
		};
	};
}

DodgeMeleeKerenzikovForParryMeleeBackDefinition : DashAndDodgeActions.DodgeMeleeKerenzikovForParryMeleeBackDefinition
{
	loop = 
	{
		duration = 0.3f;
		changeNPCState = 
		{
			hitReactionMode = "Unstoppable";
			upperBodyState = "Taunt";
		};
	};
}

DodgeKerenzikovBackDefinition : DashAndDodgeActions.DodgeKerenzikovBackDefinition
{
}

DodgeKerenzikovLeftFrontDefinition : DashAndDodgeActions.DodgeKerenzikovLeftFrontDefinition
{
}

DodgeKerenzikovRightFrontDefinition : DashAndDodgeActions.DodgeKerenzikovRightFrontDefinition
{
}

DodgeKerenzikovLeftOnSpotDefinition : DashAndDodgeActions.DodgeKerenzikovLeftOnSpotDefinition
{
	animData = 
	{
		animFeature = "DodgeLeftOnSpotKerenzikov";
		animVariationSubAction = 
		{
			animVariationRandomize = 
			[
				0, 1
			];
		} : AISubActionRandomize;
		animSlot = 
		{
			startupSlide = "DashAndDodgeActions.StepsSlideData";
			loopSlide = "DashAndDodgeActions.StepsSlideData";
			recoverySlide = "DashAndDodgeActions.StepsSlideData";
		};
	};
}

DodgeKerenzikovRightOnSpotDefinition : DashAndDodgeActions.DodgeKerenzikovRightOnSpotDefinition
{
	animData = 
	{
		animFeature = "DodgeRightOnSpotKerenzikov";
		animVariationSubAction = 
		{
			animVariationRandomize = 
			[
				0, 1, 2
			];
		} : AISubActionRandomize;
		animSlot = 
		{
			startupSlide = "DashAndDodgeActions.StepsSlideData";
			loopSlide = "DashAndDodgeActions.StepsSlideData";
			recoverySlide = "DashAndDodgeActions.StepsSlideData";
		};
	};
}

DeflectReactionSelectorDefinition : AIActionSelector
{
	actions = 
	[
		"MeleeOneHandedActions.DeflectedRightArmToRightDefinition", "MeleeOneHandedActions.DeflectedRightArmToLeftDefinition", "MeleeOneHandedActions.DeflectedRightArmToUpDefinition", "MeleeOneHandedActions.DeflectedRightArmToDownDefinition"
	];
	defaultAction = "MeleeActions.DeflectedDefaultDefinition";
}

MeleeTauntSupportAreaDefinition : MeleeActions.MeleeTauntSupportAreaDefinition
{
	animData = 
	{
		animFeature = "MeleeSupportTaunt";
		animVariationSubAction = 
		{
			animVariationRandomize = 
			[
				0, 1
			];
		} : AISubActionRandomize;
		animSlot = 
		{
		};
	};
}

MeleeTauntCombatAreaDefinition : MeleeActions.MeleeTauntCombatAreaDefinition
{
	animData = 
	{
		animFeature = "MeleeCombatTaunt";
		animVariationSubAction = 
		{
			animVariationRandomize = 
			[
				0, 1, 2, 3
			];
		} : AISubActionRandomize;
		animSlot = 
		{
		};
	};
}

MeleeTauntHitReactionDefinition : MeleeActions.MeleeTauntHitReactionDefinition
{
}

MeleeTauntPreAttackDefinition : MeleeActions.MeleeTauntPreAttackDefinition
{
	loop = 
	{
		duration = 1.35f;
		changeNPCState = 
		{
			upperBodyState = "Taunt";
		};
		toNextPhaseConditionCheckInterval = 0.5f;
		toNextPhaseCondition = 
		[
			{
				condition = 
				{
					OR = 
					[
						"Condition.CombatTarget"
					];
				} : AIActionOR;
			}
		];
	};
	animData = 
	{
		animFeature = "StepsIdle";
		animSlot = 
		{
		};
	};
}

MeleeTauntContactAreaDefinition : MeleeActions.MeleeTauntContactAreaDefinition
{
	animData = 
	{
		animFeature = "MeleeContactTaunt";
		animVariationSubAction = 
		{
			animVariationRandomize = 
			[
				0, 1
			];
		} : AISubActionRandomize;
		animSlot = 
		{
		};
	};
}

DashForwardToTarget : DashAndDodgeActions.DashForwardToTarget
{
	activationCondition = 
	{
		condition = 
		{
			AND = 
			[
				"Condition.CalculatePathStraightFullCheckToTarget", "Condition.TargetBetween2dot9and5dot1m", "Condition.NotPreviousAttackNameAtkFromSprint", "Condition.AbilityCanUseLegs"
			];
		} : AIActionAND;
	};
}

MeleeParry01Definition : AIActionSequence
{
	actions = 
	[
		"MeleeOneHandedActions.ParryMeleeAttack01Definition"
	];
}

MeleeBlock01Definition : AIActionSequence
{
	actions = 
	[
		"MeleeOneHandedActions.BlockMeleeAttack01Definition"
	];
}

MeleeKerenzikovDodge01Definition : AIActionSelector
{
	actions = 
	[
		"DashAndDodgeActions.DodgeMeleeKerenzikovLeftOnSpotDefinition", "DashAndDodgeActions.DodgeMeleeKerenzikovRightOnSpotDefinition", "MeleeOneHandedActions.DodgeMeleeKerenzikovRightDefinition", "MeleeOneHandedActions.DodgeMeleeKerenzikovLeftDefinition"
	];
	defaultAction = "MeleeOneHandedActions.DodgeMeleeKerenzikovBackDefinition";
}

MeleeBlockDodge01Definition : AIActionSequence
{
	actions = 
	[
		"MeleeOneHandedActions.BlockDodgeMeleeAttack01Definition"
	];
}

MeleeBlockDodgeToParry01Definition : AIActionSequence
{
	actions = 
	[
		"MeleeOneHandedActions.BlockDodgeMeleeAttackToParry01Definition", "CombatDecorator.MeleeParryState", "GenericArchetype.Success"
	];
}

MeleePushAttack01Definition : AIActionSequence
{
	actions = 
	[
		"MovementActions.MeleeWalkToCloseAttackRange", "MovementActions.MeleeMoveToAttackRange", "MovementActions.RotateInIdle", "MeleeActions.FailAttackRange", "MeleeActions.FriendlyFireMeleeCheck", "MeleeOneHandedActions.PushAttack01Definition"
	];
}

MeleeLightCloseSingleLeft01Definition : AIActionSequence
{
	actions = 
	[
		"MeleeOneHandedActions.CloseSingleLeft01MeleeAttackLight01Definition"
	];
}

MeleeLightCloseSingleRight01Definition : AIActionSequence
{
	actions = 
	[
		"MeleeOneHandedActions.CloseSingleRight01MeleeAttackLight01Definition"
	];
}

MeleeLightCloseSingleBack01Definition : AIActionSequence
{
	actions = 
	[
		"MeleeOneHandedActions.CloseSingleBack01MeleeAttackLight01Definition"
	];
}

MeleeLightCloseCombo01Definition : AIActionSequence
{
	actions = 
	[
		"MovementActions.MeleeWalkToCloseAttackRange", "MovementActions.MeleeMoveToCloseAttackRange", "MovementActions.RotateInIdle", "MeleeActions.FailAttackRange", "MeleeActions.FriendlyFireMeleeCheck", "MeleeOneHandedActions.CloseCombo01MeleeAttackLight01Definition", "MeleeOneHandedActions.CloseCombo01MeleeAttackLight01RecoverMissDefinition", "MeleeOneHandedActions.CloseCombo01MeleeAttackLight02Definition", "MeleeOneHandedActions.CloseCombo01MeleeAttackLight02RecoverMissDefinition", "MeleeOneHandedActions.CloseCombo01MeleeAttackLight02RecoverHitDefinition"
	];
}

MeleeLightCloseCombo02Definition : AIActionSequence
{
	actions = [];
}

SimpleMeleeCombatComboDefinition : AIActionSequence
{
	actions = 
	[
		"MovementActions.SimpleMeleeCombatWalkToCloseAttackRange", "MovementActions.SimpleMeleeCombatMoveToCloseAttackRange", "MovementActions.SimpleMeleeCombatWoundedMoveToCloseAttackRange", "MovementActions.RotateInIdle", "MeleeActions.FailAttackRange", "MeleeActions.FriendlyFireMeleeCheck", "MeleeOneHandedActions.Combo01MeleeAttackLight01FromIdleDefinition", "MeleeOneHandedActions.Combo01MeleeAttackLight01Definition", "MeleeOneHandedActions.Combo01MeleeAttackLight01RecoverMissDefinition", "MeleeOneHandedActions.Combo01MeleeAttackLight02Definition", "MeleeOneHandedActions.Combo01MeleeAttackLight02RecoverMissDefinition", "MeleeOneHandedActions.Combo01MeleeAttackLight02RecoverHitDefinition"
	];
	hasMemory = false;
}

MeleeLightCombo01Definition : AIActionSequence
{
	actions = 
	[
		"MovementActions.MeleeWalkToCloseAttackRange", "MovementActions.MeleeMoveToAttackRange", "MovementActions.RotateInIdle", "MeleeActions.FailAttackRange", "MeleeActions.FriendlyFireMeleeCheck", "MeleeOneHandedActions.Combo01MeleeAttackLight01FromIdleDefinition", "MeleeOneHandedActions.Combo01MeleeAttackLight01Definition", "MeleeOneHandedActions.Combo01MeleeAttackLight01RecoverMissDefinition", "MeleeOneHandedActions.Combo01MeleeAttackLight02Definition", "MeleeOneHandedActions.Combo01MeleeAttackLight02RecoverMissDefinition", "MeleeOneHandedActions.Combo01MeleeAttackLight02RecoverHitDefinition"
	];
}

MeleeLightCombo02Definition : AIActionSequence
{
	actions = 
	[
		"MovementActions.MeleeWalkToCloseAttackRange", "MovementActions.MeleeMoveToAttackRange", "MovementActions.RotateInIdle", "MeleeActions.FailAttackRange", "MeleeActions.FriendlyFireMeleeCheck", "MeleeOneHandedActions.Combo02MeleeAttackLight01FromIdleDefinition", "MeleeOneHandedActions.Combo02MeleeAttackLight01Definition", "MeleeOneHandedActions.Combo02MeleeAttackLight01RecoverMissDefinition", "MeleeOneHandedActions.Combo02MeleeAttackLight02Definition", "MeleeOneHandedActions.Combo02MeleeAttackLight02RecoverMissDefinition", "MeleeOneHandedActions.Combo02MeleeAttackLight02RecoverHitDefinition"
	];
}

MeleeStrongSingle01Definition : AIActionSequence
{
	actions = 
	[
		"MovementActions.MeleeWalkToCloseAttackRange", "MovementActions.MeleeMoveToStrongAttackRange", "MovementActions.RotateInIdle", "MeleeActions.FailAttackRange", "MeleeActions.FriendlyFireMeleeCheck", "MeleeOneHandedActions.SingleMeleeAttackStrong01FromIdleDefinition", "MeleeOneHandedActions.SingleMeleeAttackStrong01Definition", "MeleeOneHandedActions.SingleMeleeAttackStrong01RecoverMissDefinition", "MeleeOneHandedActions.SingleMeleeAttackStrong01RecoverHitDefinition"
	];
}

MeleeStrongSingle02Definition : AIActionSequence
{
	actions = 
	[
		"MovementActions.MeleeWalkToCloseAttackRange", "MovementActions.MeleeMoveToStrongAttackRange", "MovementActions.RotateInIdle", "MeleeActions.FailAttackRange", "MeleeActions.FriendlyFireMeleeCheck", "MeleeOneHandedActions.SingleMeleeAttackStrong02FromIdleDefinition", "MeleeOneHandedActions.SingleMeleeAttackStrong02Definition", "MeleeOneHandedActions.SingleMeleeAttackStrong02RecoverMissDefinition", "MeleeOneHandedActions.SingleMeleeAttackStrong02RecoverHitDefinition"
	];
}

MeleeChargeSingle01Definition : AIActionSequence
{
	actions = 
	[
		"MovementActions.MeleeMoveToChargeAttackRange", "MeleeOneHandedActions.SingleMeleeAttackCharge01Definition", "MeleeOneHandedActions.SingleMeleeAttackCharge01RecoverMissDefinition", "MeleeOneHandedActions.SingleMeleeAttackCharge01RecoverHitDefinition"
	];
}

MeleeChargeSingle02Definition : AIActionSequence
{
	actions = [];
}

MeleeChargeJump01Definition : AIActionSequence
{
	actions = 
	[
		"MovementActions.MeleeMoveToChargeJumpAttackRange", "MovementActions.MeleeMoveToChargeJumpAttackStraightPath", "MeleeActions.FailAttackRangeChargedJump", "MeleeOneHandedActions.SingleMeleeAttackChargeJump01TauntDefinition", "MeleeOneHandedActions.SingleMeleeAttackChargeJump01Definition", "MeleeOneHandedActions.SingleMeleeAttackChargeJump01RecoverHitDefinition"
	];
}

MeleeChargeJump02Definition : AIActionSequence
{
	actions = [];
}

DeflectedRightArmToRightDefinition : AIAction
{
	activationCondition = 
	{
		condition = 
		{
			OR = 
			[
				"Condition.PreviousAttackNameCloseSingleRight01MeleeAttackLight01", "Condition.PreviousAttackNameCloseSingleBack01MeleeAttackLight01", "Condition.PreviousAttackNameCloseCombo01MeleeAttackLight02", "Condition.PreviousAttackNameCombo02MeleeAttackLight01", "Condition.PreviousAttackNameCombo02MeleeAttackLight02", "Condition.PreviousAttackNameSingleMeleeAttackStrong02", "Condition.PreviousAttackNameSingleMeleeAttackCharge01", "Condition.PreviousAttackNameInfiniteGenericMeleeAttackFromAttack01"
			];
		} : AIActionOR;
	};
	startup = 
	{
		duration = 0.5f;
	};
	loop = 
	{
		duration = 0.7f;
	};
	recovery = 
	{
		duration = 0.86f;
	};
	animData = 
	{
		animFeature = "DeflectedRightArmToRight";
		animSlot = 
		{
		};
	};
}

DeflectedRightArmToLeftDefinition : AIAction
{
	activationCondition = 
	{
		condition = 
		{
			OR = 
			[
				"Condition.PreviousAttackNameCombo01MeleeAttackLight02", "Condition.PreviousAttackNameInfiniteGenericMeleeAttackStartup01", "Condition.PreviousAttackNameInfiniteGenericMeleeAttackStartup02"
			];
		} : AIActionOR;
	};
	startup = 
	{
		duration = 0.5f;
	};
	loop = 
	{
		duration = 0.63f;
	};
	recovery = 
	{
		duration = 1.f;
	};
	animData = 
	{
		animFeature = "DeflectedRightArmToLeft";
		animSlot = 
		{
		};
	};
}

DeflectedRightArmToUpDefinition : AIAction
{
	activationCondition = 
	{
		condition = 
		{
			OR = 
			[
				"Condition.PreviousAttackNameCloseCombo01MeleeAttackLight01", "Condition.PreviousAttackNameCombo01MeleeAttackLight01", "Condition.PreviousAttackNameInfiniteGenericMeleeAttackFromAttack03"
			];
		} : AIActionOR;
	};
	startup = 
	{
		duration = 0.4f;
	};
	loop = 
	{
		duration = 0.86f;
	};
	recovery = 
	{
		duration = 0.8f;
	};
	animData = 
	{
		animFeature = "DeflectedRightArmToUp";
		animSlot = 
		{
		};
	};
}

DeflectedRightArmToDownDefinition : AIAction
{
	activationCondition = 
	{
		condition = 
		{
			OR = 
			[
				"Condition.PreviousAttackNameSingleMeleeAttackStrong01", "Condition.PreviousAttackNameInfiniteGenericMeleeAttackFromAttack02"
			];
		} : AIActionOR;
	};
	startup = 
	{
		duration = 0.46f;
	};
	loop = 
	{
		duration = 0.76f;
	};
	recovery = 
	{
		duration = 0.93f;
	};
	animData = 
	{
		animFeature = "DeflectedRightArmToDown";
		animSlot = 
		{
		};
	};
}

ParryMeleeAttack01Definition : MeleeActions.ParryMeleeAttack01Definition
{
	recovery = 
	{
		duration = 1.1f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
			hitReactionMode = "StaggerMin";
		};
	};
	subActions = 
	[
		{
			statusEffects = 
			[
				"BaseStatusEffect.Parry"
			];
			remove = false;
			target = "AIActionTarget.CombatTarget";
			delay = 1.25f;
		} : AISubActionStatusEffect
	];
	animData = 
	{
		animFeature = "PushMeleeAttack02";
		animSlot = 
		{
			loopSlide = "MeleeActions.MeleeAttackChargeSlideData";
		};
	};
}

BlockMeleeAttack01Definition : MeleeActions.BlockMeleeAttack01Definition
{
}

BlockDodgeMeleeAttack01Definition : MeleeActions.BlockDodgeMeleeAttack01Definition
{
	loop = 
	{
		duration = 1.2f;
		changeNPCState = 
		{
			upperBodyState = "Defend";
			hitReactionMode = "Unstoppable";
		};
	};
}

BlockDodgeMeleeAttackToParry01Definition : MeleeActions.BlockDodgeMeleeAttackToParry01Definition
{
}

SlowPushAttack01Definition : MeleeActions.SlowPushAttack01Definition
{
}

PushAttack01Definition : MeleeActions.PushAttack01Definition
{
	loop = 
	{
		duration = 0.2f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
			hitReactionMode = "StaggerMin";
		};
	};
	recovery = 
	{
		duration = 0.53f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
		};
	};
}

CloseCombo01MeleeAttackLight01Definition : MeleeActions.CloseCombo01MeleeAttackLight01Definition
{
	startup = 
	{
		duration = 0.7f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
			hitReactionMode = "StaggerMin";
		};
	};
	loopSubActions = 
	[
		{
		} : OneHandedCloseCombo01MeleeAttackLight01DefinitionAttackData
	];
}

CloseCombo01MeleeAttackLight01FromDashDefinition : MeleeActions.CloseCombo01MeleeAttackLight01FromDashDefinition
{
	loopSubActions = 
	[
		{
		} : OneHandedCloseCombo01MeleeAttackLight01FromDashDefinitionAttackData
	];
}

CloseCombo01MeleeAttackLight02Definition : MeleeActions.CloseCombo01MeleeAttackLight02Definition
{
	startup = 
	{
		duration = 0.6f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
		};
	};
	loopSubActions = 
	[
		{
		} : OneHandedCloseCombo01MeleeAttackLight02DefinitionAttackData
	];
}

CloseCombo01MeleeAttackLight01RecoverMissDefinition : MeleeActions.CloseCombo01MeleeAttackLight01RecoverMissDefinition
{
	loop = 
	{
		duration = 1.767f;
	};
}

CloseCombo01MeleeAttackLight02RecoverMissDefinition : MeleeActions.CloseCombo01MeleeAttackLight02RecoverMissDefinition
{
	loop = 
	{
		duration = 1.7f;
	};
}

CloseCombo01MeleeAttackLight02RecoverHitDefinition : MeleeActions.CloseCombo01MeleeAttackLight02RecoverHitDefinition
{
	loop = 
	{
		duration = 0.933f;
	};
}

OneHandedCloseCombo01MeleeAttackLight01DefinitionAttackData : CloseCombo01MeleeAttackLight01AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 2.f );
	attack = "NPCAttacks.StrongAttack";
}

OneHandedCloseCombo01MeleeAttackLight01FromDashDefinitionAttackData : CloseCombo01MeleeAttackLight01AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 2.f );
	attack = "NPCAttacks.StrongAttack";
}

OneHandedCloseCombo01MeleeAttackLight02DefinitionAttackData : CloseCombo01MeleeAttackLight02AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 2.f );
	attack = "NPCAttacks.StrongAttack";
}

CloseSingleLeft01MeleeAttackLight01Definition : MeleeActions.CloseSingleLeft01MeleeAttackLight01Definition
{
	startup = 
	{
		duration = 0.533f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
		};
	};
	loopSubActions = 
	[
		{
		} : OneHandedCloseSingleLeft01MeleeAttackLight01AttackData
	];
}

CloseSingleRight01MeleeAttackLight01Definition : MeleeActions.CloseSingleRight01MeleeAttackLight01Definition
{
	startup = 
	{
		duration = 0.367f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
		};
	};
	loopSubActions = 
	[
		{
		} : OneHandedCloseSingleRight01MeleeAttackLight01AttackData
	];
}

CloseSingleBack01MeleeAttackLight01Definition : MeleeActions.CloseSingleBack01MeleeAttackLight01Definition
{
	startup = 
	{
		duration = 0.533f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
		};
	};
	loopSubActions = 
	[
		{
		} : OneHandedCloseSingleBack01MeleeAttackLight01AttackData
	];
}

OneHandedCloseSingleLeft01MeleeAttackLight01AttackData : CloseSingleLeft01MeleeAttackLight01AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 2.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 1.5f );
	attack = "NPCAttacks.StrongAttack";
}

OneHandedCloseSingleRight01MeleeAttackLight01AttackData : CloseSingleRight01MeleeAttackLight01AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 2.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 1.5f );
	attack = "NPCAttacks.StrongAttack";
}

OneHandedCloseSingleBack01MeleeAttackLight01AttackData : CloseSingleBack01MeleeAttackLight01AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 2.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 1.5f );
	attack = "NPCAttacks.StrongAttack";
}

InfiniteGenericMeleeAttackStartup01Definition : MeleeActions.InfiniteGenericMeleeAttackStartup01Definition
{
	startup = 
	{
		duration = 0.767f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
		};
	};
	loopSubActions = 
	[
		{
		} : OneHandedInfiniteGenericMeleeAttackStartup01AttackData
	];
}

InfiniteGenericMeleeAttackStartup02Definition : MeleeActions.InfiniteGenericMeleeAttackStartup02Definition
{
	startup = 
	{
		duration = 0.8f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
		};
	};
	loopSubActions = 
	[
		{
		} : OneHandedInfiniteGenericMeleeAttackStartup02AttackData
	];
}

InfiniteGenericMeleeAttackFromAttack01Definition : MeleeActions.InfiniteGenericMeleeAttackFromAttack01Definition
{
	startup = 
	{
		duration = 0.667f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
		};
	};
	loop = 
	{
		duration = 0.267f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
		};
	};
	loopSubActions = 
	[
		{
		} : OneHandedInfiniteGenericMeleeAttackFromAttack01Definition
	];
}

InfiniteGenericMeleeAttackFromAttack02Definition : MeleeActions.InfiniteGenericMeleeAttackFromAttack02Definition
{
	startup = 
	{
		duration = 0.6f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
		};
	};
	loop = 
	{
		duration = 0.267f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
		};
	};
	loopSubActions = 
	[
		{
		} : OneHandedInfiniteGenericMeleeAttackFromAttack02Definition
	];
}

InfiniteGenericMeleeAttackFromAttack03Definition : MeleeActions.InfiniteGenericMeleeAttackFromAttack03Definition
{
	startup = 
	{
		duration = 0.633f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
		};
	};
	loop = 
	{
		duration = 0.267f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
		};
	};
	loopSubActions = 
	[
		{
		} : OneHandedInfiniteGenericMeleeAttackFromAttack03Definition
	];
}

OneHandedInfiniteGenericMeleeAttackStartup01AttackData : InfiniteGenericMeleeAttackStartup01AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 2.f );
	attack = "NPCAttacks.StrongAttack";
}

OneHandedInfiniteGenericMeleeAttackStartup02AttackData : InfiniteGenericMeleeAttackStartup02AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 2.f );
	attack = "NPCAttacks.StrongAttack";
}

OneHandedInfiniteGenericMeleeAttackFromAttack01Definition : InfiniteGenericMeleeAttackFromAttack01AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 2.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.5f, 0.3f, 1.f );
	attack = "NPCAttacks.StrongAttack";
}

OneHandedInfiniteGenericMeleeAttackFromAttack02Definition : InfiniteGenericMeleeAttackFromAttack02AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 2.f );
	attack = "NPCAttacks.StrongAttack";
}

OneHandedInfiniteGenericMeleeAttackFromAttack03Definition : InfiniteGenericMeleeAttackFromAttack02AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 2.f );
	attack = "NPCAttacks.StrongAttack";
}

Combo01MeleeAttackLight01FromIdleDefinition : MeleeActions.Combo01MeleeAttackLight01FromIdleDefinition
{
	startup = 
	{
		duration = 1.067f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
			hitReactionMode = "StaggerMin";
		};
	};
	loopSubActions = 
	[
		{
		} : OneHandedCombo01MeleeAttackLight01FromIdleAttackData
	];
}

Combo01MeleeAttackLight01FromDashDefinition : MeleeActions.Combo01MeleeAttackLight01FromDashDefinition
{
	loopSubActions = 
	[
		{
		} : OneHandedCombo01MeleeAttackLight01FromDashAttackData
	];
}

Combo01MeleeAttackLight01Definition : MeleeActions.Combo01MeleeAttackLight01Definition
{
	loopSubActions = 
	[
		{
		} : OneHandedCombo01MeleeAttackLight01AttackData
	];
}

Combo01MeleeAttackLight02Definition : MeleeActions.Combo01MeleeAttackLight02Definition
{
	startup = 
	{
		duration = 0.7f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
		};
	};
	loopSubActions = 
	[
		{
		} : OneHandedCombo01MeleeAttackLight02AttackData
	];
}

Combo01MeleeAttackLight01RecoverMissDefinition : MeleeActions.Combo01MeleeAttackLight01RecoverMissDefinition
{
	loop = 
	{
		duration = 1.733f;
	};
}

Combo01MeleeAttackLight02RecoverMissDefinition : MeleeActions.Combo01MeleeAttackLight02RecoverMissDefinition
{
	loop = 
	{
		duration = 2.f;
	};
}

Combo01MeleeAttackLight02RecoverHitDefinition : MeleeActions.Combo01MeleeAttackLight02RecoverHitDefinition
{
	loop = 
	{
		duration = 1.1f;
	};
}

OneHandedCombo01MeleeAttackLight01FromIdleAttackData : Combo01MeleeAttackLight01AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 1.5f );
	attack = "NPCAttacks.StrongAttack";
}

OneHandedCombo01MeleeAttackLight01FromDashAttackData : Combo01MeleeAttackLight01AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 1.5f );
	attack = "NPCAttacks.StrongAttack";
}

OneHandedCombo01MeleeAttackLight01AttackData : Combo01MeleeAttackLight01AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 1.5f );
	attack = "NPCAttacks.StrongAttack";
}

OneHandedCombo01MeleeAttackLight02AttackData : Combo01MeleeAttackLight02AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 1.5f );
	attack = "NPCAttacks.StrongAttack";
}

Combo02MeleeAttackLight01FromIdleDefinition : MeleeActions.Combo02MeleeAttackLight01FromIdleDefinition
{
	startup = 
	{
		duration = 0.933f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
			hitReactionMode = "StaggerMin";
		};
	};
	loopSubActions = 
	[
		{
		} : OneHandedCombo02MeleeAttackLight01FromIdleAttackData
	];
}

Combo02MeleeAttackLight01FromDashDefinition : MeleeActions.Combo02MeleeAttackLight01FromDashDefinition
{
	loopSubActions = 
	[
		{
		} : OneHandedCombo02MeleeAttackLight01FromDashAttackData
	];
}

Combo02MeleeAttackLight01Definition : MeleeActions.Combo02MeleeAttackLight01Definition
{
	loopSubActions = 
	[
		{
		} : OneHandedCombo02MeleeAttackLight01AttackData
	];
}

Combo02MeleeAttackLight02Definition : MeleeActions.Combo02MeleeAttackLight02Definition
{
	startup = 
	{
		duration = 0.567f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
		};
	};
	loopSubActions = 
	[
		{
		} : OneHandedCombo02MeleeAttackLight02AttackData
	];
}

Combo02MeleeAttackLight01RecoverMissDefinition : MeleeActions.Combo02MeleeAttackLight01RecoverMissDefinition
{
}

Combo02MeleeAttackLight02RecoverMissDefinition : MeleeActions.Combo02MeleeAttackLight02RecoverMissDefinition
{
}

Combo02MeleeAttackLight02RecoverHitDefinition : MeleeActions.Combo02MeleeAttackLight02RecoverHitDefinition
{
}

OneHandedCombo02MeleeAttackLight01FromIdleAttackData : Combo02MeleeAttackLight01AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 2.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.5f, 0.3f, 1.f );
	attack = "NPCAttacks.StrongAttack";
}

OneHandedCombo02MeleeAttackLight01FromDashAttackData : Combo02MeleeAttackLight01AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 2.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.5f, 0.3f, 1.f );
	attack = "NPCAttacks.StrongAttack";
}

OneHandedCombo02MeleeAttackLight01AttackData : Combo02MeleeAttackLight01AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 2.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.5f, 0.3f, 1.f );
	attack = "NPCAttacks.StrongAttack";
}

OneHandedCombo02MeleeAttackLight02AttackData : Combo02MeleeAttackLight02AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 1.5f );
	attack = "NPCAttacks.StrongAttack";
}

OneHandedCombo02MeleeAttackLight03AttackData : Combo02MeleeAttackLight03AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 2.f );
	attack = "NPCAttacks.StrongAttack";
}

SingleMeleeAttackStrong01FromIdleDefinition : MeleeActions.SingleMeleeAttackStrong01FromIdleDefinition
{
	startup = 
	{
		duration = 0.833f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
			hitReactionMode = "StaggerMin";
		};
	};
	loop = 
	{
		duration = 0.233f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
			hitReactionMode = "StaggerMin";
		};
	};
	loopSubActions = 
	[
		{
		} : OneHandedSingleMeleeAttackStrong01FromIdleAttackData
	];
}

SingleMeleeAttackStrong01FromDashDefinition : MeleeActions.SingleMeleeAttackStrong01FromDashDefinition
{
	loopSubActions = 
	[
		{
		} : OneHandedSingleMeleeAttackStrong01FromDashAttackData
	];
}

SingleMeleeAttackStrong01Definition : MeleeActions.SingleMeleeAttackStrong01Definition
{
	loopSubActions = 
	[
		{
		} : OneHandedSingleMeleeAttackStrong01AttackData
	];
}

SingleMeleeAttackStrong01RecoverMissDefinition : MeleeActions.SingleMeleeAttackStrong01RecoverMissDefinition
{
}

SingleMeleeAttackStrong01RecoverHitDefinition : MeleeActions.SingleMeleeAttackStrong01RecoverHitDefinition
{
}

OneHandedSingleMeleeAttackStrong01FromIdleAttackData : MeleeStrongSingle01AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 2.f );
	attack = "NPCAttacks.StrongAttack";
}

OneHandedSingleMeleeAttackStrong01FromDashAttackData : MeleeStrongSingle01AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 2.f );
	attack = "NPCAttacks.StrongAttack";
}

OneHandedSingleMeleeAttackStrong01AttackData : MeleeStrongSingle01AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 2.f );
	attack = "NPCAttacks.StrongAttack";
}

SingleMeleeAttackStrong02FromIdleDefinition : MeleeActions.SingleMeleeAttackStrong02FromIdleDefinition
{
	startup = 
	{
		duration = 0.933f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
			hitReactionMode = "StaggerMin";
		};
	};
	loopSubActions = 
	[
		{
		} : OneHandedSingleMeleeAttackStrong02FromIdleAttackData
	];
}

SingleMeleeAttackStrong02FromDashDefinition : MeleeActions.SingleMeleeAttackStrong02FromDashDefinition
{
	loopSubActions = 
	[
		{
		} : OneHandedSingleMeleeAttackStrong02FromDashAttackData
	];
}

SingleMeleeAttackStrong02Definition : MeleeActions.SingleMeleeAttackStrong02Definition
{
	loopSubActions = 
	[
		{
		} : OneHandedSingleMeleeAttackStrong02AttackData
	];
}

SingleMeleeAttackStrong02RecoverMissDefinition : MeleeActions.SingleMeleeAttackStrong02RecoverMissDefinition
{
}

SingleMeleeAttackStrong02RecoverHitDefinition : MeleeActions.SingleMeleeAttackStrong02RecoverHitDefinition
{
}

OneHandedSingleMeleeAttackStrong02FromIdleAttackData : MeleeStrongSingle02AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 1.f );
	attack = "NPCAttacks.StrongAttack";
}

OneHandedSingleMeleeAttackStrong02FromDashAttackData : MeleeStrongSingle02AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 1.f );
	attack = "NPCAttacks.StrongAttack";
}

OneHandedSingleMeleeAttackStrong02AttackData : MeleeStrongSingle02AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.25f, 0.3f, 1.f );
	attack = "NPCAttacks.StrongAttack";
}

SingleMeleeAttackCharge01TauntDefinition : MeleeActions.SingleMeleeAttackCharge01TauntDefinition
{
}

SingleMeleeAttackCharge01Definition : MeleeActions.SingleMeleeAttackCharge01Definition
{
	loopSubActions = 
	[
		{
		} : OneHandedSingleMeleeAttackCharge01AttackData
	];
}

SingleMeleeAttackCharge01RecoverMissDefinition : MeleeActions.SingleMeleeAttackCharge01RecoverMissDefinition
{
}

SingleMeleeAttackCharge01RecoverHitDefinition : MeleeActions.SingleMeleeAttackCharge01RecoverHitDefinition
{
}

OneHandedSingleMeleeAttackCharge01AttackData : MeleeChargeSingle01AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 2.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.f, 0.3f, 2.f );
	attack = "NPCAttacks.StrongAttack";
}

SingleMeleeAttackChargeJump01TauntDefinition : MeleeActions.SingleMeleeAttackChargeJump01TauntDefinition
{
	animData = 
	{
		animFeature = "SingleMeleeAttackChargeJump01Taunt";
		animSlot = 
		{
			startupSlide = "OdaBoss.RotateSlideData";
		};
	};
}

SingleMeleeAttackChargeJump01Definition : MeleeActions.SingleMeleeAttackChargeJump01Definition
{
	startup = 
	{
		duration = 0.6f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
			hitReactionMode = "StaggerMin";
		};
	};
	loop = 
	{
		duration = 0.2f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
			hitReactionMode = "Unstoppable";
		};
	};
	startupSubActions += 
	[
		{
			name = "enemy_melee_charge";
		} : AISubActionPlayVoiceOver
	];
	loopSubActions = 
	[
		{
		} : OneHandedSingleMeleeAttackChargeJump01AttackData
	];
}

Kurt_SingleMeleeAttackChargeJump01Definition : MeleeActions.SingleMeleeAttackChargeJump01Definition
{
	startup = 
	{
		duration = 0.6f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
			hitReactionMode = "StaggerMin";
		};
	};
	loop = 
	{
		duration = 0.2f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
			hitReactionMode = "Unstoppable";
		};
	};
	startupSubActions += 
	[
		{
			name = "enemy_melee_charge";
		} : AISubActionPlayVoiceOver
	];
	loopSubActions = 
	[
		{
		} : Kurt_OneHandedSingleMeleeAttackChargeJump01AttackData
	];
	animData = 
	{
		animFeature = "SingleMeleeAttackChargeJump01";
		animSlot = 
		{
			startupSlide = "MeleeActions.MeleeAttackChargeJumpSlideData";
			loopSlide = "MeleeActions.MeleeAttackChargeJumpCollsionPrevention";
		};
	};
}

SingleMeleeAttackChargeJump01RecoverHitDefinition : MeleeActions.SingleMeleeAttackChargeJump01RecoverHitDefinition
{
}

Kurt_SingleMeleeAttackChargeJump01RecoverHitDefinition : MeleeActions.SingleMeleeAttackChargeJump01RecoverHitDefinition
{
	loop = 
	{
		useDurationFromAnimSlot = false;
		duration = 1.5f;
		changeNPCState = 
		{
			upperBodyState = "Attack";
		};
	};
}

OneHandedSingleMeleeAttackChargeJump01AttackData : SingleMeleeAttackChargeJump01AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 3.5f;
	attackTime = 0.05f;
	colliderBoxSize = ( 1.f, 0.3f, 2.f );
	attack = "NPCAttacks.StrongAttack";
}

Kurt_OneHandedSingleMeleeAttackChargeJump01AttackData : SingleMeleeAttackChargeJump01AttackData
{
	weaponSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	attackDuration = 0.05f;
	attackRange = 6.f;
	attackTime = 0.05f;
	attack = "NPCAttacks.KurtMeleeExplosion";
}

