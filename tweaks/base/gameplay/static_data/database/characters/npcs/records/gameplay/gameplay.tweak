package Character
using RTDB, BaseStats

ScaleToPlayerLevel : CombinedStatModifier
{
	statType = "BaseStats.PowerLevel";
	modifierType = "Additive";
	refStat = "BaseStats.PowerLevel";
	refObject = "Player";
	opSymbol = "*";
	value = 1.0f;
}

FactionNPCRarityBonus : CurveStatModifier
{
	statType = "BaseStats.NPCRarity";
	modifierType = "Additive";
	id = "puppet_power_level_to_npc_rarity";
	refStat = "BaseStats.PowerLevel";
	refObject = "Self";
}

invisible_npc : NPC_Base
{
	entityTemplatePath = "base\characters\base_entities\npc_base\invisible_npc_base.ent";
	baseAttitudeGroup = "friendly";
	enableSensesOnStart = false;
	sensePreset = "";
	relaxedSensesPreset = "";
	alertedSensesPreset = "";
	combatSensesPreset = "";
	statModifierGroups = [];
	statPools = [];
}

[ Debug ]
spawn_enemy_debug : mealstrom_ma_generic_ranged_rifle
{
	baseAttitudeGroup = "hostile";
	lootDrop = "LootTables.Empty";
	statModifiers += 
	[
	];
}

Training_Robot : Gameplay_NPC_Base
{
	entityTemplatePath = "base\mechanical\android\ndr_001__chasis_ma.ent";
	displayName = "Training Robot";
	uiNameplate = "UINameplate.QuestSettings";
	tags += 
	[
		"TrainingRobot"
	];
	items = 
	[
		"Character.Fists_Melee_Fist_Base"
	];
	statModifierGroups += 
	[
	];
	fk< ObjectAction >[] objectActions = 
	[
		"QuickHack.TriggerRobotPunch"
	];
}

pf : NPC_Base
{
	entityTemplatePath = "base\characters\entities\corpo\corpo__militech_ma.ent";
}

[ Debug ]
test_arch : Gameplay_NPC_Base
{
	archetypeName = "test_archetype";
	baseAttitudeGroup = "hostile";
	reactionPreset = "ReactionPresets.Ganger_Aggressive";
	entityTemplatePath = "base\characters\entities\corpo\corpo__militech_ma.ent";
	items = 
	[
		{
			item = "Items.w_melee_boss_hammer";
			quantity = 1;
		}, 
		"Character.Fists_Melee_Fist_Base", "Character.Tactician_Pump_Power_Shotgun_Base"
	];
}

[ Debug ]
test_arch_02 : animals_grunt1_melee1_fists_mb
{
	CName archetypeName = "test_archetype";
	items = 
	[
		"Character.Fists_Melee_Fist_Base"
	];
}

[ Debug ]
melee_defensive_state_forced : NPC_Base
{
	entityTemplatePath = "test\entities\test\test_melee_forced_defensive_state.ent";
	bool enableSensesOnStart = true;
}

[ Debug ]
humanoid_hostile_follower : NPC_Base
{
	entityTemplatePath = "test\gameplay\test_archetype_entities\scavenger_dummy.ent";
	bool enableSensesOnStart = true;
}

[ Debug ]
scavenger_ma_generic_ranged_rifle : NPC_Base
{
	reactionPreset = "ReactionPresets.Ganger_Aggressive";
	entityTemplatePath = "base\gameplay\archetype_entities\scavenger\scavenger_ma_generic_ranged_rifle.ent";
}

[ Debug ]
scavenger_ma_generic_ranged_shotgun : NPC_Base
{
	reactionPreset = "ReactionPresets.Ganger_Aggressive";
	entityTemplatePath = "base\gameplay\archetype_entities\scavenger\scavenger_ma_generic_ranged_shotgun.ent";
}

[ Debug ]
scavenger_ma_generic_ranged_pistol : NPC_Base
{
	reactionPreset = "ReactionPresets.Ganger_Aggressive";
	entityTemplatePath = "base\gameplay\archetype_entities\scavenger\scavenger_ma_generic_ranged_pistol.ent";
	fk< SensePreset > sensePreset = "Senses.Default";
	bool enableSensesOnStart = true;
}

[ Debug ]
jackie_locomotion_test : NPC_Base
{
	entityTemplatePath = "gyms\gym_ai_animation_smoke_test\spawners\jackie_locomotion_test.ent";
	reactionPreset = "ReactionPresets.NoReaction";
	bool enableSensesOnStart = true;
}

[ Debug ]
test_generic_npc : NPC_Base
{
	entityTemplatePath = "gyms\gym_ai_animation_smoke_test\spawners\test_generic_npc.ent";
	reactionPreset = "ReactionPresets.NoReaction";
	bool enableSensesOnStart = true;
}

[ Debug ]
test_ma_gang_unarmed_npc : NPC_Base
{
	entityTemplatePath = "gyms\gym_ai_animation_smoke_test\spawners\ma_gang_unarmed_test.ent";
	reactionPreset = "ReactionPresets.NoReaction";
	bool enableSensesOnStart = true;
}

[ Debug ]
sample_guy : test_generic_npc
{
	entityTemplatePath = "user\filip_koperski\sample_guy.ent";
	fk< Weakspot >[] weakspots = 
	[
		"Weakspots.Explosive_Tank_Weakspot"
	];
}

[ Debug ]
weakspot_npc_1 : mealstrom_ma_generic_ranged_rifle
{
	fk< Weakspot >[] weakspots = 
	[
		"Weakspots.Head_Helmet_Armor"
	];
}

[ Debug ]
weakspot_npc_2 : test_generic_npc
{
	fk< Weakspot >[] weakspots = 
	[
		"Weakspots.Arm_Simple_Weakspot"
	];
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ThermalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ChemicalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ElectricResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		"Character.q104_base_power_level"
	];
}

[ Debug ]
exo_shocker : NPC_Base
{
	entityTemplatePath = "base\mechanical\mech\mch_003_shocker.ent";
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.LimbHealth";
			modifierType = "Additive";
			value = 1000;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 3000;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = 70;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ThermalResistance";
			modifierType = "Additive";
			value = 80;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ChemicalResistance";
			modifierType = "Additive";
			value = 80;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ElectricResistance";
			modifierType = "Additive";
			value = 40;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Additive";
			value = 150;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier
	];
	fk< StatPool >[] statPools = 
	[
		"BaseStatPools.Puppet_Health_Base", "BaseStatPools.E3_BossWeakSpotHealth"
	];
	bool enableSensesOnStart = true;
	bool hasToBeKilledInWounded = true;
}

[ Debug ]
main_boss_Nachtigall : NPC_Base
{
	reactionPreset = "ReactionPresets.Ganger_Aggressive";
	bool enableSensesOnStart = true;
	string combatSensesPreset = "Absolute";
	string relaxedSensesPreset = "Absolute";
	string alertedSensesPreset = "Absolute";
	fk< SensePreset > sensePreset = "Senses.Absolute";
	CName archetypeName = "";
	entityTemplatePath = "base\gameplay\archetype_entities\main_boss_entities\main_boss_nachtigall_entity.ent";
	primaryEquipment = 
	{
		equipmentItems = 
		[
			{
				item = "Items.Preset_Achilles_Default";
				equipSlot = "AttachmentSlots.WeaponRight";
			} : NPCEquipmentItem, 
			{
				item = "Items.Preset_Omaha_Default";
				equipSlot = "AttachmentSlots.WeaponRight";
			} : NPCEquipmentItem
		];
	};
	secondaryEquipment = 
	{
		equipmentItems = 
		[
			{
				item = "Items.Preset_Omaha_Default";
				equipSlot = "AttachmentSlots.WeaponRight";
			} : NPCEquipmentItem, 
			{
				item = "Items.w_melee_004__fists_a";
				equipSlot = "AttachmentSlots.WeaponRight";
			} : NPCEquipmentItem
		];
	};
	fk< Weakspot >[] weakspots = 
	[
		"Weakspots.Arm_Nachtigall_Weakspot", "Weakspots.Head_Nachtigall_Weakspot"
	];
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 500;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ThermalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ChemicalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ElectricResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		"Character.q104_base_power_level"
	];
	fk< StatPool >[] statPools = 
	[
		"BaseStatPools.Puppet_Health_Base"
	];
}

main_boss_ColonelCross : NPC_Base
{
	reactionPreset = "ReactionPresets.Ganger_Aggressive";
	bool enableSensesOnStart = true;
	string combatSensesPreset = "Absolute";
	fk< SensePreset > sensePreset = "Senses.Absolute";
	CName archetypeName = "";
	entityTemplatePath = "base\gameplay\archetype_entities\main_boss_entities\main_boss_colonel_cross.ent";
	primaryEquipment = 
	{
		equipmentItems = 
		[
			{
				item = "Items.Preset_Achilles_Default";
				equipSlot = "AttachmentSlots.WeaponRight";
			} : NPCEquipmentItem, 
			{
				item = "Items.Preset_Omaha_Default";
				equipSlot = "AttachmentSlots.WeaponRight";
			} : NPCEquipmentItem
		];
	};
	secondaryEquipment = 
	{
		equipmentItems = 
		[
			{
				item = "Items.Preset_Omaha_Default";
				equipSlot = "AttachmentSlots.WeaponRight";
			} : NPCEquipmentItem, 
			{
				item = "Items.w_melee_004__fists_a";
				equipSlot = "AttachmentSlots.WeaponRight";
			} : NPCEquipmentItem
		];
	};
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 500;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ThermalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ChemicalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ElectricResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		"Character.q104_base_power_level"
	];
	fk< StatPool >[] statPools = 
	[
		"BaseStatPools.Puppet_Health_Base"
	];
}

[ Debug ]
mealstrom_ma_generic_ranged_rifle : maelstrom_grunt2_ranged2_copperhead_wa
{
}

[ Debug ]
maelstrom_ma_generic_ranged_rifle_patrol : maelstrom_grunt2_ranged2_copperhead_wa
{
	CName[] tags = 
	[
		"rare"
	];
}

[ Debug ]
mealstrom_ma_generic_ranged_shotgun : maelstom_strong_shotgun2_igla_ma
{
}

[ Debug ]
mealstrom_ma_generic_ranged_pistol : maelstrom_grunt1_ranged1_lexington_ma
{
}

[ Debug ]
scavenger_cover : NPC_Base
{
	reactionPreset = "ReactionPresets.Ganger_Aggressive";
	entityTemplatePath = "test\gameplay\test_archetype_entities\scavenger_cover.ent";
	bool enableSensesOnStart = true;
}

NPC_Tank : NPC_Base
{
	reactionPreset = "ReactionPresets.Ganger_Aggressive";
	fk< SensePreset > sensePreset = "Senses.Default";
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 99999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 50;
		} : ConstantStatModifier, 
		{
			value = 20;
		} : ImpactDamageThresholdModifier, 
		{
			value = 70;
		} : StaggerDamageThresholdModifier, 
		{
			value = 999;
		} : KnockdownDamageThresholdModifier
	];
	bool enableSensesOnStart = true;
}

NPC_Melee : NPC_Base
{
	reactionPreset = "ReactionPresets.Ganger_Aggressive";
	entityTemplatePath = "base\gameplay\archetype_entities\maelstrom\maelstrom_ma_generic_melee_machete.ent";
	fk< SensePreset > sensePreset = "Senses.Default";
	hasDirectionalStarts = false;
}

NPC_MiniBoss : NPC_Base
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 1000;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 50;
		} : ConstantStatModifier
	];
}

[ Debug ]
ManAverageDummy : NPC_Base
{
	[ EP1 ]
	entityTemplatePath = "ep1\gameplay\archetype_entities\test_entities\dummy_man_base.ent";
	bool enableSensesOnStart = false;
	reactionPreset = "ReactionPresets.NoReaction";
	fk< SensePreset > sensePreset = "Senses.Default";
	baseAttitudeGroup = "hostile";
	statPools = 
	[
		"TEST.InstantRegenHealth"
	];
	onSpawnGLPs += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Prereqs.HitReceivedPrereq";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Health";
							statPoolValue = 100;
						} : StatPoolUpdate
					];
					bool usePercent = true;
				} : ModifyStatPoolValueEffector
			];
		}
	];
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.LimbHealth";
			modifierType = "Additive";
			value = 300;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ThermalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ChemicalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ElectricResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 10000;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			value = 1;
		} : ImpactDamageThresholdModifier, 
		{
			value = 10;
		} : StaggerDamageThresholdModifier, 
		{
			value = 999;
		} : KnockdownDamageThresholdModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismHeadDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismLArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismRArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismLLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismRLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier
	];
}

[ Debug ]
ManAverageDummyMaelstrom : maelstrom_base
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.LimbHealth";
			modifierType = "Additive";
			value = 300;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ThermalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ChemicalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ElectricResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 300;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			value = 1;
		} : ImpactDamageThresholdModifier, 
		{
			value = 5;
		} : StaggerDamageThresholdModifier, 
		{
			value = 999;
		} : KnockdownDamageThresholdModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismHeadDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismLArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismRArmDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismLLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.DismRLegDamageThreshold";
			modifierType = "Additive";
			value = -100;
		} : ConstantStatModifier
	];
}

[ Debug ]
Stats_Test_0 : NPC_Melee
{
}

[ Debug ]
Stats_Test_1 : NPC_Melee
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.Level";
			modifierType = "Additive";
			value = 4;
		} : ConstantStatModifier
	];
}

[ Debug ]
Stats_Test_2 : NPC_Melee
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.Level";
			modifierType = "Additive";
			value = 6;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 400;
		} : ConstantStatModifier
	];
}

[ Debug ]
SmartRifle_Test : maelstrom_grunt2_ranged2_copperhead_wa
{
	primaryEquipment = 
	{
		equipmentItems = 
		[
			{
				item = "Items.Preset_Sidewinder_Default";
				equipSlot = "AttachmentSlots.WeaponRight";
			} : NPCEquipmentItem
		];
	};
}

[ Debug ]
TechRifle_Test : maelstrom_grunt2_ranged2_copperhead_wa
{
	primaryEquipment = 
	{
		equipmentItems = 
		[
			{
				item = "Items.Preset_Achilles_Default";
				equipSlot = "AttachmentSlots.WeaponRight";
			} : NPCEquipmentItem
		];
	};
}

[ Debug ]
VLEva : NPC_Melee
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.Evasion";
			modifierType = "Additive";
			value = -2000;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 400;
		} : ConstantStatModifier
	];
}

[ Debug ]
LEva : NPC_Melee
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.Evasion";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 400;
		} : ConstantStatModifier
	];
}

[ Debug ]
HEva : NPC_Melee
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.Evasion";
			modifierType = "Additive";
			value = 2000;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 400;
		} : ConstantStatModifier
	];
}

[ Debug ]
VHEva : NPC_Melee
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.Evasion";
			modifierType = "Additive";
			value = 5000;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 400;
		} : ConstantStatModifier
	];
}

[ Debug ]
VLPRes : NPC_Melee
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = -150;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 400;
		} : ConstantStatModifier
	];
}

[ Debug ]
LPRes : NPC_Melee
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = -50;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 400;
		} : ConstantStatModifier
	];
}

[ Debug ]
HPRes : NPC_Melee
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = 50;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 400;
		} : ConstantStatModifier
	];
}

[ Debug ]
VHPRes : NPC_Melee
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 400;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_base : NPC_Base
{
	entityTemplatePath = "base\characters\entities\gang\gang__scavenger_ma.ent";
	bool enableSensesOnStart = true;
	reactionPreset = "ReactionPresets.NoReaction";
	fk< SensePreset > sensePreset = "Senses.Default";
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.LimbHealth";
			modifierType = "Additive";
			value = 200;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ThermalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ChemicalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ElectricResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 200;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			value = 10;
		} : ImpactDamageThresholdModifier, 
		{
			value = 1;
		} : StaggerDamageThresholdModifier, 
		{
			value = 999;
		} : KnockdownDamageThresholdModifier
	];
	items = 
	[
		{
			item = "Ammo.HandgunAmmo";
			quantity = 999999;
		}, 
		{
			item = "Ammo.RifleAmmo";
			quantity = 999999;
		}, 
		{
			item = "Ammo.ShotgunAmmo";
			quantity = 999999;
		}, 
		{
			item = "Ammo.SniperRifleAmmo";
			quantity = 999999;
		}, 
		{
			item = "Items.Preset_Ashura_Default";
			quantity = 1;
		}
	];
}

[ Debug ]
gym_ai_anim_pistol : gym_ai_anim_base
{
}

[ Debug ]
gym_ai_anim_rifle : gym_ai_anim_base
{
}

[ Debug ]
gym_ai_anim_shotgun : gym_ai_anim_base
{
}

[ Debug ]
gym_ai_anim_handgunright : gym_ai_anim_base
{
}

[ Debug ]
gym_ai_anim_corpo : gym_ai_anim_base
{
	entityTemplatePath = "gyms\gym_ai_animation_smoke_test\spawners\test_ma_corpo_guy.ent";
}

[ Debug ]
gym_ai_anim_corpo_handgunboth : gym_ai_anim_corpo
{
	entityTemplatePath = "gyms\gym_ai_animation_smoke_test\spawners\test_ma_corpo_guy.ent";
}

[ Debug ]
gym_ai_anim_corpo_shotgun : gym_ai_anim_corpo
{
	entityTemplatePath = "gyms\gym_ai_animation_smoke_test\spawners\test_ma_corpo_guy.ent";
}

[ Debug ]
gym_ai_anim_corpo_rifle : gym_ai_anim_corpo
{
	entityTemplatePath = "gyms\gym_ai_animation_smoke_test\spawners\test_ma_corpo_guy.ent";
}

[ Debug ]
gym_ai_anim_twitch : gym_ai_anim_base
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_impact : gym_ai_anim_base
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = 0.1f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 500;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_stagger : gym_ai_anim_base
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = 0.1f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 500;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_knockdown : gym_ai_anim_base
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = 2;
		} : ConstantStatModifier, 
		{
			modifierType = "Multiplier";
			value = 0.01;
		} : KnockdownDamageThresholdModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 500;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_animal : NPC_Base
{
	entityTemplatePath = "base\characters\entities\gang\gang__scavenger_mb.ent";
	bool enableSensesOnStart = true;
	reactionPreset = "ReactionPresets.NoReaction";
	fk< SensePreset > sensePreset = "Senses.Default";
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.LimbHealth";
			modifierType = "Additive";
			value = 200;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ThermalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ChemicalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ElectricResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 200;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			value = 10;
		} : ImpactDamageThresholdModifier, 
		{
			value = 10;
		} : StaggerDamageThresholdModifier, 
		{
			value = 1;
		} : KnockdownDamageThresholdModifier
	];
}

[ Debug ]
gym_ai_anim_mb : gym_ai_anim_animal
{
	entityTemplatePath = "gyms\gym_ai_animation_smoke_test\spawners\gym_ai_animation_animal.ent";
}

[ Debug ]
gym_ai_anim_mb_handgun : gym_ai_anim_animal
{
	entityTemplatePath = "gyms\gym_ai_animation_smoke_test\spawners\gym_ai_animation_animal.ent";
}

[ Debug ]
gym_ai_anim_mb_shotgun : gym_ai_anim_animal
{
	entityTemplatePath = "gyms\gym_ai_animation_smoke_test\spawners\gym_ai_animation_animal.ent";
}

[ Debug ]
gym_ai_anim_twitch_big : gym_ai_anim_animal
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_impact_big : gym_ai_anim_animal
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = 0.1f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 500;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_stagger_big : gym_ai_anim_animal
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = 0.1f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 500;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_knockdown_big : gym_ai_anim_animal
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = 2;
		} : ConstantStatModifier, 
		{
			modifierType = "Multiplier";
			value = 0.01;
		} : KnockdownDamageThresholdModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 500;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_woman_average : NPC_Base
{
	entityTemplatePath = "base\characters\entities\gang\gang__mox_wa.ent";
	bool enableSensesOnStart = true;
	reactionPreset = "ReactionPresets.NoReaction";
	fk< SensePreset > sensePreset = "Senses.Default";
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.LimbHealth";
			modifierType = "Additive";
			value = 200;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ThermalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ChemicalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ElectricResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 200;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			value = 10;
		} : ImpactDamageThresholdModifier, 
		{
			value = 10;
		} : StaggerDamageThresholdModifier, 
		{
			value = 1;
		} : KnockdownDamageThresholdModifier
	];
}

[ Debug ]
gym_ai_anim_twitch_woman_average : gym_ai_anim_woman_average
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_impact_woman_average : gym_ai_anim_woman_average
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = 0.1f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 500;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_stagger_woman_average : gym_ai_anim_woman_average
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = 0.1f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 500;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_knockdown_woman_average : gym_ai_anim_woman_average
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = 2;
		} : ConstantStatModifier, 
		{
			modifierType = "Multiplier";
			value = 0.01;
		} : KnockdownDamageThresholdModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 500;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_man_fat : NPC_Base
{
	entityTemplatePath = "base\characters\entities\citizen\citizen__obese_mf.ent";
	bool enableSensesOnStart = true;
	reactionPreset = "ReactionPresets.NoReaction";
	fk< SensePreset > sensePreset = "Senses.Default";
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.LimbHealth";
			modifierType = "Additive";
			value = 200;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ThermalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ChemicalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ElectricResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 200;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			value = 10;
		} : ImpactDamageThresholdModifier, 
		{
			value = 10;
		} : StaggerDamageThresholdModifier, 
		{
			value = 1;
		} : KnockdownDamageThresholdModifier
	];
}

[ Debug ]
gym_ai_anim_twitch_man_fat : gym_ai_anim_man_fat
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_impact_man_fat : gym_ai_anim_man_fat
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = 0.1f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 500;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_stagger_man_fat : gym_ai_anim_man_fat
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = 0.1f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 500;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_knockdown_man_fat : gym_ai_anim_man_fat
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = 2;
		} : ConstantStatModifier, 
		{
			modifierType = "Multiplier";
			value = 0.01;
		} : KnockdownDamageThresholdModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 500;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Additive";
			value = 100;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_massive : NPC_Base
{
	entityTemplatePath = "base\characters\entities\boss\boss__q110_animals_mm.ent";
	bool enableSensesOnStart = false;
	reactionPreset = "ReactionPresets.NoReaction";
	fk< SensePreset > sensePreset = "Senses.Default";
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.LimbHealth";
			modifierType = "Additive";
			value = 200;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ThermalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ChemicalResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ElectricResistance";
			modifierType = "Additive";
			value = 0;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 200;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			value = 10;
		} : ImpactDamageThresholdModifier, 
		{
			value = 10;
		} : StaggerDamageThresholdModifier, 
		{
			value = 1;
		} : KnockdownDamageThresholdModifier
	];
}

[ Debug ]
gym_ai_anim_twitch_massive : gym_ai_anim_massive
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 9999;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_impact_massive : gym_ai_anim_massive
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = 0.1f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 500;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_stagger_massive : gym_ai_anim_massive
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = 0.1f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 500;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier
	];
}

[ Debug ]
gym_ai_anim_knockdown_massive : gym_ai_anim_massive
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ImpactDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaggerDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.KnockdownDamageThreshold";
			modifierType = "Additive";
			value = 2;
		} : ConstantStatModifier, 
		{
			modifierType = "Multiplier";
			value = 0.01;
		} : KnockdownDamageThresholdModifier, 
		{
			statType = "BaseStats.Health";
			modifierType = "Additive";
			value = 500;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundHeadDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRArmDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundLLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WoundRLegDamageThreshold";
			modifierType = "Multiplier";
			value = -1;
		} : ConstantStatModifier
	];
}

[ Debug ]
dummy_test_npc : maelstrom_base
{
	entityTemplatePath = "gyms\gym_ai_animation_smoke_test\spawners\dummy_test_npc.ent";
	bool enableSensesOnStart = true;
	reactionPreset = "ReactionPresets.NoReaction";
}

[ Debug ]
arasaka_mb_test : arasaka_base_mb
{
	entityTemplatePath = "base\characters\entities\corpo\corpo__arasaka_mb.ent";
	bool enableSensesOnStart = true;
	reactionPreset = "ReactionPresets.NoReaction";
}

[ Debug ]
arasaka_mah_test : arasaka_base_ma
{
	entityTemplatePath = "base\characters\entities\corpo\corpo__arasaka_mah.ent";
	bool enableSensesOnStart = true;
	reactionPreset = "ReactionPresets.NoReaction";
}

[ Debug ]
slacker_wa_test : arasaka_base_ma
{
	entityTemplatePath = "gyms\gym_appearances\spawner\slacker_wa_test.ent";
	bool enableSensesOnStart = true;
	reactionPreset = "ReactionPresets.NoReaction";
}

[ Debug ]
oda_gym_ai_anim : main_boss_oda
{
	reactionPreset = "ReactionPresets.NoReaction";
	bool enableSensesOnStart = true;
	baseAttitudeGroup = "friendly";
}

[ Debug ]
royce_gym_ai_anim : main_boss_royce
{
	reactionPreset = "ReactionPresets.NoReaction";
	bool enableSensesOnStart = true;
	baseAttitudeGroup = "friendly";
}

[ Debug ]
tweak_test : maelstrom_base
{
	entityTemplatePath = "base\characters\entities\gang\gang__animals_mb.ent";
	CName archetypeName = "humanoid";
}

