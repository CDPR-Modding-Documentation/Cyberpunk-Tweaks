package Proficiencies
using RTDB, Prereqs, Effectors, BaseStats

AttackSpeedBonus : CurveStatModifier
{
	statType = "BaseStats.AttackSpeed";
	modifierType = "AdditiveMultiplier";
	id = "playerAttribute_to_meleeStats";
	column = "proficiency_to_attack_speed";
	refObject = "Player";
}

AttackSpeedBrawlingBonus : AttackSpeedBonus
{
	refStat = "BaseStats.Brawling";
}

AttackSpeedKenjutsuBonus : AttackSpeedBonus
{
	refStat = "BaseStats.Kenjutsu";
}

GunslingerHandgunStats : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.Recoil";
			modifierType = "Additive";
			column = "gunslinger_to_recoil";
		} : GunslingerPassive, 
		{
			statType = "BaseStats.Spread";
			modifierType = "Additive";
			column = "gunslinger_to_spread";
		} : GunslingerPassive, 
		{
			statType = "BaseStats.AimInTime";
			modifierType = "AdditiveMultiplier";
			column = "gunslinger_to_aim_in_time";
		} : GunslingerPassive, 
		{
			statType = "BaseStats.AimOutTime";
			modifierType = "AdditiveMultiplier";
			column = "gunslinger_to_aim_in_time";
		} : GunslingerPassive
	];
}

GunslingerRevolverStats : GunslingerHandgunStats
{
}

PlayerGunslingerPassives : StatModifierGroup
{
	statModifiers = [];
}

PlayerGunslingerEffectorPassives : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.CritChance";
			modifierType = "Additive";
			column = "gunslinger_to_player_crit_chance";
		} : GunslingerPassive, 
		{
			statType = "BaseStats.CritDamage";
			modifierType = "Additive";
			column = "gunslinger_to_player_crit_damage";
		} : GunslingerPassive
	];
}

GunslingerPassive : CurveStatModifier
{
	id = "gunslinger_passives";
	refStat = "BaseStats.Gunslinger";
	refObject = "Player";
}

AssaultAssaultRifleStats : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.Recoil";
			modifierType = "Additive";
			column = "assault_to_recoil";
		} : AssaultPassive, 
		{
			statType = "BaseStats.Spread";
			modifierType = "Additive";
			column = "assault_to_spread";
		} : AssaultPassive, 
		{
			statType = "BaseStats.AimInTime";
			modifierType = "AdditiveMultiplier";
			column = "assault_to_aim_in_time";
		} : AssaultPassive, 
		{
			statType = "BaseStats.AimOutTime";
			modifierType = "AdditiveMultiplier";
			column = "assault_to_aim_in_time";
		} : AssaultPassive
	];
}

AssaultPrecisionRifleStats : AssaultAssaultRifleStats
{
}

AssaultSniperRifleStats : AssaultAssaultRifleStats
{
}

AssaultSMGStats : AssaultAssaultRifleStats
{
}

PlayerAssaultPassives : StatModifierGroup
{
	statModifiers = [];
}

PlayerAssaultEffectorPassives : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.CritChance";
			modifierType = "Additive";
			column = "assault_to_player_crit_chance";
		} : AssaultPassive, 
		{
			statType = "BaseStats.CritDamage";
			modifierType = "Additive";
			column = "assault_to_player_crit_damage";
		} : AssaultPassive
	];
}

AssaultPassive : CurveStatModifier
{
	id = "assault_passives";
	refStat = "BaseStats.Assault";
	refObject = "Player";
}

KenjutsuWeaponPassives : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.BlockFactor";
			modifierType = "AdditiveMultiplier";
			column = "kenjutsu_to_block_factor";
		} : WeaponKenjutsuPassive, 
		{
			statType = "BaseStats.AttackSpeed";
			modifierType = "AdditiveMultiplier";
			column = "kenjutsu_to_attack_speed";
		} : WeaponKenjutsuPassive, 
		{
			statType = "BaseStats.DPS";
			modifierType = "AdditiveMultiplier";
			column = "kenjutsu_to_damage";
		} : WeaponKenjutsuPassive, 
		{
			statType = "BaseStats.CritChance";
			modifierType = "Additive";
			column = "kenjutsu_to_player_crit_chance";
		} : WeaponKenjutsuPassive, 
		{
			statType = "BaseStats.CritDamage";
			modifierType = "Additive";
			column = "kenjutsu_to_player_crit_damage";
		} : WeaponKenjutsuPassive
	];
}

PlayerKenjutsuPassives : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.Stamina";
			modifierType = "AdditiveMultiplier";
			column = "kenjutsu_to_player_max_stamina";
		} : KenjutsuPassive
	];
}

PlayerKenjutsuEffectorPassives : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.StaminaCostReduction";
			modifierType = "Additive";
			column = "kenjutsu_to_stamina_reduction";
		} : KenjutsuPassive
	];
}

KenjutsuPassive : CurveStatModifier
{
	id = "kenjutsu_passives";
	refStat = "BaseStats.Kenjutsu";
}

WeaponKenjutsuPassive : KenjutsuPassive
{
	refObject = "Player";
}

DemolitionShotgunStats : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.Recoil";
			modifierType = "Additive";
			column = "demolition_to_recoil";
		} : DemolitionPassive, 
		{
			statType = "BaseStats.Spread";
			modifierType = "Additive";
			column = "demolition_to_spread";
		} : DemolitionPassive, 
		{
			statType = "BaseStats.AimInTime";
			modifierType = "AdditiveMultiplier";
			column = "demolition_to_aim_in_time";
		} : DemolitionPassive, 
		{
			statType = "BaseStats.AimOutTime";
			modifierType = "AdditiveMultiplier";
			column = "demolition_to_aim_in_time";
		} : DemolitionPassive
	];
}

DemolitionDualShotgunStats : DemolitionShotgunStats
{
}

DemolitionLMGStats : DemolitionShotgunStats
{
}

DemolitionHMGStats : DemolitionShotgunStats
{
}

PlayerDemolitionPassives : StatModifierGroup
{
	statModifiers = [];
}

PlayerDemolitionEffectorPassives : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.CritChance";
			modifierType = "Additive";
			column = "demolition_to_player_crit_chance";
		} : DemolitionPassive, 
		{
			statType = "BaseStats.CritDamage";
			modifierType = "Additive";
			column = "demolition_to_player_crit_damage";
		} : DemolitionPassive
	];
}

DemolitionPassive : CurveStatModifier
{
	id = "demolition_passives";
	refStat = "BaseStats.Demolition";
	refObject = "Player";
}

PlayerAthleticsPassives : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.CarryCapacity";
			modifierType = "Additive";
			column = "athletics_to_carry_capacity";
		} : AthleticsPassive, 
		{
			statType = "BaseStats.Stamina";
			modifierType = "AdditiveMultiplier";
			column = "athletics_to_max_stamina";
		} : AthleticsPassive, 
		{
			statType = "BaseStats.Armor";
			modifierType = "AdditiveMultiplier";
			column = "athletics_to_armor";
		} : AthleticsPassive, 
		{
			statType = "BaseStats.StaminaRegenRateMult";
			modifierType = "Additive";
			column = "athletics_to_stamina_regen";
		} : AthleticsPassive, 
		{
			statType = "BaseStats.Health";
			modifierType = "AdditiveMultiplier";
			column = "athletics_to_max_health";
		} : AthleticsPassive, 
		{
			statType = "BaseStats.HealthOutOfCombatRegenRateMult";
			modifierType = "Additive";
			column = "athletics_to_health_regen";
		} : AthleticsPassive
	];
}

AthleticsPassive : CurveStatModifier
{
	id = "athletics_passives";
	refStat = "BaseStats.Athletics";
}

BrawlingWeaponPassives : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.BlockFactor";
			modifierType = "AdditiveMultiplier";
			column = "brawling_to_block_factor";
		} : WeaponBrawlingPassive, 
		{
			statType = "BaseStats.AttackSpeed";
			modifierType = "AdditiveMultiplier";
			column = "brawling_to_attack_speed";
		} : WeaponBrawlingPassive, 
		{
			statType = "BaseStats.DPS";
			modifierType = "AdditiveMultiplier";
			column = "brawling_to_damage";
		} : WeaponBrawlingPassive, 
		{
			statType = "BaseStats.CritChance";
			modifierType = "Additive";
			column = "brawling_to_player_crit_chance";
		} : WeaponBrawlingPassive, 
		{
			statType = "BaseStats.CritDamage";
			modifierType = "Additive";
			column = "brawling_to_player_crit_damage";
		} : WeaponBrawlingPassive
	];
}

PlayerBrawlingPassives : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.Stamina";
			modifierType = "AdditiveMultiplier";
			column = "brawling_to_player_max_stamina";
		} : BrawlingPassive, 
		{
			statType = "BaseStats.Health";
			modifierType = "AdditiveMultiplier";
			column = "brawling_to_player_max_health";
		} : BrawlingPassive
	];
}

PlayerBrawlingEffectorPassives : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.StaminaCostReduction";
			modifierType = "Additive";
			column = "brawling_to_stamina_reduction";
		} : BrawlingPassive
	];
}

BrawlingPassive : CurveStatModifier
{
	id = "brawling_passives";
	refStat = "BaseStats.Brawling";
}

WeaponBrawlingPassive : BrawlingPassive
{
	refObject = "Player";
}

PlayerColdBloodPassives : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.CritChance";
			modifierType = "Additive";
			column = "cold_blood_to_crit_chance";
		} : ColdBloodPassive, 
		{
			statType = "BaseStats.CritDamage";
			modifierType = "Additive";
			column = "cold_blood_to_crit_damage";
		} : ColdBloodPassive, 
		{
			statType = "BaseStats.Health";
			modifierType = "AdditiveMultiplier";
			column = "cold_blood_to_max_health";
		} : ColdBloodPassive, 
		{
			statType = "BaseStats.Stamina";
			modifierType = "AdditiveMultiplier";
			column = "cold_blood_to_max_stamina";
		} : ColdBloodPassive, 
		{
			statType = "BaseStats.MaxSpeed";
			modifierType = "AdditiveMultiplier";
			column = "cold_blood_to_movement_speed";
		} : ColdBloodPassive, 
		{
			statType = "BaseStats.Armor";
			modifierType = "AdditiveMultiplier";
			column = "cold_blood_to_armor";
		} : ColdBloodPassive, 
		{
			statType = "BaseStats.ThermalResistance";
			modifierType = "Additive";
			column = "cold_blood_to_resistances";
		} : ColdBloodPassive, 
		{
			statType = "BaseStats.ChemicalResistance";
			modifierType = "Additive";
			column = "cold_blood_to_resistances";
		} : ColdBloodPassive, 
		{
			statType = "BaseStats.ElectricResistance";
			modifierType = "Additive";
			column = "cold_blood_to_resistances";
		} : ColdBloodPassive
	];
}

ColdBloodPassive : CurveStatModifier
{
	id = "cold_blood_passives";
	refStat = "BaseStats.ColdBlood";
}

PlayerAssassinationPassives : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.MitigationChance";
			modifierType = "Additive";
			column = "assassination_to_mitigation_chance";
		} : AssassinationPassive, 
		{
			statType = "BaseStats.Visibility";
			modifierType = "AdditiveMultiplier";
			column = "assassination_to_detection_time";
		} : AssassinationPassive, 
		{
			statType = "BaseStats.HealthOutOfCombatRegenRateMult";
			modifierType = "Additive";
			column = "assassination_to_health_regen";
		} : AssassinationPassive, 
		{
			statType = "BaseStats.MaxSpeed";
			modifierType = "AdditiveMultiplier";
			column = "assassination_to_movement_speed";
		} : AssassinationPassive
	];
}

PlayerAssassinationEffectorPassives : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.BaseDamage";
			modifierType = "AdditiveMultiplier";
			column = "assassination_to_damage";
		} : PlayerAssassinationPassive
	];
}

AssassinationPassive : CurveStatModifier
{
	id = "stealth_passives";
	refStat = "BaseStats.Stealth";
}

PlayerAssassinationPassive : CurveStatModifier
{
	id = "stealth_passives";
	refStat = "BaseStats.Stealth";
	refObject = "Player";
}

PlayerEngineeringPassives : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.Armor";
			modifierType = "AdditiveMultiplier";
			column = "engineering_to_armor";
		} : PlayerEngineeringPassive
	];
}

PlayerEngineeringEffectorPassives : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.CritDamage";
			modifierType = "Additive";
			column = "engineering_to_crit_damage";
		} : EngineeringPassive, 
		{
			statType = "BaseStats.CritChance";
			modifierType = "Additive";
			column = "engineering_to_crit_chance";
		} : EngineeringPassive
	];
}

EngineeringWeaponPassives : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.ChargeTime";
			modifierType = "AdditiveMultiplier";
			column = "engineering_to_charge_time";
		} : PlayerEngineeringPassive, 
		{
			statType = "BaseStats.DPS";
			modifierType = "AdditiveMultiplier";
			column = "engineering_to_tech_damage";
		} : PlayerEngineeringPassive
	];
}

EngineeringPassive : CurveStatModifier
{
	id = "engineering_passives";
	refStat = "BaseStats.Engineering";
}

PlayerEngineeringPassive : EngineeringPassive
{
	refObject = "Player";
}

PlayerCraftingPassives : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.CraftingCostReduction";
			modifierType = "Additive";
			column = "crafting_to_cost_reduction";
		} : CraftingPassive, 
		{
			statType = "BaseStats.CraftingMaterialRetrieveChance";
			modifierType = "Additive";
			column = "crafting_to_material_retrieve_chance";
		} : CraftingPassive, 
		{
			statType = "BaseStats.UpgradingCostReduction";
			modifierType = "Additive";
			column = "crafting_to_upgrading_cost_reduction";
		} : CraftingPassive, 
		{
			statType = "BaseStats.UpgradingMaterialRetrieveChance";
			modifierType = "Additive";
			column = "crafting_to_upgrading_material_retrieve_chance";
		} : CraftingPassive
	];
}

CraftingPassive : CurveStatModifier
{
	id = "crafting_passives";
	refStat = "BaseStats.Crafting";
}

PlayerHackingPassives : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.Memory";
			modifierType = "Additive";
			column = "hacking_to_memory";
		} : HackingPassive, 
		{
			statType = "BaseStats.MinigameBufferExtension";
			modifierType = "Additive";
			column = "hacking_to_minigame_buffer";
		} : HackingPassive, 
		{
			statType = "BaseStats.MinigameMaterialsEarned";
			modifierType = "Additive";
			column = "hacking_to_minigame_materials";
		} : HackingPassive, 
		{
			statType = "BaseStats.MinigameTimeLimitExtension";
			modifierType = "Additive";
			column = "hacking_to_minigame_duration";
		} : HackingPassive
	];
}

HackingPassive : CurveStatModifier
{
	id = "hacking_passives";
	refStat = "BaseStats.Hacking";
}

PlayerCombatHackingPassives : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.Memory";
			modifierType = "Additive";
			column = "combat_hacking_to_memory";
		} : CombatHackingPassive, 
		{
			statType = "BaseStats.QuickhacksCooldownReduction";
			modifierType = "Additive";
			column = "combat_hacking_to_cooldown_reduction";
		} : CombatHackingPassive, 
		{
			statType = "BaseStats.DurationBonusQuickhack";
			modifierType = "Additive";
			column = "combat_hacking_to_hack_duration";
		} : CombatHackingPassive
	];
}

CombatHackingPassive : CurveStatModifier
{
	id = "combat_hacking_passives";
	refStat = "BaseStats.CombatHacking";
}

GenericMaxSkillBonus : PassiveProficiencyBonus
{
	uiData = "Proficiencies.GenericMaxSkillBonusUIData";
}

AddOnePerkPoint : PassiveProficiencyBonus
{
	effectorToTrigger = "Proficiencies.AddPerkPoint";
	uiData = "Proficiencies.GenericSkillAddPerkPointUIData";
}

AddPerkPoint : AddDevelopmentPointEffector
{
	amountOfPoints = 1;
	pointsType = "Primary";
}

GenericSkillAddPerkPointUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#49579";
	intValues = 
	[
		1
	];
}

GenericMaxSkillBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#53123";
}

GenericAddAttributePointUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#49582";
	intValues = 
	[
		1
	];
}

GenericStatBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#49617";
}

GenericStatDecreaseUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#51254";
}

GunslingerWeaponBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#49580";
}

GunslingerPlayerBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#49581";
}

AssaultWeaponBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#49584";
}

AssaultPlayerBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#49583";
}

CraftingPlayerDecreaseBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#53235";
}

CraftingPlayerIncreaseBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#53234";
}

CraftingUncommonRecipesBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#53236";
}

CraftingRareRecipesBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#53237";
}

CraftingEpicRecipesBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#53238";
}

CraftingIconicRecipesBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#53239";
}

DemolitionWeaponBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#49586";
}

DemolitionPlayerBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#49585";
}

KenjutsuWeaponBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#49615";
}

KenjutsuPlayerBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#49616";
}

KenjutsuPlayerBonusPercentageUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#53125";
}

BrawlingWeaponBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#49608";
}

BrawlingPlayerBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#49608";
}

AthleticsPlayerBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#49617";
}

AthleticsPlayerNoPercentageBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#53241";
}

ColdBloodPlayerBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#49617";
}

AssassinationPlayerBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#49617";
}

EngineeringWeaponBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#49618";
}

EngineeringPlayerBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#49619";
}

HackingPlayerBonusUIData : PassiveProficiencyBonusUIData
{
	loc_name_key = "LocKey#49617";
}

CustomPlayerBonusUIData : PassiveProficiencyBonusUIData
{
}

AddOneMemory : PassiveProficiencyBonus
{
	uiData = 
	{
		stats = 
		[
			"BaseStats.Memory"
		];
	} : GenericAddAttributePointUIData;
}

AddOneIntelligence : PassiveProficiencyBonus
{
	effectorToTrigger = 
	{
		attributeType = "Intelligence";
	} : Effectors.BuyAttributeEffector;
	uiData = 
	{
		stats = 
		[
			"BaseStats.Intelligence"
		];
	} : GenericAddAttributePointUIData;
}

AddMemoryRegen : PassiveProficiencyBonus
{
	uiData = 
	{
		stats = 
		[
			{
				localizedName = "LocKey#51253";
			} : BaseStats.MemoryOutOfCombatRegenRate
		];
		intValues = 
		[
			5
		];
	} : GenericStatBonusUIData;
}

AddQuickHacksCooldownReduction : PassiveProficiencyBonus
{
	uiData = 
	{
		stats = 
		[
			{
				localizedName = "LocKey#51255";
			} : BaseStats.QuickhacksCooldownReduction
		];
		intValues = 
		[
			5
		];
	} : GenericStatDecreaseUIData;
}

AddQuickHacksDurationBonus : PassiveProficiencyBonus
{
	uiData = 
	{
		stats = 
		[
			{
				localizedName = "LocKey#52722";
			} : BaseStats.QuickHackDuration
		];
		intValues = 
		[
			5
		];
	} : GenericStatBonusUIData;
}

AddMinigameTimer : PassiveProficiencyBonus
{
	uiData = 
	{
		stats = 
		[
			{
				localizedName = "LocKey#51560";
			} : BaseStats.MinigameTimeLimitExtension
		];
		intValues = 
		[
			5
		];
	} : GenericStatBonusUIData;
}

AddMaterialsEarned : PassiveProficiencyBonus
{
	uiData = 
	{
		stats = 
		[
			{
				localizedName = "LocKey#51644";
			} : BaseStats.MinigameMaterialsEarned
		];
		intValues = 
		[
			10
		];
	} : GenericStatBonusUIData;
}

AddBufferSize : PassiveProficiencyBonus
{
	uiData = 
	{
		stats = 
		[
			{
				localizedName = "LocKey#51631";
			} : BaseStats.MinigameBufferExtension
		];
		intValues = 
		[
			1
		];
	} : GenericAddAttributePointUIData;
}

CraftingSkillUncommonRecipesBonus : AddItemsEffector
{
	itemsToAdd = 
	[
		{
			item = "Items.UncommonNueRecipe";
		}, 
		{
			item = "Items.UncommonCopperheadRecipe";
		}, 
		{
			item = "Items.UncommonSataraRecipe";
		}, 
		{
			item = "Items.UncommonBatonRecipe";
		}, 
		{
			item = "Items.UncommonCapRecipe";
		}, 
		{
			item = "Items.UncommonTechRecipe";
		}, 
		{
			item = "Items.UncommonShirtRecipe";
		}, 
		{
			item = "Items.UncommonJacketRecipe";
		}, 
		{
			item = "Items.UncommonFormalPantsRecipe";
		}, 
		{
			item = "Items.UncommonFormalShoesRecipe";
		}
	];
}

CraftingSkillRareRecipesBonus : AddItemsEffector
{
	itemsToAdd = 
	[
		{
			item = "Items.RareNovaRecipe";
		}, 
		{
			item = "Items.RarePulsarRecipe";
		}, 
		{
			item = "Items.RareGradRecipe";
		}, 
		{
			item = "Items.RareKnifeRecipe";
		}, 
		{
			item = "Items.RareHelmetRecipe";
		}, 
		{
			item = "Items.RareMaskRecipe";
		}, 
		{
			item = "Items.RareUndershirtRecipe";
		}, 
		{
			item = "Items.RareVestRecipe";
		}, 
		{
			item = "Items.RarePantsRecipe";
		}, 
		{
			item = "Items.RareCasualShoesRecipe";
		}
	];
}

CraftingSkillEpicRecipesBonus : AddItemsEffector
{
	itemsToAdd = 
	[
		{
			item = "Items.EpicYukimuraRecipe";
		}, 
		{
			item = "Items.EpicSor22Recipe";
		}, 
		{
			item = "Items.EpicTacticianRecipe";
		}, 
		{
			item = "Items.EpicBatRecipe";
		}, 
		{
			item = "Items.EpicHatRecipe";
		}, 
		{
			item = "Items.EpicVisorRecipe";
		}, 
		{
			item = "Items.EpicTShirtRecipe";
		}, 
		{
			item = "Items.EpicLooseShirtRecipe";
		}, 
		{
			item = "Items.EpicFormalSkirtRecipe";
		}, 
		{
			item = "Items.EpicBootsRecipe";
		}
	];
}

CraftingSkillIconicRecipesBonus : AddItemsEffector
{
	itemsToAdd = 
	[
		{
			item = "Items.LegendaryQuasarRecipe";
		}, 
		{
			item = "Items.LegendaryNekomataRecipe";
		}, 
		{
			item = "Items.LegendaryCarnageRecipe";
		}, 
		{
			item = "Items.LegendaryKatanaRecipe";
		}, 
		{
			item = "Items.LegendaryScarfRecipe";
		}, 
		{
			item = "Items.LegendaryGlassesRecipe";
		}, 
		{
			item = "Items.LegendaryTightJumpsuitRecipe";
		}, 
		{
			item = "Items.LegendaryJumpsuitRecipe";
		}, 
		{
			item = "Items.LegendaryShortsRecipe";
		}, 
		{
			item = "Items.LegendaryFormalShoesRecipe";
		}
	];
}

