package EquipmentGLP
using RTDB, Prereqs, Perks, Effectors

Silenced : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_silenced";
		localizedName = "LocKey#49305";
		localizedDescription = "LocKey#49306";
		stats = 
		[
			"BaseStats.StealthHitDamageMultiplier"
		];
	};
}

MuzzleBrake : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "";
		localizedName = "LocKey#78480";
		localizedDescription = "LocKey#78479";
		stats = 
		[
			"BaseStats.RicochetMaxAngle", "BaseStats.RicochetChance"
		];
	};
}

DamageHack : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "";
		localizedDescription = "LocKey#51402";
	};
}

UltimateHack : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "";
		localizedDescription = "LocKey#51403";
	};
}

ControlHack : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "";
		localizedDescription = "LocKey#51404";
	};
}

CovertHack : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "";
		localizedDescription = "LocKey#51405";
	};
}

Lethal : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "";
		localizedDescription = "LocKey#52983";
	};
}

NonLethal : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "";
		localizedDescription = "LocKey#52984";
	};
}

DataMiner : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#2045";
		localizedDescription = "LocKey#2044";
	};
}

MalfunctionProgram : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#2020";
		localizedDescription = "LocKey#2021";
	};
}

SuicideLvl1Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedName = "LocKey#845";
		localizedDescription = "LocKey#52611";
	};
}

SuicideLvl4Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedName = "LocKey#845";
		localizedDescription = "LocKey#51562";
		floatValues = 
		[
			2
		];
	};
}

SuicideLvl4ProgramPassive : GameplayLogicPackage
{
	stats += 
	[
		{
			statType = "BaseStats.CausingPanicReducesUltimateHacksCost";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier
	];
}

GrenadeExplodeLvl1Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedName = "LocKey#850";
		localizedDescription = "LocKey#52615";
	};
}

GrenadeExplodeLvl3Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedName = "LocKey#850";
		localizedDescription = "LocKey#51499";
	};
}

GrenadeExplodeLvl4Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedName = "LocKey#850";
		localizedDescription = "LocKey#51500";
		floatValues = 
		[
			2
		];
		intValues = 
		[
			4
		];
	};
}

GrenadeExplodeLvl4ProgramPassive : GameplayLogicPackage
{
	stats += 
	[
		{
			statType = "BaseStats.ExplosionKillsRecudeUltimateHacksCost";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier
	];
}

BlindLvl1Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#849";
		localizedDescription = "LocKey#852";
	};
}

BlindLvl2Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#849";
		localizedDescription = "LocKey#51376";
		floatValues = 
		[
			8
		];
	};
}

BlindLvl3Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#849";
		localizedDescription = "LocKey#51377";
		floatValues = 
		[
			50
		];
	};
}

BlindLvl4Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#849";
		localizedDescription = "LocKey#51378";
	};
}

MadnessLvl1Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_mod";
		localizedName = "LocKey#27958";
		localizedDescription = "LocKey#52614";
	};
}

MadnessSetFriendly : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_mod";
		localizedName = "LocKey#27958";
		localizedDescription = "LocKey#2023";
	};
}

MadnessLvl3Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_mod";
		localizedName = "LocKey#27958";
		localizedDescription = "LocKey#51563";
	};
}

MadnessLvl4Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_mod";
		localizedName = "LocKey#27958";
		localizedDescription = "LocKey#51564";
	};
}

MadnessLvl4ProgramPassive : GameplayLogicPackage
{
	stats += 
	[
		{
			statType = "BaseStats.HasMadnessLvl4Passive";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier
	];
}

CommsNoiseLvl1Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27959";
		localizedDescription = "LocKey#51948";
	};
}

CommsNoiseLvl2Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27959";
		localizedDescription = "LocKey#51949";
	};
}

CommsNoiseLvl3Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27959";
		localizedDescription = "LocKey#51950";
	};
}

CommsNoiseLvl4Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27959";
		localizedDescription = "LocKey#51951";
	};
}

CommsNoiseLvl4Passive : GameplayLogicPackage
{
	stats += 
	[
		{
			statType = "BaseStats.CommsNoiseJamOnQuickhack";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier
	];
}

CommsCallInLvl1Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27960";
		localizedDescription = "LocKey#51953";
		intValues = 
		[
			1
		];
	};
}

CommsCallInLvl3Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27960";
		localizedDescription = "LocKey#51954";
	};
}

WhistleLvl1Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#51291";
		localizedDescription = "LocKey#51337";
	};
}

WhistleLvl2Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#51291";
		localizedDescription = "LocKey#51293";
	};
}

WhistleLvl3Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#51291";
		localizedDescription = "LocKey#52756";
	};
}

MemoryWipeLvl2Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#51310";
		localizedDescription = "LocKey#51338";
	};
}

MemoryWipeLvl3Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#51291";
		localizedDescription = "LocKey#51312";
	};
}

ContagionLvl1Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#51313";
		localizedDescription = "LocKey#51318";
		intValues = 
		[
			2
		];
		floatValues = 
		[
			35, 8
		];
	};
}

ContagionLvl2Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#51313";
		localizedDescription = "LocKey#51315";
	};
}

ContagionLvl3Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#51313";
		localizedDescription = "LocKey#51316";
		floatValues = 
		[
			20
		];
	};
}

ContagionLvl4Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#51313";
		localizedDescription = "LocKey#51317";
		intValues = 
		[
			1
		];
	};
}

ContagionLvl4Passive : GameplayLogicPackage
{
	stats += 
	[
		{
			statType = "BaseStats.QuickHackSpreadNumber";
			modifierType = "Additive";
			value = 1.f;
		} : ConstantStatModifier
	];
}

CommsCallOutProgram : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27963";
		localizedDescription = "LocKey#27715";
	};
}

DisableCyberwareProgramLvl1 : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27961";
		localizedDescription = "LocKey#27714";
	};
}

DisableCyberwareProgramLvl2 : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27961";
		localizedDescription = "LocKey#51372";
		floatValues = 
		[
			8
		];
	};
}

DisableCyberwareProgramLvl3 : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27961";
		localizedDescription = "LocKey#51373";
	};
}

OverheatProgram : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedName = "LocKey#27962";
		localizedDescription = "LocKey#51322";
	};
}

OverheatProgramLvl2 : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedName = "LocKey#27962";
		localizedDescription = "LocKey#51323";
	};
}

OverheatProgramLvl3 : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedName = "LocKey#27962";
		localizedDescription = "LocKey#51324";
	};
}

OverheatProgramLvl4 : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedName = "LocKey#27962";
		localizedDescription = "LocKey#51325";
	};
}

SystemCollapseLvl1Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27964";
		localizedDescription = "LocKey#52617";
	};
}

SystemCollapseLvl3Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27964";
		localizedDescription = "LocKey#51556";
	};
}

SystemCollapseLvl4Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27964";
		localizedDescription = "LocKey#51557";
		floatValues = 
		[
			1
		];
		intValues = 
		[
			6
		];
	};
}

SystemCollapseLvl4ProgramPassive : GameplayLogicPackage
{
	stats += 
	[
		{
			statType = "BaseStats.DefeatingEnemiesReduceHacksCost";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier
	];
}

JamWeaponProgram : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27978";
		localizedDescription = "LocKey#27719";
	};
}

WeaponMalfunctionLvl0Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27965";
		localizedDescription = "LocKey#52616";
	};
}

WeaponMalfunctionLvl1Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27965";
		localizedDescription = "LocKey#27720";
	};
}

WeaponMalfunctionLvl2Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27965";
		localizedDescription = "LocKey#51350";
		floatValues = 
		[
			8
		];
	};
}

WeaponMalfunctionLvl3Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27965";
		localizedDescription = "LocKey#51351";
	};
}

WeaponMalfunctionLvl4Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27965";
		localizedDescription = "LocKey#51348";
	};
}

LocomotionMalfunctionProgramLvl1 : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27966";
		localizedDescription = "LocKey#51940";
	};
}

LocomotionMalfunctionProgramLvl2 : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27966";
		localizedDescription = "LocKey#51941";
		floatValues = 
		[
			8
		];
	};
}

LocomotionMalfunctionProgramLvl3 : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27966";
		localizedDescription = "LocKey#51942";
	};
}

LocomotionMalfunctionProgramLvl4 : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27966";
		localizedDescription = "LocKey#51943";
	};
}

LocomotionMalfunctionProgramLvl4Passive : GameplayLogicPackage
{
	stats += 
	[
		{
			statType = "BaseStats.RemoveSprintOnQuickhack";
			modifierType = "Additive";
			value = 1.f;
		} : ConstantStatModifier
	];
}

PingLvl1Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#51955";
		localizedDescription = "LocKey#51955";
	};
}

PingLvl2Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#51955";
		localizedDescription = "LocKey#52609";
	};
}

PingLvl4Program : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27967";
		localizedDescription = "LocKey#51956";
	};
}

PingLvl4ProgramPassive : GameplayLogicPackage
{
	stats += 
	[
		{
			statType = "BaseStats.AutoReveal";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier
	];
}

SetFriendlyProgram : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "Set Friendly";
		localizedDescription = "Sets the target to be friendly";
	};
}

EMPOverloadProgramLvl1 : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27968";
		localizedDescription = "LocKey#51326";
	};
}

EMPOverloadProgramLvl2 : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27968";
		localizedDescription = "LocKey#51327";
		floatValues = 
		[
			4
		];
	};
}

EMPOverloadProgramLvl3 : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27968";
		localizedDescription = "LocKey#51328";
		floatValues = 
		[
			30
		];
	};
}

EMPOverloadProgramLvl4 : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#27968";
		localizedDescription = "LocKey#51329";
	};
}

EMPOverloadProgramLvl4Passive : GameplayLogicPackage
{
	stats += 
	[
		{
			statType = "BaseStats.ShortCircuitOnCriticalHit";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier
	];
}

BrainMeltProgramLvl2 : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#45340";
		localizedDescription = "LocKey#51330";
		floatValues = 
		[
			50
		];
	};
}

BrainMeltProgramLvl3 : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#45340";
		localizedDescription = "LocKey#51331";
		floatValues = 
		[
			6
		];
	};
}

BrainMeltProgramLvl4 : GameplayLogicPackage
{
	UIData = 
	{
		iconPath = "ability_utility";
		localizedName = "LocKey#45340";
		localizedDescription = "LocKey#51332";
	};
}

BrainMeltProgramLvl4Passive : GameplayLogicPackage
{
	stats += 
	[
		{
			statType = "BaseStats.FearOnQuickHackKill";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier
	];
}

BorgWeaponStagger : GameplayLogicPackage
{
	effectors = 
	[
		{
			prereqRecord = "EquipmentGLP.BorgWeaponStaggerStrengthOnShootPrereq";
			fk< StatusEffect > statusEffect = "BaseStatusEffect.BorgStun";
		} : Perks.ApplyStatusEffectOnPlayer, 
		{
			prereqRecord = "EquipmentGLP.BorgWeaponStaggerStrengthPrereq";
			fk< StatModifierGroup > statGroup = "EquipmentGLP.BorgWeaponStaggerStats";
			applicationTarget = "Weapon";
		} : ApplyStatGroupEffector
	];
}

BorgWeaponHeavy : GameplayLogicPackage
{
	effectors = 
	[
		{
			prereqRecord = "EquipmentGLP.BorgWeaponStaggerStrengthPrereq";
			fk< StatModifierGroup > statGroup = 
			{
				fk< StatModifier >[] statModifiers = 
				[
					{
						statType = "BaseStats.MaxSpeed";
						modifierType = "Multiplier";
						value = 0.65f;
					} : ConstantStatModifier, 
					{
						statType = "BaseStats.JumpHeight";
						modifierType = "Multiplier";
						value = 0.65f;
					} : ConstantStatModifier, 
					{
						statType = "BaseStats.HasDodge";
						modifierType = "Multiplier";
						value = 0.f;
					} : ConstantStatModifier, 
					{
						statType = "BaseStats.HasDodgeAir";
						modifierType = "Multiplier";
						value = 0.f;
					} : ConstantStatModifier, 
					{
						statType = "BaseStats.CanSprint";
						modifierType = "Multiplier";
						value = 0f;
					} : ConstantStatModifier
				];
			};
		} : ApplyStatGroupEffector, 
		{
			prereqRecord = "EquipmentGLP.BorgWeaponStaggerStrengthPrereq";
			fk< StatModifierGroup > statGroup = "EquipmentGLP.BorgWeaponStaggerStats";
			applicationTarget = "Weapon";
		} : ApplyStatGroupEffector
	];
}

BuckWeaponHeavy : GameplayLogicPackage
{
	effectors = 
	[
		{
			prereqRecord = "EquipmentGLP.BuckStrengthPrereq";
			fk< StatModifierGroup > statGroup = 
			{
				fk< StatModifier >[] statModifiers = 
				[
					{
						statType = "BaseStats.MaxSpeed";
						modifierType = "Multiplier";
						value = 0.65f;
					} : ConstantStatModifier, 
					{
						statType = "BaseStats.JumpHeight";
						modifierType = "Multiplier";
						value = 0.65f;
					} : ConstantStatModifier, 
					{
						statType = "BaseStats.HasDodge";
						modifierType = "Multiplier";
						value = 0.f;
					} : ConstantStatModifier, 
					{
						statType = "BaseStats.HasDodgeAir";
						modifierType = "Multiplier";
						value = 0.f;
					} : ConstantStatModifier, 
					{
						statType = "BaseStats.CanSprint";
						modifierType = "Multiplier";
						value = 0f;
					} : ConstantStatModifier
				];
			};
		} : ApplyStatGroupEffector, 
		{
			prereqRecord = "EquipmentGLP.BuckStrengthPrereq";
			fk< StatModifierGroup > statGroup = "EquipmentGLP.BuckWeaponStaggerStats";
			applicationTarget = "Weapon";
		} : ApplyStatGroupEffector
	];
}

BorgWeaponStaggerStrengthOnShootPrereq : MultiPrereq
{
	fk< IPrereq >[] nestedPrereqs = 
	[
		{
			string stateName = "Shoot";
		} : Prereqs.RangedWeaponPSMPrereq, 
		{
			statType = "Strength";
			valueToCheck = 10;
			comparisonType = "Less";
		} : StatPrereq, 
		{
			statType = "CanUseStrongArms";
			valueToCheck = 0;
			comparisonType = "Equal";
		} : StatPrereq, 
		"Perks.IsPlayer"
	];
}

BorgWeaponStaggerStrengthPrereq : MultiPrereq
{
	fk< IPrereq >[] nestedPrereqs = 
	[
		{
			statType = "Strength";
			valueToCheck = 10;
			comparisonType = "Less";
		} : StatPrereq, 
		{
			statType = "CanUseStrongArms";
			valueToCheck = 0;
			comparisonType = "Equal";
		} : StatPrereq, 
		"Perks.IsPlayer"
	];
}

ComradeStrengthPrereq : MultiPrereq
{
	fk< IPrereq >[] nestedPrereqs = 
	[
		{
			statType = "Strength";
			valueToCheck = 6;
			comparisonType = "GreaterOrEqual";
		} : StatPrereq, 
		{
			statType = "CanUseStrongArms";
			valueToCheck = 0;
			comparisonType = "Equal";
		} : StatPrereq, 
		"Perks.IsPlayer"
	];
}

BuckStrengthPrereq : MultiPrereq
{
	fk< IPrereq >[] nestedPrereqs = 
	[
		{
			statType = "Strength";
			valueToCheck = 20;
			comparisonType = "Less";
		} : StatPrereq, 
		{
			statType = "CanUseStrongArms";
			valueToCheck = 0;
			comparisonType = "Equal";
		} : StatPrereq, 
		"Perks.IsPlayer"
	];
}

MeleeBorgStrengthPrereq : MultiPrereq
{
	nestedPrereqs = 
	[
		{
			statType = "Strength";
			valueToCheck = 10;
			comparisonType = "Less";
		} : StatPrereq, 
		{
			statType = "CanUseStrongArms";
			valueToCheck = 0;
			comparisonType = "Equal";
		} : StatPrereq, 
		"Perks.IsPlayer"
	];
}

KolacBorgWeaponStagger : GameplayLogicPackage
{
	effectors = 
	[
		{
			prereqRecord = 
			{
				fk< IPrereq >[] nestedPrereqs = 
				[
					{
						string stateName = "Shoot";
					} : Prereqs.RangedWeaponPSMPrereq, 
					{
						statType = "Strength";
						valueToCheck = 15;
						comparisonType = "Less";
					} : StatPrereq, 
					{
						statType = "CanUseStrongArms";
						valueToCheck = 0;
						comparisonType = "Equal";
					} : StatPrereq, 
					"Perks.IsPlayer"
				];
			} : RTDB.MultiPrereq;
			fk< StatusEffect > statusEffect = "BaseStatusEffect.BorgStun";
		} : Perks.ApplyStatusEffectOnPlayer
	];
}

ReflexBorgWeaponStagger : GameplayLogicPackage
{
	effectors = 
	[
		{
			prereqRecord = 
			{
				fk< IPrereq >[] nestedPrereqs = 
				[
					{
						string stateName = "Shoot";
					} : Prereqs.RangedWeaponPSMPrereq, 
					{
						statType = "Reflexes";
						valueToCheck = 6;
						comparisonType = "Less";
					} : StatPrereq, 
					{
						statType = "CanUseStrongArms";
						valueToCheck = 0;
						comparisonType = "Equal";
					} : StatPrereq, 
					"Perks.IsPlayer"
				];
			} : RTDB.MultiPrereq;
			fk< StatusEffect > statusEffect = "BaseStatusEffect.BorgStun";
		} : Perks.ApplyStatusEffectOnPlayer
	];
}

EdgerunnersBorgWeaponStagger : GameplayLogicPackage
{
	effectors = 
	[
		{
			prereqRecord = 
			{
				fk< IPrereq >[] nestedPrereqs = 
				[
					{
						string stateName = "Shoot";
					} : Prereqs.RangedWeaponPSMPrereq, 
					"Perks.IsPlayer"
				];
			} : RTDB.MultiPrereq;
			fk< StatusEffect > statusEffect = "BaseStatusEffect.EdgerunnersStun";
		} : Perks.ApplyStatusEffectOnPlayer
	];
}

BorgWeaponStaggerStats : StatModifierGroup
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.RecoilDriftRandomRangeMin";
			modifierType = "AdditiveMultiplier";
			value = 3.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilDriftRandomRangeMax";
			modifierType = "AdditiveMultiplier";
			value = 3.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilMagForFullDrift";
			modifierType = "AdditiveMultiplier";
			value = 1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilKickMin";
			modifierType = "AdditiveMultiplier";
			value = 0.5f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilKickMax";
			modifierType = "AdditiveMultiplier";
			value = 0.5f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilRecoverySpeed";
			modifierType = "AdditiveMultiplier";
			value = 0.5f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilRecoveryTime";
			modifierType = "AdditiveMultiplier";
			value = 1.0f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilTime";
			modifierType = "AdditiveMultiplier";
			value = 1.0f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilHoldDuration";
			modifierType = "AdditiveMultiplier";
			value = 1.0f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.SwayTraversalTime";
			modifierType = "Multiplier";
			value = 0.5f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.SwayStartDelay";
			modifierType = "Multiplier";
			value = 0.0f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.SwayStartBlendTime";
			modifierType = "Multiplier";
			value = 0.1f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.SpreadMinX";
			modifierType = "Additive";
			value = 2.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.SpreadAdsMinX";
			modifierType = "Additive";
			value = 1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ReloadTime";
			modifierType = "AdditiveMultiplier";
			value = 0.3f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.EmptyReloadTime";
			modifierType = "AdditiveMultiplier";
			value = 0.3f;
		} : ConstantStatModifier
	];
}

BuckWeaponStaggerStats : StatModifierGroup
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.RecoilDriftRandomRangeMin";
			modifierType = "AdditiveMultiplier";
			value = 3.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilDriftRandomRangeMax";
			modifierType = "AdditiveMultiplier";
			value = 3.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilMagForFullDrift";
			modifierType = "AdditiveMultiplier";
			value = 1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilKickMin";
			modifierType = "AdditiveMultiplier";
			value = 0.5f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilKickMax";
			modifierType = "AdditiveMultiplier";
			value = 0.5f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilRecoverySpeed";
			modifierType = "AdditiveMultiplier";
			value = 0.5f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilRecoveryTime";
			modifierType = "AdditiveMultiplier";
			value = 1.0f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilTime";
			modifierType = "AdditiveMultiplier";
			value = 1.0f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilHoldDuration";
			modifierType = "AdditiveMultiplier";
			value = 1.0f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.SwayTraversalTime";
			modifierType = "Multiplier";
			value = 0.5f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.SwayStartDelay";
			modifierType = "Multiplier";
			value = 0.0f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.SwayStartBlendTime";
			modifierType = "Multiplier";
			value = 0.1f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.SpreadMinX";
			modifierType = "Additive";
			value = 2.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.SpreadAdsMinX";
			modifierType = "Additive";
			value = 1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ReloadTime";
			modifierType = "AdditiveMultiplier";
			value = 0.3f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.EmptyReloadTime";
			modifierType = "AdditiveMultiplier";
			value = 0.3f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.AimInTime";
			modifierType = "Multiplier";
			value = 1.4f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.AimOutTime";
			modifierType = "Multiplier";
			value = 1.4f;
		} : ConstantStatModifier
	];
}

MeleeStealthPlayerBuff : GameplayLogicPackage
{
	effectors = 
	[
		{
			prereqRecord = "Perks.IsPlayer";
			effectorToApply = 
			{
				prereqRecord = 
				{
					conditions = 
					[
						{
							hitFlag = "StealthHit";
						} : HitFlagHitPrereqCondition, 
						{
							weaponType = "Melee";
						} : WeaponTypeHitPrereqCondition
					];
				} : ProcessHitTriggered;
				value = 1.3f;
			} : MultiplyDamage;
		} : ApplyEffectorOnPlayer
	];
}

