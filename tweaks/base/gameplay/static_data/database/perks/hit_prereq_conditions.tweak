package Prereqs
using RTDB

AttackSubtypeHitPrereqCondition : HitPrereqCondition
{
	type = "Prereqs.AttackSubType";
	string attackSubtype = "";
}

AttackTypeHitPrereqCondition : HitPrereqCondition
{
	type = "Prereqs.AttackType";
	string attackType = "";
}

TargetKilledHitPrereqCondition : HitPrereqCondition
{
	type = "Prereqs.TargetKilled";
}

SameTargetHitPrereqCondition : HitPrereqCondition
{
	type = "Prereqs.SameTarget";
}

BodyPartHitPrereqCondition : HitPrereqCondition
{
	type = "Prereqs.BodyPart";
	CName bodyPart = "";
}

DistanceCoveredHitPrereqCondition : HitPrereqCondition
{
	type = "Prereqs.DistanceCovered";
	float distanceRequired = 0f;
	string comparisonType = "";
}

SourceTypeHitPrereqCondition : HitPrereqCondition
{
	type = "Prereqs.SourceType";
	CName source = "";
}

InstigatorTypeHitPrereqCondition : HitPrereqCondition
{
	type = "Prereqs.InstigatorType";
	CName instigatorType = "";
}

TargetTypeHitPrereqCondition : HitPrereqCondition
{
	type = "Prereqs.TargetType";
	CName targetType = "";
}

AgentMovingHitPrereqCondition : HitPrereqCondition
{
	type = "Prereqs.AgentMoving";
	bool isMoving = false;
	CName object = "";
}

TargetNPCRarityHitPrereqCondition : HitPrereqCondition
{
	type = "Prereqs.TargetNPCRarity";
	string rarity = "";
}

TargetNPCTypeHitPrereqCondition : HitPrereqCondition
{
	type = "Prereqs.TargetNPCType";
	string npcType = "";
}

StatPoolComparisonHitPrereqCondition : HitPrereqCondition
{
	type = "Prereqs.StatPoolComparison";
	CName comparisonSource = "";
	CName comparisonTarget = "";
	string statPoolToCompare = "";
	string comparisonType = "";
}

StatPoolHitPrereqCondition : HitPrereqCondition
{
	type = "Prereqs.StatPool";
	float valueToCheck = 0f;
	CName objectToCheck = "";
	string statPoolToCompare = "";
	string comparisonType = "";
}

StatusEffectPresentHitPrereqCondition : HitPrereqCondition
{
	type = "Prereqs.StatusEffectPresent";
	CName statusEffect = "";
	fk< CheckType > checkType = "";
	CName tagToCheck = "";
	CName objectToCheck = "Target";
}

HitFlagHitPrereqCondition : HitPrereqCondition
{
	type = "Prereqs.HitFlag";
	string hitFlag = "";
}

AmmoStateHitPrereqCondition : HitPrereqCondition
{
	type = "Prereqs.AmmoState";
	string ammoState = "";
}

DamageOverTimeTypeHitPrereqCondition : HitPrereqCondition
{
	type = "Prereqs.DamageOverTimeType";
	string dotType = "";
}

WeaponTypeHitPrereqCondition : HitPrereqCondition
{
	type = "Prereqs.WeaponType";
	CName weaponType = "";
}

