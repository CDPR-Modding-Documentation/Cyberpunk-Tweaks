package Perks
using RTDB, Prereqs, Effectors, Attacks

StealthProficiencyPrereq : StatPrereq
{
	float valueToCheck = 0;
	CName statType = "Cool";
	CName comparisonType = "GreaterOrEqual";
}

StealthMasteryPrereq : StatPrereq
{
	float valueToCheck = 0;
	CName statType = "Stealth";
	CName comparisonType = "GreaterOrEqual";
}

Stealth_Area_01 : PerkArea
{
	enumName = "Stealth_Area_01";
	requirement = 
	{
		valueToCheck = 0;
	} : StealthProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : StealthMasteryPrereq;
	perks = 
	[
		"Perks.Stealth_Area_01_Perk_1", "Perks.Stealth_Area_01_Perk_2"
	];
	maxLevel = 1;
}

Stealth_Area_02 : PerkArea
{
	enumName = "Stealth_Area_02";
	requirement = 
	{
		valueToCheck = 5;
	} : StealthProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : StealthMasteryPrereq;
	perks = 
	[
		"Perks.Stealth_Area_02_Perk_1", "Perks.Stealth_Area_02_Perk_2"
	];
	maxLevel = 1;
}

Stealth_Area_03 : PerkArea
{
	enumName = "Stealth_Area_03";
	requirement = 
	{
		valueToCheck = 7;
	} : StealthProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : StealthMasteryPrereq;
	perks = 
	[
		"Perks.Stealth_Area_03_Perk_1", "Perks.Stealth_Area_03_Perk_2", "Perks.Stealth_Area_03_Perk_3"
	];
	maxLevel = 1;
}

Stealth_Area_04 : PerkArea
{
	enumName = "Stealth_Area_04";
	requirement = 
	{
		valueToCheck = 9;
	} : StealthProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : StealthMasteryPrereq;
	perks = 
	[
		"Perks.Stealth_Area_04_Perk_1", "Perks.Stealth_Area_04_Perk_2"
	];
}

Stealth_Area_05 : PerkArea
{
	enumName = "Stealth_Area_05";
	requirement = 
	{
		valueToCheck = 11;
	} : StealthProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : StealthMasteryPrereq;
	perks = 
	[
		"Perks.Stealth_Area_05_Perk_1", "Perks.Stealth_Area_05_Perk_2", "Perks.Stealth_Area_05_Perk_3"
	];
	maxLevel = 1;
}

Stealth_Area_06 : PerkArea
{
	enumName = "Stealth_Area_06";
	requirement = 
	{
		valueToCheck = 12;
	} : StealthProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : StealthMasteryPrereq;
	perks = 
	[
		"Perks.Stealth_Area_06_Perk_1", "Perks.Stealth_Area_06_Perk_2"
	];
}

Stealth_Area_07 : PerkArea
{
	enumName = "Stealth_Area_07";
	requirement = 
	{
		valueToCheck = 14;
	} : StealthProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : StealthMasteryPrereq;
	perks = 
	[
		"Perks.Stealth_Area_07_Perk_1", "Perks.Stealth_Area_07_Perk_2", "Perks.Stealth_Area_07_Perk_3"
	];
	maxLevel = 1;
}

Stealth_Area_08 : PerkArea
{
	enumName = "Stealth_Area_08";
	requirement = 
	{
		valueToCheck = 16;
	} : StealthProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : StealthMasteryPrereq;
	perks = 
	[
		"Perks.Stealth_Area_08_Perk_1", "Perks.Stealth_Area_08_Perk_2", "Perks.Stealth_Area_08_Perk_3"
	];
	maxLevel = 1;
}

Stealth_Area_09 : PerkArea
{
	enumName = "Stealth_Area_09";
	requirement = 
	{
		valueToCheck = 18;
	} : StealthProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : StealthMasteryPrereq;
	perks = 
	[
		"Perks.Stealth_Area_09_Perk_1", "Perks.Stealth_Area_09_Perk_2", "Perks.Stealth_Area_09_Perk_3"
	];
	maxLevel = 1;
}

Stealth_Area_10 : PerkArea
{
	enumName = "Stealth_Area_10";
	requirement = 
	{
		valueToCheck = 20;
	} : StealthProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : StealthMasteryPrereq;
	perks = 
	[
		"Perks.Stealth_Area_10_Perk_1"
	];
	maxLevel = 1;
}

Stealth_Area_01_Perk_1 : StealthPerk
{
	CName enumName = "Stealth_Area_01_Perk_1";
	perkIcon = "UIIcon.Stealth_Area_01_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				stats = 
				[
					{
						statType = "BaseStats.StealthHitDamageMultiplier";
						modifierType = "AdditiveMultiplier";
						value = 0.25f;
					} : ConstantStatModifier
				];
			};
			uiData = 
			{
				intValues = 
				[
					25
				];
			};
		} : PerkLevelData
	];
	loc_name_key = "LocKey#6606";
	loc_desc_key = "LocKey#5908";
}

Stealth_Area_01_Perk_2 : StealthPerk
{
	CName enumName = "Stealth_Area_01_Perk_2";
	perkIcon = "UIIcon.Stealth_Area_01_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = 
						{
							nestedPrereqs = 
							[
								{
									stateName = "Stealth";
									isInState = true;
								} : Prereqs.CombatPSMPrereq, 
								"Perks.IsPlayerCrouching"
							];
						} : ANDPrereq;
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.MaxSpeed";
									modifierType = "AdditiveMultiplier";
									value = 0.2f;
								} : ConstantStatModifier
							];
						} : StatModifierGroup;
					} : ApplyStatGroupOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					20
				];
			};
		} : PerkLevelData
	];
	loc_name_key = "LocKey#6607";
	loc_desc_key = "LocKey#5909";
}

Stealth_Area_02_Perk_1 : StealthPerk
{
	CName enumName = "Stealth_Area_02_Perk_1";
	perkIcon = "UIIcon.Stealth_Area_02_Perk_1";
	binkPath = "base\movies\tutorials\700x394\perkhiddendragon.bk2";
	utility = "Perks.ActiveUtility";
	levels = 
	[
		{
			dataPackage = 
			{
				stats = 
				[
					{
						statType = "BaseStats.CanAerialTakedown";
						modifierType = "Additive";
						value = 1f;
					} : ConstantStatModifier
				];
			};
		} : PerkLevelData
	];
	loc_name_key = "LocKey#6608";
	loc_desc_key = "LocKey#5910";
}

Stealth_Area_02_Perk_2 : StealthPerk
{
	CName enumName = "Stealth_Area_02_Perk_2";
	perkIcon = "UIIcon.Stealth_Area_02_Perk_2";
	binkPath = "base\movies\tutorials\700x394\perkdaggerdealer.bk2";
	utility = "Perks.ActiveUtility";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Prereqs.KnifeHeldPrereq";
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.CanThrowWeapon";
									modifierType = "Additive";
									value = 1f;
								} : ConstantStatModifier
							];
						} : StatModifierGroup;
					} : ApplyStatGroupOnPlayer
				];
			};
		} : PerkLevelData
	];
	loc_name_key = "LocKey#6609";
	loc_desc_key = "LocKey#80512";
}

Stealth_Area_02_Perk_3 : StealthPerk
{
	CName enumName = "Stealth_Area_02_Perk_3";
	perkIcon = "UIIcon.Stealth_Area_02_Perk_3";
	utility = "Perks.ActiveUtility";
	levels = 
	[
		{
			dataPackage = 
			{
			};
		}
	];
	loc_name_key = "LocKey#15016";
	loc_desc_key = "LocKey#15017";
}

Stealth_Area_03_Perk_1 : StealthPerk
{
	CName enumName = "Stealth_Area_03_Perk_1";
	perkIcon = "UIIcon.Stealth_Area_03_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = 
						{
							stateName = "Stealth";
							isInState = true;
						} : Prereqs.CombatPSMPrereq;
						statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.CritChance";
									modifierType = "Additive";
									value = 7f;
								} : ConstantStatModifier
							];
						} : StatModifierGroup;
					} : ApplyStatGroupOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					7
				];
			};
		} : PerkLevelData
	];
	loc_name_key = "LocKey#6610";
	loc_desc_key = "LocKey#5912";
}

Stealth_Area_03_Perk_2 : StealthPerk
{
	CName enumName = "Stealth_Area_03_Perk_2";
	perkIcon = "UIIcon.Stealth_Area_03_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.HitIsTargetHuman";
						value = 1.15f;
					} : MultiplyDamage
				];
			};
			uiData = 
			{
				intValues = 
				[
					15
				];
			};
		} : PerkLevelData
	];
	loc_name_key = "LocKey#6611";
	loc_desc_key = "LocKey#5913";
}

Stealth_Area_03_Perk_3 : StealthPerk
{
	CName enumName = "Stealth_Area_03_Perk_3";
	perkIcon = "UIIcon.Stealth_Area_03_Perk_3";
	utility = "Perks.TriggeredUtility";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = 
						{
							string stateName = "Default";
							bool isInState = true;
						} : TakedownPSMPrereq;
						statusEffect = "BaseStatusEffect.Stealth_Area_03_Perk_3_Buff_Level_1";
						removeWithEffector = false;
					} : ApplyStatusEffectEffector
				];
			};
			uiData = 
			{
				intValues = 
				[
					30
				];
				floatValues = 
				[
					10
				];
			};
		} : PerkLevelData
	];
	loc_name_key = "LocKey#40507";
	loc_desc_key = "LocKey#40506";
}

Stealth_Area_04_Perk_1 : StealthPerk
{
	CName enumName = "Stealth_Area_04_Perk_1";
	perkIcon = "UIIcon.Stealth_Area_04_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = 
						{
							nestedPrereqs = 
							[
								"Perks.SniperPerkWeaponsPrereq", "Perks.IsPlayerOutOfCombatOrStealthPSMState"
							];
						} : ANDPrereq;
						effectorToApply = 
						{
							prereqRecord = "Perks.HitIsBodyPartHead";
							value = 1.10f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					10
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = 
						{
							nestedPrereqs = 
							[
								"Perks.SniperPerkWeaponsPrereq", "Perks.IsPlayerOutOfCombatOrStealthPSMState"
							];
						} : ANDPrereq;
						effectorToApply = 
						{
							prereqRecord = "Perks.HitIsBodyPartHead";
							value = 1.20f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					20
				];
			};
		} : PerkLevelData
	];
	loc_name_key = "LocKey#6612";
	loc_desc_key = "LocKey#5914";
}

Stealth_Area_04_Perk_2 : StealthPerk
{
	CName enumName = "Stealth_Area_04_Perk_2";
	perkIcon = "UIIcon.Stealth_Area_04_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Prereqs.KnifeHeldPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsAttackThrownType";
							bool isRandom = false;
							statusEffect = "BaseStatusEffect.StealthThrowingMeleeDamageIncrease";
						} : AddStatusEffectToAttackEffector;
					} : ApplyEffectorOnPlayer, 
					{
						effectorToApply = 
						{
							prereqRecord = "Perks.KnifeMeleeDamageIncreasePerkPrereq";
							value = 1.4f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					40, 6
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Prereqs.KnifeHeldPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsAttackThrownType";
							bool isRandom = false;
							statusEffect = "BaseStatusEffect.StealthThrowingMeleeDamageIncrease";
						} : AddStatusEffectToAttackEffector;
					} : ApplyEffectorOnPlayer, 
					{
						effectorToApply = 
						{
							prereqRecord = "Perks.KnifeMeleeDamageIncreasePerkPrereq";
							value = 1.8f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					80, 6
				];
			};
		}
	];
	loc_name_key = "LocKey#6613";
	loc_desc_key = "LocKey#80331";
}

Stealth_Area_05_Perk_1 : StealthPerk
{
	CName enumName = "Stealth_Area_05_Perk_1";
	perkIcon = "UIIcon.Stealth_Area_05_Perk_1";
	utility = "Perks.ActiveUtility";
	levels = 
	[
		{
			dataPackage = 
			{
				stats = 
				[
					{
						statType = "BaseStats.CanPickUpBodyAfterTakedown";
						modifierType = "Additive";
						value = 1f;
					} : ConstantStatModifier
				];
			};
		} : PerkLevelData
	];
	loc_name_key = "LocKey#15019";
	loc_desc_key = "LocKey#15018";
}

Stealth_Area_05_Perk_2 : StealthPerk
{
	CName enumName = "Stealth_Area_05_Perk_2";
	perkIcon = "UIIcon.Stealth_Area_05_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				stats = 
				[
					{
						statType = "BaseStats.PoisonImmunity";
						modifierType = "Additive";
						value = 1f;
					} : ConstantStatModifier
				];
			};
		} : PerkLevelData
	];
	loc_name_key = "LocKey#6614";
	loc_desc_key = "LocKey#5916";
}

Stealth_Area_05_Perk_3 : StealthPerk
{
	CName enumName = "Stealth_Area_05_Perk_3";
	perkIcon = "UIIcon.Stealth_Area_05_Perk_3";
	utility = "Perks.TriggeredUtility";
	levels = 
	[
		{
			dataPackage = 
			{
				stats = 
				[
					{
						statType = "BaseStats.CanQuickMeleeStagger";
						modifierType = "Additive";
						value = 1f;
					} : ConstantStatModifier
				];
			};
		} : PerkLevelData
	];
	loc_name_key = "LocKey#15021";
	loc_desc_key = "LocKey#15020";
}

Stealth_Area_06_Perk_1 : StealthPerk
{
	loc_name_key = "LocKey#15023";
	loc_desc_key = "LocKey#15022";
	perkIcon = "UIIcon.Stealth_Area_06_Perk_1";
	enumName = "Stealth_Area_06_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				stats = 
				[
					{
						statType = "BaseStats.Visibility";
						modifierType = "AdditiveMultiplier";
						value = -0.2;
					} : ConstantStatModifier
				];
			};
			uiData = 
			{
				intValues = 
				[
					20
				];
			};
		}, 
		{
			dataPackage = 
			{
				stats = 
				[
					{
						statType = "BaseStats.Visibility";
						modifierType = "AdditiveMultiplier";
						value = -0.4;
					} : ConstantStatModifier
				];
			};
			uiData = 
			{
				intValues = 
				[
					40
				];
			};
		}
	];
}

Stealth_Area_06_Perk_2 : StealthPerk
{
	loc_name_key = "LocKey#6615";
	loc_desc_key = "LocKey#5917";
	perkIcon = "UIIcon.Stealth_Area_06_Perk_2";
	utility = "Perks.TriggeredUtility";
	enumName = "Stealth_Area_06_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = 
						{
							stateName = "InCombat";
							isInState = true;
						} : Prereqs.CombatPSMPrereq;
						statusEffect = "BaseStatusEffect.StealthEnteringCritUpgrade";
						removeWithEffector = true;
					} : ApplyStatusEffectEffector
				];
			};
			uiData = 
			{
				intValues = 
				[
					10
				];
				floatValues = 
				[
					7
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = 
						{
							stateName = "InCombat";
							isInState = true;
						} : Prereqs.CombatPSMPrereq;
						statusEffect = "BaseStatusEffect.StealthEnteringCritUpgradeLevel2";
						removeWithEffector = true;
					} : ApplyStatusEffectEffector
				];
			};
			uiData = 
			{
				intValues = 
				[
					20
				];
				floatValues = 
				[
					7
				];
			};
		}
	];
}

Stealth_Area_07_Perk_1 : StealthPerk
{
	loc_name_key = "LocKey#80340";
	loc_desc_key = "LocKey#80333";
	perkIcon = "UIIcon.Stealth_Area_07_Perk_1";
	enumName = "Stealth_Area_07_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Prereqs.KnifeHeldPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										bodyPart = "Head";
									} : BodyPartHitPrereqCondition, 
									{
										npcType = "Human";
									} : TargetNPCTypeHitPrereqCondition, 
									{
										attackType = "Thrown";
									} : AttackTypeHitPrereqCondition
								];
							} : Prereqs.ProcessHitTriggered;
							bool isRandom = false;
							statusEffect = "BaseStatusEffect.MinorBlind";
						} : AddStatusEffectToAttackEffector;
					} : ApplyEffectorOnPlayer
				];
			};
		} : PerkLevelData
	];
}

Stealth_Area_07_Perk_2 : StealthPerk
{
	loc_name_key = "LocKey#6616";
	loc_desc_key = "LocKey#5918";
	perkIcon = "UIIcon.Stealth_Area_07_Perk_2";
	enumName = "Stealth_Area_07_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				stats = 
				[
					{
						statType = "BaseStats.CanPoisonSlow";
						modifierType = "Additive";
						value = 1;
					} : ConstantStatModifier
				];
			};
		}
	];
}

Stealth_Area_07_Perk_3 : StealthPerk
{
	loc_name_key = "LocKey#15027";
	loc_desc_key = "LocKey#15025";
	perkIcon = "UIIcon.Stealth_Area_07_Perk_3";
	enumName = "Stealth_Area_07_Perk_3";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Prereqs.KnifeHeldPrereq";
						fk< Effector > effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										CName weaponType = "Melee";
									} : WeaponTypeHitPrereqCondition
								];
							} : Prereqs.ProcessHitTriggered;
							bool isRandom = false;
							fk< StatusEffect > statusEffect = "BaseStatusEffect.KnifePoison";
						} : AddStatusEffectToAttackEffector;
					} : ApplyEffectorOnPlayer
				];
			};
		} : PerkLevelData
	];
}

Stealth_Area_08_Perk_1 : StealthPerk
{
	perkIcon = "UIIcon.Stealth_Area_08_Perk_1";
	enumName = "Stealth_Area_08_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = 
						{
							stateName = "Stealth";
							isInState = true;
						} : Prereqs.CombatPSMPrereq;
						statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.HealthOutOfCombatRegenRateMult";
									modifierType = "Additive";
									value = 0.25f;
								} : ConstantStatModifier
							];
						} : StatModifierGroup;
					} : ApplyStatGroupOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					25
				];
			};
		} : PerkLevelData
	];
	loc_name_key = "LocKey#15029";
	loc_desc_key = "LocKey#15028";
}

Stealth_Area_08_Perk_2 : StealthPerk
{
	loc_name_key = "LocKey#6617";
	loc_desc_key = "LocKey#5919";
	perkIcon = "UIIcon.Stealth_Area_08_Perk_2";
	utility = "Perks.TriggeredUtility";
	enumName = "Stealth_Area_08_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = 
						{
							prereqClassName = "gameMultiPrereq";
							aggregationType = "OR";
							nestedPrereqs = 
							[
								"Perks.ShouldModifyMaxSpeedInCombat", "Perks.ShouldModifyMaxSpeedInCombatIgnoreSprint"
							];
						} : MultiPrereq;
						statusEffect = "BaseStatusEffect.Stealth_Area_08_Perk_2_Buff_Level_1";
					} : ApplyStatusEffectEffector
				];
			};
			uiData = 
			{
				intValues = 
				[
					50
				];
				floatValues = 
				[
					5f
				];
			};
		}
	];
}

Stealth_Area_08_Perk_3 : StealthPerk
{
	loc_name_key = "LocKey#80341";
	loc_desc_key = "LocKey#80336";
	perkIcon = "UIIcon.Stealth_Area_08_Perk_3";
	enumName = "Stealth_Area_08_Perk_3";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Prereqs.KnifeHeldPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.KnivesReloadPerkPrereqs";
						} : JugglerPerkRemoveKnifeCooldowns;
					} : ApplyEffectorOnPlayer
				];
			};
		}
	];
}

Stealth_Area_09_Perk_1 : StealthPerk
{
	loc_name_key = "LocKey#80976";
	loc_desc_key = "LocKey#80977";
	perkIcon = "UIIcon.Stealth_Area_09_Perk_1";
	enumName = "Stealth_Area_09_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Prereqs.MeleeWeaponHeldPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.AntidotePerkPrereq";
							bool isRandom = false;
							statusEffect = "BaseStatusEffect.StealthPerkAntidoteSE";
						} : AddStatusEffectToAttackEffector;
					} : ApplyEffectorOnPlayer, 
					{
						prereqRecord = "Prereqs.MeleeWeaponHeldPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.AntidotePerkPrereq";
							CName effectorClassName = "AddHitFlagToAttackEffector";
							string hitFlag = "CriticalHit";
						};
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					100, 5
				];
			};
		}
	];
}

AntidotePerkPrereq : Prereqs.ORPrereq
{
	fk< IPrereq >[] nestedPrereqs = 
	[
		{
			conditions = 
			[
				{
					statusEffect = "Poisoned";
					checkType = "CheckType.Type";
				} : StatusEffectPresentHitPrereqCondition, 
				{
					targetType = "Player";
					invert = true;
				} : TargetTypeHitPrereqCondition, 
				{
					attackType = "Thrown";
				} : AttackTypeHitPrereqCondition, 
				{
					type = "Prereqs.HitFlag";
					string hitFlag = "DealNoDamage";
					bool invert = true;
				}
			];
		} : Prereqs.ProcessHitTriggered, 
		{
			conditions = 
			[
				{
					statusEffect = "Poisoned";
					checkType = "CheckType.Type";
				} : StatusEffectPresentHitPrereqCondition, 
				{
					targetType = "Player";
					invert = true;
				} : TargetTypeHitPrereqCondition, 
				{
					attackType = "StrongMelee";
				} : AttackTypeHitPrereqCondition, 
				{
					type = "Prereqs.HitFlag";
					string hitFlag = "DealNoDamage";
					bool invert = true;
				}
			];
		} : Prereqs.ProcessHitTriggered
	];
}

Stealth_Area_09_Perk_2 : StealthPerk
{
	loc_name_key = "LocKey#15033";
	loc_desc_key = "LocKey#15034";
	perkIcon = "UIIcon.Stealth_Area_09_Perk_2";
	utility = "Perks.TriggeredUtility";
	enumName = "Stealth_Area_09_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = 
						{
							nestedPrereqs = 
							[
								{
									float valueToCheck = 50;
									CName statPoolType = "Health";
									CName comparisonType = "LessOrEqual";
								} : StatPoolPrereq, 
								{
									statusEffect = "BaseStatusEffect.StealthArea09Perk2Cooldown";
								} : StatusEffectAbsentPrereq, 
								{
									statusEffect = "BaseStatusEffect.Stealth_Area_09_Perk_2_Buff_Level_1";
								} : StatusEffectAbsentPrereq
							];
						} : ANDPrereq;
						statusEffect = "BaseStatusEffect.Stealth_Area_09_Perk_2_Buff_Level_1";
						bool removeWithEffector = false;
					} : ApplyStatusEffectEffector, 
					{
						prereqRecord = 
						{
							prereqClassName = "StatusEffectRemovedPrereq";
							statusEffect = "BaseStatusEffect.Stealth_Area_09_Perk_2_Buff_Level_1";
							checkType = "CheckType.Record";
							bool fireAndForget = true;
						} : StatusEffectPrereq;
						statusEffect = "BaseStatusEffect.StealthArea09Perk2Cooldown";
						bool removeWithEffector = false;
					} : ApplyStatusEffectEffector
				];
			};
			uiData = 
			{
				intValues = 
				[
					50, 50
				];
				floatValues = 
				[
					10
				];
			};
		}
	];
}

Stealth_Area_09_Perk_3 : StealthPerk
{
	loc_name_key = "LocKey#80974";
	loc_desc_key = "LocKey#80975";
	perkIcon = "UIIcon.Stealth_Area_09_Perk_3";
	enumName = "Stealth_Area_09_Perk_3";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = 
						{
							conditions = 
							[
								{
									statusEffect = "Poisoned";
									checkType = "CheckType.Type";
								} : StatusEffectPresentHitPrereqCondition, 
								{
									targetType = "Player";
									invert = true;
								} : TargetTypeHitPrereqCondition
							];
						} : ProcessHitTriggered;
						value = 1.2f;
					} : MultiplyDamage
				];
				stats = 
				[
					{
						statType = "BaseStats.CanPlayerPiercePoisonImmunity";
						modifierType = "Additive";
						value = 1.f;
					} : ConstantStatModifier
				];
			};
			uiData = 
			{
				intValues = 
				[
					20
				];
			};
		}
	];
}

Stealth_Area_10_Perk_1 : StealthPerk
{
	loc_name_key = "LocKey#15035";
	loc_desc_key = "LocKey#15031";
	perkIcon = "UIIcon.Stealth_Area_10_Perk_1";
	enumName = "Stealth_Area_10_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = 
						{
							nestedPrereqs = 
							[
								"Prereqs.MeleeWeaponHeldPrereq"
							];
						} : ANDPrereq;
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										hitFlag = "StealthHit";
									} : HitFlagHitPrereqCondition, 
									{
										attackSubtype = "CrouchAttack";
									} : AttackSubtypeHitPrereqCondition
								];
							} : ProcessHitTriggered;
							value = 2f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer, 
					{
						prereqRecord = 
						{
							nestedPrereqs = 
							[
								"Prereqs.MeleeWeaponHeldPrereq"
							];
						} : ANDPrereq;
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										hitFlag = "StealthHit";
									} : HitFlagHitPrereqCondition, 
									{
										attackSubtype = "CrouchAttack";
									} : AttackSubtypeHitPrereqCondition
								];
							} : ProcessHitTriggered;
							CName effectorClassName = "AddHitFlagToAttackEffector";
							string hitFlag = "CriticalHit";
						};
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					100
				];
			};
		}
	];
}

KnivesReloadPerkPrereqs : ORPrereq
{
	nestedPrereqs = 
	[
		{
			conditions += 
			[
				{
					attackType = "Thrown";
				} : AttackTypeHitPrereqCondition, 
				{
					statusEffect = "Defeated";
					checkType = "CheckType.Type";
					invert = true;
				} : StatusEffectPresentHitPrereqCondition, 
				{
					hitFlag = "DealNoDamage";
					invert = true;
				} : HitFlagHitPrereqCondition, 
				{
					npcType = "Any";
					invert = true;
				} : TargetNPCTypeHitPrereqCondition
			];
		} : IsHitACritical, 
		{
			conditions += 
			[
				{
					attackType = "Thrown";
				} : AttackTypeHitPrereqCondition, 
				{
					statusEffect = "Defeated";
					checkType = "CheckType.Type";
					invert = true;
				} : StatusEffectPresentHitPrereqCondition, 
				{
					hitFlag = "DealNoDamage";
					invert = true;
				} : HitFlagHitPrereqCondition, 
				{
					npcType = "Any";
					invert = true;
				} : TargetNPCTypeHitPrereqCondition
			];
		} : IsTargetKilled, 
		{
			conditions += 
			[
				{
					dotType = "Poisoned";
				} : DamageOverTimeTypeHitPrereqCondition, 
				{
					statusEffect = "KnifePoison";
					checkType = "CheckType.Record";
				} : StatusEffectPresentHitPrereqCondition, 
				{
					npcType = "Any";
					invert = true;
				} : TargetNPCTypeHitPrereqCondition
			];
		} : IsTargetKilled
	];
}

KnifeMeleeDamageIncreasePerkPrereq : ORPrereq
{
	nestedPrereqs = 
	[
		{
			conditions = 
			[
				"Perks.StealthThrowingMeleeDamageIncreasePresentHitCondition", {
					attackType = "Melee";
				} : AttackTypeHitPrereqCondition
			];
		} : Prereqs.ProcessHitTriggered, 
		{
			conditions = 
			[
				"Perks.StealthThrowingMeleeDamageIncreasePresentHitCondition", {
					attackType = "StrongMelee";
				} : AttackTypeHitPrereqCondition
			];
		} : Prereqs.ProcessHitTriggered, 
		{
			conditions = 
			[
				"Perks.StealthThrowingMeleeDamageIncreasePresentHitCondition", {
					attackType = "QuickMelee";
				} : AttackTypeHitPrereqCondition
			];
		} : Prereqs.ProcessHitTriggered
	];
}

StealthThrowingMeleeDamageIncreasePresentHitCondition : StatusEffectPresentHitPrereqCondition
{
	statusEffect = "StealthThrowingMeleeDamageIncrease";
	checkType = "CheckType.Record";
}

StealthAntidoteSePresenttHitCondition : StatusEffectPresentHitPrereqCondition
{
	statusEffect = "StealthPerkAntidoteSE";
	checkType = "CheckType.Record";
}

SniperPerkWeaponsPrereq : Prereqs.ORPrereq
{
	CName aggregationType = "OR";
	nestedPrereqs = 
	[
		"Prereqs.RangedWeaponHeldPrereq", "Prereqs.KnifeHeldPrereq"
	];
}

StealthPerkKnifeInstantPoisonAttack : Attack_GameEffect
{
	effectName = "directHits";
	effectTag = "directTarget";
	attackType = "AttackType.Effect";
	hitFlags = 
	[
		"CanDamageSelf"
	];
	damageType = "DamageTypes.Chemical";
	statModifiers = 
	[
		{
			statType = "BaseStats.ChemicalDamage";
		} : TargetBaseHealth, 
		{
			statType = "BaseStats.ChemicalDamage";
			modifierType = "Multiplier";
			value = 0.3;
		} : ConstantStatModifier
	];
}

