package Perks
using RTDB, Prereqs, Effectors

AssaultProficiencyPrereq : StatPrereq
{
	float valueToCheck = 0;
	CName statType = "Reflexes";
	CName comparisonType = "GreaterOrEqual";
}

AssaultMasteryPrereq : StatPrereq
{
	float valueToCheck = 0;
	CName statType = "Assault";
	CName comparisonType = "GreaterOrEqual";
}

Assault_Area_01 : PerkArea
{
	enumName = "Assault_Area_01";
	requirement = 
	{
		valueToCheck = 0;
	} : AssaultProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : AssaultMasteryPrereq;
	perks = 
	[
		"Perks.Assault_Area_01_Perk_1", "Perks.Assault_Area_01_Perk_2"
	];
	maxLevel = 3;
}

Assault_Area_02 : PerkArea
{
	enumName = "Assault_Area_02";
	requirement = 
	{
		valueToCheck = 5;
	} : AssaultProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : AssaultMasteryPrereq;
	perks = 
	[
		"Perks.Assault_Area_02_Perk_1", "Perks.Assault_Area_02_Perk_2"
	];
}

Assault_Area_03 : PerkArea
{
	enumName = "Assault_Area_03";
	requirement = 
	{
		valueToCheck = 7;
	} : AssaultProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : AssaultMasteryPrereq;
	perks = 
	[
		"Perks.Assault_Area_03_Perk_1", "Perks.Assault_Area_03_Perk_2"
	];
	maxLevel = 1;
}

Assault_Area_04 : PerkArea
{
	enumName = "Assault_Area_04";
	requirement = 
	{
		valueToCheck = 9;
	} : AssaultProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : AssaultMasteryPrereq;
	perks = 
	[
		"Perks.Assault_Area_04_Perk_1", "Perks.Assault_Area_04_Perk_2"
	];
	maxLevel = 2;
}

Assault_Area_05 : PerkArea
{
	enumName = "Assault_Area_05";
	requirement = 
	{
		valueToCheck = 11;
	} : AssaultProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : AssaultMasteryPrereq;
	perks = 
	[
		"Perks.Assault_Area_05_Perk_1", "Perks.Assault_Area_05_Perk_2"
	];
	maxLevel = 2;
}

Assault_Area_06 : PerkArea
{
	enumName = "Assault_Area_06";
	requirement = 
	{
		valueToCheck = 12;
	} : AssaultProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : AssaultMasteryPrereq;
	perks = 
	[
		"Perks.Assault_Area_06_Perk_1", "Perks.Assault_Area_06_Perk_2"
	];
	maxLevel = 2;
}

Assault_Area_07 : PerkArea
{
	enumName = "Assault_Area_07";
	requirement = 
	{
		valueToCheck = 14;
	} : AssaultProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : AssaultMasteryPrereq;
	perks = 
	[
		"Perks.Assault_Area_07_Perk_1", "Perks.Assault_Area_07_Perk_2"
	];
	maxLevel = 1;
}

Assault_Area_08 : PerkArea
{
	enumName = "Assault_Area_08";
	requirement = 
	{
		valueToCheck = 16;
	} : AssaultProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : AssaultMasteryPrereq;
	perks = 
	[
		"Perks.Assault_Area_08_Perk_1", "Perks.Assault_Area_08_Perk_2"
	];
	maxLevel = 1;
}

Assault_Area_09 : PerkArea
{
	enumName = "Assault_Area_09";
	requirement = 
	{
		valueToCheck = 18;
	} : AssaultProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : AssaultMasteryPrereq;
	perks = 
	[
		"Perks.Assault_Area_09_Perk_1", "Perks.Assault_Area_09_Perk_2"
	];
	maxLevel = 1;
}

Assault_Area_10 : PerkArea
{
	enumName = "Assault_Area_10";
	requirement = 
	{
		valueToCheck = 20;
	} : AssaultProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : AssaultMasteryPrereq;
	perks = 
	[
		"Perks.Assault_Area_10_Perk_1"
	];
	maxLevel = 1;
}

Assault_Area_01_Perk_1 : AssaultPerk
{
	loc_name_key = "LocKey#6660";
	loc_desc_key = "LocKey#6659";
	perkIcon = "UIIcon.Assault_Area_01_Perk_1";
	enumName = "Assault_Area_01_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Prereqs.ProcessHitTriggered";
							value = 1.03f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					3
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Prereqs.ProcessHitTriggered";
							value = 1.06f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					6
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Prereqs.ProcessHitTriggered";
							value = 1.1f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					10
				];
			};
		}
	];
}

Assault_Area_01_Perk_2 : AssaultPerk
{
	loc_name_key = "LocKey#6482";
	loc_desc_key = "LocKey#5783";
	perkIcon = "UIIcon.Assault_Area_01_Perk_2";
	enumName = "Assault_Area_01_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.AimInTime";
									modifierType = "AdditiveMultiplier";
									value = -0.1f;
								} : ConstantStatModifier, 
								{
									statType = "BaseStats.AimOutTime";
									modifierType = "AdditiveMultiplier";
									value = -0.1f;
								} : ConstantStatModifier
							];
						} : StatModifierGroup;
					} : ApplyStatGroupOnWeapon
				];
			};
			uiData = 
			{
				intValues = 
				[
					10
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.AimInTime";
									modifierType = "AdditiveMultiplier";
									value = -0.25f;
								} : ConstantStatModifier, 
								{
									statType = "BaseStats.AimOutTime";
									modifierType = "AdditiveMultiplier";
									value = -0.25f;
								} : ConstantStatModifier
							];
						} : StatModifierGroup;
					} : ApplyStatGroupOnWeapon
				];
			};
			uiData = 
			{
				intValues = 
				[
					25
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.AimInTime";
									modifierType = "AdditiveMultiplier";
									value = -0.5f;
								} : ConstantStatModifier, 
								{
									statType = "BaseStats.AimOutTime";
									modifierType = "AdditiveMultiplier";
									value = -0.5f;
								} : ConstantStatModifier
							];
						} : StatModifierGroup;
					} : ApplyStatGroupOnWeapon
				];
			};
			uiData = 
			{
				intValues = 
				[
					50
				];
			};
		} : PerkLevelData
	];
}

Assault_Area_02_Perk_1 : AssaultPerk
{
	loc_name_key = "LocKey#6483";
	loc_desc_key = "LocKey#5784";
	perkIcon = "UIIcon.Assault_Area_02_Perk_1";
	enumName = "Assault_Area_02_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Prereqs.UsingCoverPSMPrereq";
							fk< StatModifierGroup > statGroup = 
							{
								statModifiers = 
								[
									{
										statType = "BaseStats.CritChance";
										modifierType = "Additive";
										value = 4;
									} : ConstantStatModifier
								];
							};
						} : ApplyStatGroupOnWeapon;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					4
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Prereqs.UsingCoverPSMPrereq";
							fk< StatModifierGroup > statGroup = 
							{
								statModifiers = 
								[
									{
										statType = "BaseStats.CritChance";
										modifierType = "Additive";
										value = 8;
									} : ConstantStatModifier
								];
							};
						} : ApplyStatGroupOnWeapon;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					8
				];
			};
		} : PerkLevelData
	];
}

Assault_Area_02_Perk_2 : AssaultPerk
{
	loc_name_key = "LocKey#6484";
	loc_desc_key = "LocKey#5785";
	perkIcon = "UIIcon.Assault_Area_02_Perk_2";
	enumName = "Assault_Area_02_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsHitQuickMelee";
							value = 1.75f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					75
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsHitQuickMelee";
							value = 2.5f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					150
				];
			};
		}
	];
}

Assault_Area_03_Perk_1 : AssaultPerk
{
	loc_name_key = "LocKey#6485";
	loc_desc_key = "LocKey#5786";
	perkIcon = "UIIcon.Assault_Area_03_Perk_1";
	enumName = "Assault_Area_03_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = 
						{
							nestedPrereqs = 
							[
								"Perks.AssaultPerkPrereq", "Perks.PlayerIsAiming"
							];
						} : Prereqs.ANDPrereq;
						effectorToApply = 
						{
							prereqRecord = "Prereqs.ProcessHitTriggered";
							value = 1.1f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					10
				];
			};
		}
	];
}

Assault_Area_03_Perk_2 : AssaultPerk
{
	loc_name_key = "LocKey#6486";
	loc_desc_key = "LocKey#5787";
	perkIcon = "UIIcon.Assault_Area_03_Perk_2";
	enumName = "Assault_Area_03_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										valueToCheck = 50f;
										objectToCheck = "Target";
										statPoolToCompare = "Health";
										comparisonType = "GreaterOrEqual";
									} : StatPoolHitPrereqCondition
								];
							} : ProcessHitTriggered;
							value = 1.25f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					25, 50
				];
			};
		}
	];
}

Assault_Area_04_Perk_1 : AssaultPerk
{
	loc_name_key = "LocKey#6488";
	loc_desc_key = "LocKey#5789";
	perkIcon = "UIIcon.Assault_Area_04_Perk_1";
	utility = "Perks.TriggeredUtility";
	enumName = "Assault_Area_04_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsTargetKilled";
							statusEffect = "BaseStatusEffect.Assault_Area_04_Perk_1_Buff_Level_1";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					20
				];
				floatValues = 
				[
					5
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsTargetKilled";
							statusEffect = "BaseStatusEffect.Assault_Area_04_Perk_1_Buff_Level_2";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					40
				];
				floatValues = 
				[
					5
				];
			};
		} : PerkLevelData
	];
}

Assault_Area_04_Perk_2 : AssaultPerk
{
	loc_name_key = "LocKey#6489";
	loc_desc_key = "LocKey#5790";
	perkIcon = "UIIcon.Assault_Area_04_Perk_2";
	enumName = "Assault_Area_04_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsTargetMoving";
							float value = 1.1f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					10
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsTargetMoving";
							float value = 1.2f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					20
				];
			};
		} : PerkLevelData
	];
}

Assault_Area_05_Perk_1 : AssaultPerk
{
	loc_name_key = "LocKey#6490";
	loc_desc_key = "LocKey#5791";
	perkIcon = "UIIcon.Assault_Area_05_Perk_1";
	enumName = "Assault_Area_05_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.SniperAndPrecisionRiflePrereq";
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.HeadshotDamageMultiplier";
									modifierType = "Additive";
									value = 0.1f;
								} : ConstantStatModifier
							];
						} : StatModifierGroup;
					} : ApplyStatGroupOnWeapon
				];
			};
			uiData = 
			{
				intValues = 
				[
					10
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.SniperAndPrecisionRiflePrereq";
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.HeadshotDamageMultiplier";
									modifierType = "Additive";
									value = 0.15f;
								} : ConstantStatModifier
							];
						} : StatModifierGroup;
					} : ApplyStatGroupOnWeapon
				];
			};
			uiData = 
			{
				intValues = 
				[
					15
				];
			};
		} : PerkLevelData
	];
}

Assault_Area_05_Perk_2 : AssaultPerk
{
	loc_name_key = "LocKey#6491";
	loc_desc_key = "LocKey#5792";
	perkIcon = "UIIcon.Assault_Area_05_Perk_2";
	enumName = "Assault_Area_05_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.RiflesAndSMGPrereq";
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.ReloadTimeBonus";
									modifierType = "Additive";
									value = -0.1f;
								} : ConstantStatModifier, 
								{
									statType = "BaseStats.EmptyReloadTime";
									modifierType = "AdditiveMultiplier";
									value = -0.1f;
								} : ConstantStatModifier
							];
						} : StatModifierGroup;
					} : ApplyStatGroupOnWeapon
				];
			};
			uiData = 
			{
				intValues = 
				[
					10
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.RiflesAndSMGPrereq";
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.ReloadTimeBonus";
									modifierType = "Additive";
									value = -0.2f;
								} : ConstantStatModifier, 
								{
									statType = "BaseStats.EmptyReloadTime";
									modifierType = "AdditiveMultiplier";
									value = -0.2f;
								} : ConstantStatModifier
							];
						} : StatModifierGroup;
					} : ApplyStatGroupOnWeapon
				];
			};
			uiData = 
			{
				intValues = 
				[
					20
				];
			};
		} : PerkLevelData
	];
}

Assault_Area_06_Perk_1 : AssaultPerk
{
	loc_name_key = "LocKey#6492";
	loc_desc_key = "LocKey#5793";
	perkIcon = "UIIcon.Assault_Area_06_Perk_1";
	enumName = "Assault_Area_06_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Prereqs.UsingCoverPSMPrereq";
							fk< StatModifierGroup > statGroup = 
							{
								statModifiers = 
								[
									{
										statType = "BaseStats.BaseDamage";
										modifierType = "AdditiveMultiplier";
										value = 0.05f;
									} : ConstantStatModifier, 
									{
										statType = "BaseStats.PhysicalDamage";
										modifierType = "AdditiveMultiplier";
										value = 0.05f;
									} : ConstantStatModifier, 
									{
										statType = "BaseStats.ThermalDamage";
										modifierType = "AdditiveMultiplier";
										value = 0.05f;
									} : ConstantStatModifier, 
									{
										statType = "BaseStats.ElectricDamage";
										modifierType = "AdditiveMultiplier";
										value = 0.05f;
									} : ConstantStatModifier, 
									{
										statType = "BaseStats.ChemicalDamage";
										modifierType = "AdditiveMultiplier";
										value = 0.05f;
									} : ConstantStatModifier
								];
							} : StatModifierGroup;
						} : ApplyStatGroupOnWeapon;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					5
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Prereqs.UsingCoverPSMPrereq";
							fk< StatModifierGroup > statGroup = 
							{
								statModifiers = 
								[
									{
										statType = "BaseStats.BaseDamage";
										modifierType = "AdditiveMultiplier";
										value = 0.1f;
									} : ConstantStatModifier, 
									{
										statType = "BaseStats.PhysicalDamage";
										modifierType = "AdditiveMultiplier";
										value = 0.1f;
									} : ConstantStatModifier, 
									{
										statType = "BaseStats.ThermalDamage";
										modifierType = "AdditiveMultiplier";
										value = 0.1f;
									} : ConstantStatModifier, 
									{
										statType = "BaseStats.ElectricDamage";
										modifierType = "AdditiveMultiplier";
										value = 0.1f;
									} : ConstantStatModifier, 
									{
										statType = "BaseStats.ChemicalDamage";
										modifierType = "AdditiveMultiplier";
										value = 0.1f;
									} : ConstantStatModifier
								];
							} : StatModifierGroup;
						} : ApplyStatGroupOnWeapon;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					10
				];
			};
		}
	];
}

Assault_Area_06_Perk_2 : AssaultPerk
{
	loc_name_key = "LocKey#6493";
	loc_desc_key = "LocKey#5794";
	perkIcon = "UIIcon.Assault_Area_06_Perk_2";
	enumName = "Assault_Area_06_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Prereqs.UsingCoverPSMPrereq";
							fk< StatModifierGroup > statGroup = 
							{
								statModifiers = 
								[
									{
										statType = "BaseStats.RecoilKickMin";
										modifierType = "AdditiveMultiplier";
										value = -0.05;
									} : ConstantStatModifier, 
									{
										statType = "BaseStats.RecoilKickMax";
										modifierType = "AdditiveMultiplier";
										value = -0.05;
									} : ConstantStatModifier
								];
							};
						} : ApplyStatGroupOnWeapon;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					5
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Prereqs.UsingCoverPSMPrereq";
							fk< StatModifierGroup > statGroup = 
							{
								statModifiers = 
								[
									{
										statType = "BaseStats.RecoilKickMin";
										modifierType = "AdditiveMultiplier";
										value = -0.1;
									} : ConstantStatModifier, 
									{
										statType = "BaseStats.RecoilKickMax";
										modifierType = "AdditiveMultiplier";
										value = -0.1;
									} : ConstantStatModifier
								];
							};
						} : ApplyStatGroupOnWeapon;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					10
				];
			};
		}
	];
}

Assault_Area_07_Perk_1 : AssaultPerk
{
	loc_name_key = "LocKey#6495";
	loc_desc_key = "LocKey#5796";
	perkIcon = "UIIcon.Assault_Area_07_Perk_1";
	utility = "Perks.TriggeredUtility";
	enumName = "Assault_Area_07_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.HitIsBodyPartHead";
							statusEffect = "BaseStatusEffect.Assault_Area_07_Perk_1_Buff_Level_1";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					4, 5
				];
				floatValues = 
				[
					10f
				];
			};
		} : PerkLevelData
	];
}

Assault_Area_07_Perk_2 : AssaultPerk
{
	loc_name_key = "LocKey#6496";
	loc_desc_key = "LocKey#5797";
	perkIcon = "UIIcon.Assault_Area_07_Perk_2";
	enumName = "Assault_Area_07_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.CritDamage";
									modifierType = "Additive";
									value = 20f;
								} : ConstantStatModifier
							];
						} : StatModifierGroup;
					} : ApplyStatGroupOnWeapon
				];
			};
			uiData = 
			{
				intValues = 
				[
					20
				];
			};
		} : PerkLevelData
	];
}

Assault_Area_08_Perk_1 : AssaultPerk
{
	loc_name_key = "LocKey#6497";
	loc_desc_key = "LocKey#5798";
	perkIcon = "UIIcon.Assault_Area_08_Perk_1";
	enumName = "Assault_Area_08_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Prereqs.UsingCoverPSMPrereq";
							fk< StatModifierGroup > statGroup = 
							{
								statModifiers = 
								[
									{
										statType = "BaseStats.Armor";
										modifierType = "AdditiveMultiplier";
										value = 0.15f;
									} : ConstantStatModifier, 
									{
										statType = "BaseStats.ThermalResistance";
										modifierType = "Additive";
										value = 15f;
									} : ConstantStatModifier, 
									{
										statType = "BaseStats.ChemicalResistance";
										modifierType = "Additive";
										value = 15f;
									} : ConstantStatModifier, 
									{
										statType = "BaseStats.ElectricResistance";
										modifierType = "Additive";
										value = 15f;
									} : ConstantStatModifier
								];
							} : StatModifierGroup;
						} : ApplyStatGroupOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					15
				];
			};
		}
	];
}

Assault_Area_08_Perk_2 : AssaultPerk
{
	loc_name_key = "LocKey#6498";
	loc_desc_key = "LocKey#5799";
	perkIcon = "UIIcon.Assault_Area_08_Perk_2";
	enumName = "Assault_Area_08_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.RecoilKickMin";
									modifierType = "AdditiveMultiplier";
									value = -0.05;
								} : ConstantStatModifier, 
								{
									statType = "BaseStats.RecoilKickMax";
									modifierType = "AdditiveMultiplier";
									value = -0.05;
								} : ConstantStatModifier
							];
						} : StatModifierGroup;
					} : ApplyStatGroupOnWeapon
				];
			};
			uiData = 
			{
				intValues = 
				[
					5
				];
			};
		} : PerkLevelData
	];
}

Assault_Area_09_Perk_1 : AssaultPerk
{
	loc_name_key = "LocKey#6499";
	loc_desc_key = "LocKey#5800";
	perkIcon = "UIIcon.Assault_Area_09_Perk_1";
	enumName = "Assault_Area_09_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = 
						{
							nestedPrereqs = 
							[
								"Perks.AssaultPerkPrereq", "Prereqs.PowerWeaponHeldPrereq"
							];
						} : ANDPrereq;
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.RicochetCount";
									modifierType = "Additive";
									value = 1f;
								} : ConstantStatModifier
							];
						} : StatModifierGroup;
					} : ApplyStatGroupOnWeapon
				];
			};
			uiData = 
			{
				intValues = 
				[
					1
				];
			};
		}
	];
}

Assault_Area_09_Perk_2 : AssaultPerk
{
	loc_name_key = "LocKey#6500";
	loc_desc_key = "LocKey#5801";
	perkIcon = "UIIcon.Assault_Area_09_Perk_2";
	enumName = "Assault_Area_09_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsAttackRanged";
							effectorClassName = "ModifyDamageWithDistance";
							string operationType = "Multiply";
							bool increaseWithDistance = true;
							float percentMult = 0.7f;
							float unitThreshold = 40f;
						} : Effector;
					} : ApplyEffectorOnPlayer
				];
			};
		} : PerkLevelData
	];
}

Assault_Area_10_Perk_1 : AssaultPerk
{
	loc_name_key = "LocKey#6501";
	loc_desc_key = "LocKey#5802";
	perkIcon = "UIIcon.Assault_Area_10_Perk_1";
	enumName = "Assault_Area_10_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.AssaultPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsInstigatorStatic";
							float value = 1.35f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					35
				];
			};
		} : PerkLevelData
	];
}

AssaultPerkPrereq : MultiPrereq
{
	CName prereqClassName = "gameMultiPrereq";
	CName aggregationType = "OR";
	fk< IPrereq >[] nestedPrereqs = 
	[
		{
			itemType = "ItemType.Wea_Rifle";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_SniperRifle";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_AssaultRifle";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_PrecisionRifle";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_SubmachineGun";
		} : Prereqs.WeaponHeldByTypePrereq
	];
}

SniperAndPrecisionRiflePrereq : MultiPrereq
{
	CName prereqClassName = "gameMultiPrereq";
	CName aggregationType = "OR";
	fk< IPrereq >[] nestedPrereqs = 
	[
		{
			itemType = "ItemType.Wea_SniperRifle";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_PrecisionRifle";
		} : Prereqs.WeaponHeldByTypePrereq
	];
}

RiflesAndSMGPrereq : MultiPrereq
{
	CName prereqClassName = "gameMultiPrereq";
	CName aggregationType = "OR";
	fk< IPrereq >[] nestedPrereqs = 
	[
		{
			itemType = "ItemType.Wea_Rifle";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_AssaultRifle";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_SubmachineGun";
		} : Prereqs.WeaponHeldByTypePrereq
	];
}

