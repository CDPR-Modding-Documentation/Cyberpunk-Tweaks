package Perks
using RTDB, Prereqs

BrawlingProficiencyPrereq : StatPrereq
{
	float valueToCheck = 0;
	CName statType = "Strength";
	CName comparisonType = "GreaterOrEqual";
}

BrawlingMasteryPrereq : StatPrereq
{
	float valueToCheck = 0;
	CName statType = "Brawling";
	CName comparisonType = "GreaterOrEqual";
}

Brawling_Area_01 : PerkArea
{
	enumName = "Brawling_Area_01";
	requirement = 
	{
		valueToCheck = 0;
	} : BrawlingProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : BrawlingMasteryPrereq;
	perks = 
	[
		"Perks.Brawling_Area_01_Perk_1", "Perks.Brawling_Area_01_Perk_2"
	];
	maxLevel = 3;
}

Brawling_Area_02 : PerkArea
{
	enumName = "Brawling_Area_02";
	requirement = 
	{
		valueToCheck = 4;
	} : BrawlingProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : BrawlingMasteryPrereq;
	perks = 
	[
		"Perks.Brawling_Area_02_Perk_1", "Perks.Brawling_Area_02_Perk_2"
	];
	maxLevel = 2;
}

Brawling_Area_03 : PerkArea
{
	enumName = "Brawling_Area_03";
	requirement = 
	{
		valueToCheck = 6;
	} : BrawlingProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : BrawlingMasteryPrereq;
	perks = 
	[
		"Perks.Brawling_Area_03_Perk_1", "Perks.Brawling_Area_03_Perk_2"
	];
	maxLevel = 2;
}

Brawling_Area_04 : PerkArea
{
	enumName = "Brawling_Area_04";
	requirement = 
	{
		valueToCheck = 8;
	} : BrawlingProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : BrawlingMasteryPrereq;
	perks = 
	[
		"Perks.Brawling_Area_04_Perk_1", "Perks.Brawling_Area_04_Perk_2"
	];
	maxLevel = 1;
}

Brawling_Area_05 : PerkArea
{
	enumName = "Brawling_Area_05";
	requirement = 
	{
		valueToCheck = 10;
	} : BrawlingProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : BrawlingMasteryPrereq;
	perks = 
	[
		"Perks.Brawling_Area_05_Perk_1", "Perks.Brawling_Area_05_Perk_2"
	];
	maxLevel = 3;
}

Brawling_Area_06 : PerkArea
{
	enumName = "Brawling_Area_06";
	requirement = 
	{
		valueToCheck = 12;
	} : BrawlingProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : BrawlingMasteryPrereq;
	perks = 
	[
		"Perks.Brawling_Area_06_Perk_1", "Perks.Brawling_Area_06_Perk_2"
	];
	maxLevel = 2;
}

Brawling_Area_07 : PerkArea
{
	enumName = "Brawling_Area_07";
	requirement = 
	{
		valueToCheck = 15;
	} : BrawlingProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : BrawlingMasteryPrereq;
	perks = 
	[
		"Perks.Brawling_Area_07_Perk_1", "Perks.Brawling_Area_07_Perk_2"
	];
	maxLevel = 2;
}

Brawling_Area_08 : PerkArea
{
	enumName = "Brawling_Area_08";
	requirement = 
	{
		valueToCheck = 18;
	} : BrawlingProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : BrawlingMasteryPrereq;
	perks = 
	[
		"Perks.Brawling_Area_08_Perk_1", "Perks.Brawling_Area_08_Perk_2"
	];
	maxLevel = 3;
}

Brawling_Area_01_Perk_1 : BrawlingPerk
{
	loc_name_key = "LocKey#53936";
	loc_desc_key = "LocKey#53939";
	perkIcon = "UIIcon.Brawling_Area_01_Perk_1";
	enumName = "Brawling_Area_01_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsHitFastAttack";
							value = 1.3f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					30
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsHitFastAttack";
							value = 1.4f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					40
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsHitFastAttack";
							value = 1.5f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					50
				];
			};
		}
	];
}

Brawling_Area_01_Perk_2 : BrawlingPerk
{
	loc_name_key = "LocKey#53940";
	loc_desc_key = "LocKey#53941";
	perkIcon = "UIIcon.Brawling_Area_01_Perk_2";
	enumName = "Brawling_Area_01_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsHitStrongAttack";
							value = 1.1f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					10
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsHitStrongAttack";
							value = 1.2f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					20
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsHitStrongAttack";
							value = 1.3f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					30
				];
			};
		}
	];
}

Brawling_Area_02_Perk_1 : BrawlingPerk
{
	loc_name_key = "LocKey#53942";
	loc_desc_key = "LocKey#53943";
	perkIcon = "UIIcon.Brawling_Area_02_Perk_1";
	enumName = "Brawling_Area_02_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsPlayerBlocking";
							statGroup = 
							{
								statModifiers = 
								[
									{
										statType = "BaseStats.Armor";
										modifierType = "AdditiveMultiplier";
										value = 0.15f;
									} : ConstantStatModifier
								];
							};
						} : ApplyStatGroupOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					15
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsPlayerBlocking";
							statGroup = 
							{
								statModifiers = 
								[
									{
										statType = "BaseStats.Armor";
										modifierType = "AdditiveMultiplier";
										value = 0.3f;
									} : ConstantStatModifier
								];
							};
						} : ApplyStatGroupOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					30
				];
			};
		}
	];
}

Brawling_Area_02_Perk_2 : BrawlingPerk
{
	loc_name_key = "LocKey#53944";
	loc_desc_key = "LocKey#53945";
	perkIcon = "UIIcon.Brawling_Area_02_Perk_2";
	enumName = "Brawling_Area_02_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										CName weaponType = "Melee";
									} : WeaponTypeHitPrereqCondition, 
									{
										statusEffect = "Defeated";
										checkType = "CheckType.Type";
										invert = true;
									} : StatusEffectPresentHitPrereqCondition, 
									{
										float valueToCheck = 0f;
										CName objectToCheck = "Target";
										string statPoolToCompare = "Health";
										string comparisonType = "NotEqual";
									} : StatPoolHitPrereqCondition
								];
							} : ProcessHitTriggered;
							statusEffect = "BaseStatusEffect.MeleePerkStun";
							isRandom = true;
							applicationChance = 0.15f;
						} : AddStatusEffectToAttackEffector;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					15
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										CName weaponType = "Melee";
									} : WeaponTypeHitPrereqCondition, 
									{
										statusEffect = "Defeated";
										checkType = "CheckType.Type";
										invert = true;
									} : StatusEffectPresentHitPrereqCondition, 
									{
										float valueToCheck = 0f;
										CName objectToCheck = "Target";
										string statPoolToCompare = "Health";
										string comparisonType = "NotEqual";
									} : StatPoolHitPrereqCondition
								];
							} : ProcessHitTriggered;
							statusEffect = "BaseStatusEffect.MeleePerkStun";
							isRandom = true;
							applicationChance = 0.3f;
						} : AddStatusEffectToAttackEffector;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					30
				];
			};
		}
	];
}

Brawling_Area_03_Perk_1 : BrawlingPerk
{
	loc_name_key = "LocKey#53947";
	loc_desc_key = "LocKey#53946";
	perkIcon = "UIIcon.Brawling_Area_03_Perk_1";
	enumName = "Brawling_Area_03_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										CName weaponType = "Melee";
									} : WeaponTypeHitPrereqCondition, 
									{
										statusEffect = "Defeated";
										checkType = "CheckType.Type";
										invert = true;
									} : StatusEffectPresentHitPrereqCondition, 
									{
										float valueToCheck = 0f;
										CName objectToCheck = "Target";
										string statPoolToCompare = "Health";
										string comparisonType = "NotEqual";
									} : StatPoolHitPrereqCondition, 
									{
										statusEffect = "Brawling_Area_02_Perk_1_Buff_Level_2";
										checkType = "CheckType.Record";
										invert = true;
										objectToCheck = "Instigator";
									} : StatusEffectPresentHitPrereqCondition
								];
							} : ProcessHitTriggered;
							statusEffect = "BaseStatusEffect.Brawling_Area_02_Perk_1_Buff_Level_2";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					3, 2
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										CName weaponType = "Melee";
									} : WeaponTypeHitPrereqCondition, 
									{
										statusEffect = "Defeated";
										checkType = "CheckType.Type";
										invert = true;
									} : StatusEffectPresentHitPrereqCondition, 
									{
										float valueToCheck = 0f;
										CName objectToCheck = "Target";
										string statPoolToCompare = "Health";
										string comparisonType = "NotEqual";
									} : StatPoolHitPrereqCondition, 
									{
										statusEffect = "Brawling_Area_02_Perk_1_Buff_Level_3";
										checkType = "CheckType.Record";
										invert = true;
										objectToCheck = "Instigator";
									} : StatusEffectPresentHitPrereqCondition
								];
							} : ProcessHitTriggered;
							statusEffect = "BaseStatusEffect.Brawling_Area_02_Perk_1_Buff_Level_3";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					5, 2
				];
			};
		}
	];
}

Brawling_Area_03_Perk_2 : BrawlingPerk
{
	loc_name_key = "LocKey#53949";
	loc_desc_key = "LocKey#53948";
	perkIcon = "UIIcon.Brawling_Area_03_Perk_2";
	enumName = "Brawling_Area_03_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.StaminaCostReduction";
									modifierType = "Additive";
									value = -0.25f;
								} : ConstantStatModifier
							];
						};
					} : ApplyStatGroupOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					25
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.StaminaCostReduction";
									modifierType = "Additive";
									value = -0.5f;
								} : ConstantStatModifier
							];
						};
					} : ApplyStatGroupOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					50
				];
			};
		}
	];
}

Brawling_Area_04_Perk_1 : BrawlingPerk
{
	loc_name_key = "LocKey#53950";
	loc_desc_key = "LocKey#53951";
	perkIcon = "UIIcon.Brawling_Area_04_Perk_1";
	enumName = "Brawling_Area_04_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.BlockFactor";
									modifierType = "AdditiveMultiplier";
									value = 0.5f;
								} : ConstantStatModifier
							];
						};
					} : ApplyStatGroupOnWeapon
				];
			};
			uiData = 
			{
				intValues = 
				[
					50
				];
			};
		}
	];
}

Brawling_Area_04_Perk_2 : BrawlingPerk
{
	loc_name_key = "LocKey#53953";
	loc_desc_key = "LocKey#53952";
	perkIcon = "UIIcon.Brawling_Area_04_Perk_2";
	enumName = "Brawling_Area_04_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										CName weaponType = "Melee";
									} : WeaponTypeHitPrereqCondition, 
									{
										statusEffect = "Defeated";
										checkType = "CheckType.Type";
										invert = true;
									} : StatusEffectPresentHitPrereqCondition, 
									{
										float valueToCheck = 0f;
										CName objectToCheck = "Target";
										string statPoolToCompare = "Health";
										string comparisonType = "NotEqual";
									} : StatPoolHitPrereqCondition, 
									{
										statusEffect = "Stunned";
										checkType = "CheckType.Type";
										invert = false;
									} : StatusEffectPresentHitPrereqCondition
								];
							} : ProcessHitTriggered;
							value = 1.5f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					50
				];
			};
		}
	];
}

Brawling_Area_05_Perk_1 : BrawlingPerk
{
	loc_name_key = "LocKey#53955";
	loc_desc_key = "LocKey#53954";
	perkIcon = "UIIcon.Brawling_Area_05_Perk_1";
	enumName = "Brawling_Area_05_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Prereqs.ProcessHitTriggered";
							effectorClassName = "ModifyDamageWithStatPoolEffector";
							string statPool = "Health";
							string poolStatus = "Missing";
							string refObj = "Instigator";
							string operationType = "Multiply";
							float percentMult = 0.01f;
							float unitThreshold = 1f;
							float maxDmg = 2f;
						} : Effector;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					1, 1
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Prereqs.ProcessHitTriggered";
							CName effectorClassName = "ModifyDamageWithStatPoolEffector";
							string statPool = "Health";
							string poolStatus = "Missing";
							string refObj = "Instigator";
							string operationType = "Multiply";
							float percentMult = 0.02f;
							float unitThreshold = 1f;
							float maxDmg = 2f;
						} : Effector;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					2, 1
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Prereqs.ProcessHitTriggered";
							CName effectorClassName = "ModifyDamageWithStatPoolEffector";
							string statPool = "Health";
							string poolStatus = "Missing";
							string refObj = "Instigator";
							string operationType = "Multiply";
							float percentMult = 0.03f;
							float unitThreshold = 1f;
							float maxDmg = 2f;
						} : Effector;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					3, 1
				];
			};
		} : PerkLevelData
	];
}

Brawling_Area_05_Perk_2 : BrawlingPerk
{
	loc_name_key = "LocKey#53957";
	loc_desc_key = "LocKey#53956";
	perkIcon = "UIIcon.Brawling_Area_05_Perk_2";
	utility = "Perks.TriggeredUtility";
	enumName = "Brawling_Area_05_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								bool isSynchronous = false;
								conditions = 
								[
									"Prereqs.TargetKilledHitPrereqCondition", {
										attackType = "StrongMelee";
									} : AttackTypeHitPrereqCondition
								];
							} : PostProcessHitTriggered;
							effectorClassName = "ModifyStatPoolValueEffector";
							statPoolUpdates = 
							[
								{
									statPoolType = "BaseStatPools.Stamina";
									statPoolValue = 10f;
								} : StatPoolUpdate
							];
							bool usePercent = true;
						} : Effector;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					10
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								bool isSynchronous = false;
								conditions = 
								[
									"Prereqs.TargetKilledHitPrereqCondition", {
										attackType = "StrongMelee";
									} : AttackTypeHitPrereqCondition
								];
							} : PostProcessHitTriggered;
							effectorClassName = "ModifyStatPoolValueEffector";
							statPoolUpdates = 
							[
								{
									statPoolType = "BaseStatPools.Stamina";
									statPoolValue = 20f;
								} : StatPoolUpdate
							];
							bool usePercent = true;
						} : Effector;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					20
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								bool isSynchronous = false;
								conditions = 
								[
									"Prereqs.TargetKilledHitPrereqCondition", {
										attackType = "StrongMelee";
									} : AttackTypeHitPrereqCondition
								];
							} : PostProcessHitTriggered;
							effectorClassName = "ModifyStatPoolValueEffector";
							statPoolUpdates = 
							[
								{
									statPoolType = "BaseStatPools.Stamina";
									statPoolValue = 30f;
								} : StatPoolUpdate
							];
							bool usePercent = true;
						} : Effector;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					30
				];
			};
		}
	];
}

Brawling_Area_06_Perk_1 : BrawlingPerk
{
	loc_name_key = "LocKey#53959";
	loc_desc_key = "LocKey#53958";
	perkIcon = "UIIcon.Brawling_Area_06_Perk_1";
	utility = "Perks.PassiveUtility";
	enumName = "Brawling_Area_06_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsPlayerBlocking";
							statGroup = 
							{
								statModifiers = 
								[
									{
										statType = "BaseStats.StaminaRegenRateMult";
										modifierType = "Additive";
										value = 0.5f;
									} : ConstantStatModifier
								];
							};
						} : ApplyStatGroupOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					50
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsPlayerBlocking";
							statGroup = 
							{
								statModifiers = 
								[
									{
										statType = "BaseStats.StaminaRegenRateMult";
										modifierType = "Additive";
										value = 1.f;
									} : ConstantStatModifier
								];
							};
						} : ApplyStatGroupOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					100
				];
			};
		}
	];
}

Brawling_Area_06_Perk_2 : BrawlingPerk
{
	loc_name_key = "LocKey#53961";
	loc_desc_key = "LocKey#53960";
	perkIcon = "UIIcon.Brawling_Area_06_Perk_2";
	utility = "Perks.TriggeredUtility";
	enumName = "Brawling_Area_06_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										CName weaponType = "Melee";
									} : WeaponTypeHitPrereqCondition, 
									{
										statusEffect = "Defeated";
										checkType = "CheckType.Type";
										invert = true;
									} : StatusEffectPresentHitPrereqCondition, 
									{
										float valueToCheck = 0f;
										CName objectToCheck = "Target";
										string statPoolToCompare = "Health";
										string comparisonType = "NotEqual";
									} : StatPoolHitPrereqCondition, 
									{
										statusEffect = "Stunned";
										checkType = "CheckType.Type";
										invert = false;
									} : StatusEffectPresentHitPrereqCondition, 
									{
										statusEffect = "Brawling_Area_03_Perk_4_Buff_Level_2";
										checkType = "CheckType.Record";
										invert = true;
										objectToCheck = "Instigator";
									} : StatusEffectPresentHitPrereqCondition
								];
							} : ProcessHitTriggered;
							statusEffect = "BaseStatusEffect.Brawling_Area_03_Perk_4_Buff_Level_2";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					20
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										CName weaponType = "Melee";
									} : WeaponTypeHitPrereqCondition, 
									{
										statusEffect = "Defeated";
										checkType = "CheckType.Type";
										invert = true;
									} : StatusEffectPresentHitPrereqCondition, 
									{
										float valueToCheck = 0f;
										CName objectToCheck = "Target";
										string statPoolToCompare = "Health";
										string comparisonType = "NotEqual";
									} : StatPoolHitPrereqCondition, 
									{
										statusEffect = "Stunned";
										checkType = "CheckType.Type";
										invert = false;
									} : StatusEffectPresentHitPrereqCondition, 
									{
										statusEffect = "Brawling_Area_03_Perk_4_Buff_Level_3";
										checkType = "CheckType.Record";
										invert = true;
										objectToCheck = "Instigator";
									} : StatusEffectPresentHitPrereqCondition
								];
							} : ProcessHitTriggered;
							statusEffect = "BaseStatusEffect.Brawling_Area_03_Perk_4_Buff_Level_3";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					30
				];
			};
		}
	];
}

Brawling_Area_07_Perk_1 : BrawlingPerk
{
	loc_name_key = "LocKey#53963";
	loc_desc_key = "LocKey#53962";
	perkIcon = "UIIcon.Brawling_Area_07_Perk_1";
	enumName = "Brawling_Area_07_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions += 
								[
									{
										statusEffect = "Brawling_Area_04_Perk_1_Buff_Level_1";
										checkType = "CheckType.Record";
										invert = true;
										objectToCheck = "Instigator";
									} : StatusEffectPresentHitPrereqCondition
								];
							} : Perks.IsTargetKilled;
							statusEffect = "BaseStatusEffect.Brawling_Area_04_Perk_1_Buff_Level_1";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					30, 5
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions += 
								[
									{
										statusEffect = "Brawling_Area_04_Perk_1_Buff_Level_2";
										checkType = "CheckType.Record";
										invert = true;
										objectToCheck = "Instigator";
									} : StatusEffectPresentHitPrereqCondition
								];
							} : Perks.IsTargetKilled;
							statusEffect = "BaseStatusEffect.Brawling_Area_04_Perk_1_Buff_Level_2";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					50, 5
				];
			};
		} : PerkLevelData
	];
}

Brawling_Area_07_Perk_2 : BrawlingPerk
{
	loc_name_key = "LocKey#53965";
	loc_desc_key = "LocKey#53964";
	perkIcon = "UIIcon.Brawling_Area_07_Perk_2";
	enumName = "Brawling_Area_07_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsHitStrongAttack";
							statusEffect = "BaseStatusEffect.Brawling_Area_04_Perk_2_Vulnerable_Level_1";
							isRandom = false;
						} : AddStatusEffectToAttackEffector;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					20, 7
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsHitStrongAttack";
							statusEffect = "BaseStatusEffect.Brawling_Area_04_Perk_2_Vulnerable_Level_2";
							isRandom = false;
						} : AddStatusEffectToAttackEffector;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					40, 7
				];
			};
		} : PerkLevelData
	];
}

Brawling_Area_08_Perk_1 : BrawlingPerk
{
	loc_name_key = "LocKey#53967";
	loc_desc_key = "LocKey#53966";
	perkIcon = "UIIcon.Brawling_Area_08_Perk_1";
	utility = "Perks.TriggeredUtility";
	enumName = "Brawling_Area_08_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										hitFlag = "WasBlocked";
									} : HitFlagHitPrereqCondition, 
									{
										instigatorType = "Puppet";
									} : InstigatorTypeHitPrereqCondition, 
									{
										statusEffect = "Brawling_Area_04_Perk_3_Buff_Level_1";
										checkType = "CheckType.Record";
										invert = true;
										objectToCheck = "Target";
									} : StatusEffectPresentHitPrereqCondition
								];
							} : PostProcessHitReceived;
							statusEffect = "BaseStatusEffect.Brawling_Area_04_Perk_3_Buff_Level_1";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					5
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										hitFlag = "WasBlocked";
									} : HitFlagHitPrereqCondition, 
									{
										instigatorType = "Puppet";
									} : InstigatorTypeHitPrereqCondition, 
									{
										statusEffect = "Brawling_Area_04_Perk_3_Buff_Level_2";
										checkType = "CheckType.Record";
										invert = true;
										objectToCheck = "Target";
									} : StatusEffectPresentHitPrereqCondition
								];
							} : PostProcessHitReceived;
							statusEffect = "BaseStatusEffect.Brawling_Area_04_Perk_3_Buff_Level_2";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					10
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										hitFlag = "WasBlocked";
									} : HitFlagHitPrereqCondition, 
									{
										instigatorType = "Puppet";
									} : InstigatorTypeHitPrereqCondition, 
									{
										statusEffect = "Brawling_Area_04_Perk_3_Buff_Level_3";
										checkType = "CheckType.Record";
										invert = true;
										objectToCheck = "Target";
									} : StatusEffectPresentHitPrereqCondition
								];
							} : PostProcessHitReceived;
							statusEffect = "BaseStatusEffect.Brawling_Area_04_Perk_3_Buff_Level_3";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					15
				];
			};
		}
	];
}

Brawling_Area_08_Perk_2 : BrawlingPerk
{
	loc_name_key = "LocKey#53969";
	loc_desc_key = "LocKey#53968";
	perkIcon = "UIIcon.Brawling_Area_08_Perk_2";
	utility = "Perks.ActiveUtility";
	enumName = "Brawling_Area_08_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										CName weaponType = "Melee";
									} : WeaponTypeHitPrereqCondition, 
									{
										statusEffect = "Defeated";
										checkType = "CheckType.Type";
										invert = true;
									} : StatusEffectPresentHitPrereqCondition, 
									{
										float valueToCheck = 0f;
										CName objectToCheck = "Target";
										string statPoolToCompare = "Health";
										string comparisonType = "NotEqual";
									} : StatPoolHitPrereqCondition, 
									{
										statusEffect = "Stunned";
										checkType = "CheckType.Type";
										invert = false;
									} : StatusEffectPresentHitPrereqCondition, 
									{
										statusEffect = "Brawling_Area_04_Perk_4_Buff_Level_1";
										checkType = "CheckType.Record";
										invert = true;
										objectToCheck = "Instigator";
									} : StatusEffectPresentHitPrereqCondition
								];
							} : ProcessHitTriggered;
							statusEffect = "BaseStatusEffect.Brawling_Area_04_Perk_4_Buff_Level_1";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					5, 5
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										CName weaponType = "Melee";
									} : WeaponTypeHitPrereqCondition, 
									{
										statusEffect = "Defeated";
										checkType = "CheckType.Type";
										invert = true;
									} : StatusEffectPresentHitPrereqCondition, 
									{
										float valueToCheck = 0f;
										CName objectToCheck = "Target";
										string statPoolToCompare = "Health";
										string comparisonType = "NotEqual";
									} : StatPoolHitPrereqCondition, 
									{
										statusEffect = "Stunned";
										checkType = "CheckType.Type";
										invert = false;
									} : StatusEffectPresentHitPrereqCondition, 
									{
										statusEffect = "Brawling_Area_04_Perk_4_Buff_Level_2";
										checkType = "CheckType.Record";
										invert = true;
										objectToCheck = "Instigator";
									} : StatusEffectPresentHitPrereqCondition
								];
							} : ProcessHitTriggered;
							statusEffect = "BaseStatusEffect.Brawling_Area_04_Perk_4_Buff_Level_2";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					10, 10
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.BrawlingPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										CName weaponType = "Melee";
									} : WeaponTypeHitPrereqCondition, 
									{
										statusEffect = "Defeated";
										checkType = "CheckType.Type";
										invert = true;
									} : StatusEffectPresentHitPrereqCondition, 
									{
										float valueToCheck = 0f;
										CName objectToCheck = "Target";
										string statPoolToCompare = "Health";
										string comparisonType = "NotEqual";
									} : StatPoolHitPrereqCondition, 
									{
										statusEffect = "Stunned";
										checkType = "CheckType.Type";
										invert = false;
									} : StatusEffectPresentHitPrereqCondition, 
									{
										statusEffect = "Brawling_Area_04_Perk_4_Buff_Level_3";
										checkType = "CheckType.Record";
										invert = true;
										objectToCheck = "Instigator";
									} : StatusEffectPresentHitPrereqCondition
								];
							} : ProcessHitTriggered;
							statusEffect = "BaseStatusEffect.Brawling_Area_04_Perk_4_Buff_Level_3";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					15, 15
				];
			};
		}
	];
}

ProgressiveBrawlingPerkPrereq : MultiPrereq
{
	CName prereqClassName = "gameMultiPrereq";
	CName aggregationType = "OR";
	fk< IPrereq >[] nestedPrereqs = 
	[
		{
			itemType = "ItemType.Wea_Fists";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Cyb_StrongArms";
		} : Prereqs.WeaponHeldByTypePrereq
	];
}

NonProgressiveBrawlingPerkPrereq : MultiPrereq
{
	CName prereqClassName = "gameMultiPrereq";
	CName aggregationType = "OR";
	fk< IPrereq >[] nestedPrereqs = 
	[
		{
			itemType = "ItemType.Wea_OneHandedClub";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_TwoHandedClub";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_Hammer";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Cyb_NanoWires";
		} : Prereqs.WeaponHeldByTypePrereq
	];
}

BrawlingPerkPrereq : MultiPrereq
{
	CName prereqClassName = "gameMultiPrereq";
	CName aggregationType = "OR";
	fk< IPrereq >[] nestedPrereqs = 
	[
		{
			itemType = "ItemType.Wea_Fists";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Cyb_StrongArms";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_OneHandedClub";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_TwoHandedClub";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_Hammer";
		} : Prereqs.WeaponHeldByTypePrereq
	];
}

StrongAttackKillPrereq : MultiPrereq
{
	CName prereqClassName = "gameMultiPrereq";
	CName aggregationType = "AND";
	fk< IPrereq >[] nestedPrereqs = 
	[
		"Perks.IsTargetKilled", "Perks.IsHitStrongAttack"
	];
}

IsHitTargetStunnedAndAlivePrereq : ProcessHitTriggered
{
	conditions = 
	[
		{
			statusEffect = "Stunned";
			checkType = "CheckType.Type";
		} : StatusEffectPresentHitPrereqCondition, 
		{
			statusEffect = "Defeated";
			checkType = "CheckType.Type";
			invert = true;
		} : StatusEffectPresentHitPrereqCondition, 
		{
			statusEffect = "Unconscious";
			checkType = "CheckType.Type";
			invert = true;
		} : StatusEffectPresentHitPrereqCondition, 
		{
			float valueToCheck = 0f;
			CName objectToCheck = "Target";
			string statPoolToCompare = "Health";
			string comparisonType = "NotEqual";
		} : StatPoolHitPrereqCondition
	];
}

HitReceivedWhileBlockingPrereq : HitPrereq
{
	prereqClassName = "HitFlagPrereq";
	string hitFlag = "WasBlocked";
	bool isSynchronous = true;
	string callbackType = "HitTriggered";
	string pipelineStage = "PostProcess";
}

