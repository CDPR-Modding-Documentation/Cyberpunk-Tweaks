package Perks
using RTDB, Prereqs, Effectors

KenjutsuProficiencyPrereq : StatPrereq
{
	float valueToCheck = 0;
	CName statType = "Reflexes";
	CName comparisonType = "GreaterOrEqual";
}

KenjutsuMasteryPrereq : StatPrereq
{
	float valueToCheck = 0;
	CName statType = "Kenjutsu";
	CName comparisonType = "GreaterOrEqual";
}

Kenjutsu_Area_01 : PerkArea
{
	enumName = "Kenjutsu_Area_01";
	requirement = 
	{
		valueToCheck = 0;
	} : KenjutsuProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : KenjutsuMasteryPrereq;
	perks = 
	[
		"Perks.Kenjutsu_Area_01_Perk_1", "Perks.Kenjutsu_Area_01_Perk_2"
	];
	maxLevel = 3;
}

Kenjutsu_Area_02 : PerkArea
{
	enumName = "Kenjutsu_Area_02";
	requirement = 
	{
		valueToCheck = 4;
	} : KenjutsuProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : KenjutsuMasteryPrereq;
	perks = 
	[
		"Perks.Kenjutsu_Area_02_Perk_1", "Perks.Kenjutsu_Area_02_Perk_2"
	];
	maxLevel = 2;
}

Kenjutsu_Area_03 : PerkArea
{
	enumName = "Kenjutsu_Area_03";
	requirement = 
	{
		valueToCheck = 6;
	} : KenjutsuProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : KenjutsuMasteryPrereq;
	perks = 
	[
		"Perks.Kenjutsu_Area_03_Perk_1", "Perks.Kenjutsu_Area_03_Perk_2"
	];
	maxLevel = 2;
}

Kenjutsu_Area_04 : PerkArea
{
	enumName = "Kenjutsu_Area_04";
	requirement = 
	{
		valueToCheck = 8;
	} : KenjutsuProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : KenjutsuMasteryPrereq;
	perks = 
	[
		"Perks.Kenjutsu_Area_04_Perk_1", "Perks.Kenjutsu_Area_04_Perk_2"
	];
	maxLevel = 3;
}

Kenjutsu_Area_05 : PerkArea
{
	enumName = "Kenjutsu_Area_05";
	requirement = 
	{
		valueToCheck = 10;
	} : KenjutsuProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : KenjutsuMasteryPrereq;
	perks = 
	[
		"Perks.Kenjutsu_Area_05_Perk_1", "Perks.Kenjutsu_Area_05_Perk_2"
	];
	maxLevel = 1;
}

Kenjutsu_Area_06 : PerkArea
{
	enumName = "Kenjutsu_Area_06";
	requirement = 
	{
		valueToCheck = 12;
	} : KenjutsuProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : KenjutsuMasteryPrereq;
	perks = 
	[
		"Perks.Kenjutsu_Area_06_Perk_1", "Perks.Kenjutsu_Area_06_Perk_2"
	];
	maxLevel = 2;
}

Kenjutsu_Area_07 : PerkArea
{
	enumName = "Kenjutsu_Area_07";
	requirement = 
	{
		valueToCheck = 15;
	} : KenjutsuProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : KenjutsuMasteryPrereq;
	perks = 
	[
		"Perks.Kenjutsu_Area_07_Perk_1", "Perks.Kenjutsu_Area_07_Perk_2"
	];
	maxLevel = 3;
}

Kenjutsu_Area_08 : PerkArea
{
	enumName = "Kenjutsu_Area_08";
	requirement = 
	{
		valueToCheck = 18;
	} : KenjutsuProficiencyPrereq;
	masteryLevel = 
	{
		valueToCheck = 0;
	} : KenjutsuMasteryPrereq;
	perks = 
	[
		"Perks.Kenjutsu_Area_08_Perk_1", "Perks.Kenjutsu_Area_08_Perk_2"
	];
	maxLevel = 1;
}

Kenjutsu_Area_01_Perk_1 : KenjutsuPerk
{
	loc_name_key = "LocKey#53973";
	loc_desc_key = "LocKey#53972";
	perkIcon = "UIIcon.Kenjutsu_Area_01_Perk_1";
	enumName = "Kenjutsu_Area_01_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.AttackSpeed";
									modifierType = "AdditiveMultiplier";
									value = 0.1f;
								} : ConstantStatModifier
							];
						};
					} : ApplyStatGroupOnWeapon
				];
			};
			uiData = 
			{
				intValues = 
				[
					10
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.AttackSpeed";
									modifierType = "AdditiveMultiplier";
									value = 0.2f;
								} : ConstantStatModifier
							];
						};
					} : ApplyStatGroupOnWeapon
				];
			};
			uiData = 
			{
				intValues = 
				[
					20
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.AttackSpeed";
									modifierType = "AdditiveMultiplier";
									value = 0.3f;
								} : ConstantStatModifier
							];
						};
					} : ApplyStatGroupOnWeapon
				];
			};
			uiData = 
			{
				intValues = 
				[
					30
				];
			};
		} : PerkLevelData
	];
}

Kenjutsu_Area_01_Perk_2 : KenjutsuPerk
{
	loc_name_key = "LocKey#53975";
	loc_desc_key = "LocKey#53974";
	perkIcon = "UIIcon.Kenjutsu_Area_01_Perk_2";
	enumName = "Kenjutsu_Area_01_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsHitStrongAttack";
							value = 1.1f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					10
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsHitStrongAttack";
							value = 1.2f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					20
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsHitStrongAttack";
							value = 1.3f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					30
				];
			};
		}
	];
}

Kenjutsu_Area_02_Perk_1 : KenjutsuPerk
{
	loc_name_key = "LocKey#53977";
	loc_desc_key = "LocKey#53976";
	perkIcon = "UIIcon.Kenjutsu_Area_02_Perk_1";
	utility = "Perks.PassiveUtility";
	enumName = "Kenjutsu_Area_02_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										attackType = "Melee";
									} : AttackTypeHitPrereqCondition, 
									{
										statusEffect = "Defeated";
										checkType = "CheckType.Type";
										invert = true;
									} : StatusEffectPresentHitPrereqCondition, 
									{
										float valueToCheck = 0f;
										CName objectToCheck = "Target";
										string statPoolToCompare = "Health";
										string comparisonType = "NotEqual";
									} : StatPoolHitPrereqCondition
								];
							} : ProcessHitTriggered;
							statusEffect = "BaseStatusEffect.KenjutsuBleeding";
							isRandom = true;
							applicationChance = 0.15f;
						} : AddStatusEffectToAttackEffector;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					15
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										attackType = "Melee";
									} : AttackTypeHitPrereqCondition, 
									{
										statusEffect = "Defeated";
										checkType = "CheckType.Type";
										invert = true;
									} : StatusEffectPresentHitPrereqCondition, 
									{
										float valueToCheck = 0f;
										CName objectToCheck = "Target";
										string statPoolToCompare = "Health";
										string comparisonType = "NotEqual";
									} : StatPoolHitPrereqCondition
								];
							} : ProcessHitTriggered;
							statusEffect = "BaseStatusEffect.KenjutsuBleeding";
							isRandom = true;
							applicationChance = 0.3f;
						} : AddStatusEffectToAttackEffector;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					30
				];
			};
		}
	];
}

Kenjutsu_Area_02_Perk_2 : KenjutsuPerk
{
	loc_name_key = "LocKey#53979";
	loc_desc_key = "LocKey#53978";
	perkIcon = "UIIcon.Kenjutsu_Area_02_Perk_2";
	enumName = "Kenjutsu_Area_02_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								bool skipWhenApplied = false;
							} : IsPlayerInMotion;
							statGroup = 
							{
								statModifiers = 
								[
									{
										statType = "BaseStats.Armor";
										modifierType = "AdditiveMultiplier";
										value = 0.15f;
									} : ConstantStatModifier
								];
							};
						} : ApplyStatGroupOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					15
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								bool skipWhenApplied = false;
							} : IsPlayerInMotion;
							statGroup = 
							{
								statModifiers = 
								[
									{
										statType = "BaseStats.Armor";
										modifierType = "AdditiveMultiplier";
										value = 0.3f;
									} : ConstantStatModifier
								];
							};
						} : ApplyStatGroupOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					30
				];
			};
		} : PerkLevelData
	];
}

Kenjutsu_Area_03_Perk_1 : KenjutsuPerk
{
	loc_name_key = "LocKey#53981";
	loc_desc_key = "LocKey#53980";
	perkIcon = "UIIcon.Kenjutsu_Area_03_Perk_1";
	enumName = "Kenjutsu_Area_03_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.StaminaCostReduction";
									modifierType = "Additive";
									value = -0.3f;
								} : ConstantStatModifier
							];
						};
					} : ApplyStatGroupOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					30
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.StaminaCostReduction";
									modifierType = "Additive";
									value = -0.5f;
								} : ConstantStatModifier
							];
						};
					} : ApplyStatGroupOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					50
				];
			};
		} : PerkLevelData
	];
}

Kenjutsu_Area_03_Perk_2 : KenjutsuPerk
{
	loc_name_key = "LocKey#53983";
	loc_desc_key = "LocKey#53982";
	perkIcon = "UIIcon.Kenjutsu_Area_03_Perk_2";
	utility = "Perks.PassiveUtility";
	enumName = "Kenjutsu_Area_03_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsHitBlockAttack";
							value = 1.75f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					75
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Perks.IsHitBlockAttack";
							value = 2.5f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					150
				];
			};
		}
	];
}

Kenjutsu_Area_04_Perk_1 : KenjutsuPerk
{
	loc_name_key = "LocKey#53985";
	loc_desc_key = "LocKey#53984";
	perkIcon = "UIIcon.Kenjutsu_Area_04_Perk_1";
	enumName = "Kenjutsu_Area_04_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.DurationBonusBleeding";
									modifierType = "Additive";
									value = 3f;
								} : ConstantStatModifier
							];
						};
					} : ApplyStatGroupOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					3
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.DurationBonusBleeding";
									modifierType = "Additive";
									value = 6f;
								} : ConstantStatModifier
							];
						};
					} : ApplyStatGroupOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					6
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.DurationBonusBleeding";
									modifierType = "Additive";
									value = 10f;
								} : ConstantStatModifier
							];
						};
					} : ApplyStatGroupOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					10
				];
			};
		} : PerkLevelData
	];
}

Kenjutsu_Area_04_Perk_2 : KenjutsuPerk
{
	loc_name_key = "LocKey#53987";
	loc_desc_key = "LocKey#53986";
	perkIcon = "UIIcon.Kenjutsu_Area_04_Perk_2";
	enumName = "Kenjutsu_Area_04_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								prereqClassName = "gameMultiPrereq";
								aggregationType = "AND";
								nestedPrereqs = 
								[
									"Perks.IsPlayerDodging", {
										statusEffect = "BaseStatusEffect.Kenjutsu_Area_02_Perk_4_Buff_Level_1";
									} : Prereqs.StatusEffectAbsentPrereq
								];
							} : MultiPrereq;
							statusEffect = "BaseStatusEffect.Kenjutsu_Area_02_Perk_4_Buff_Level_1";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					15
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								prereqClassName = "gameMultiPrereq";
								aggregationType = "AND";
								nestedPrereqs = 
								[
									"Perks.IsPlayerDodging", {
										statusEffect = "BaseStatusEffect.Kenjutsu_Area_02_Perk_4_Buff_Level_2";
									} : Prereqs.StatusEffectAbsentPrereq
								];
							} : MultiPrereq;
							statusEffect = "BaseStatusEffect.Kenjutsu_Area_02_Perk_4_Buff_Level_2";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					20
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								prereqClassName = "gameMultiPrereq";
								aggregationType = "AND";
								nestedPrereqs = 
								[
									"Perks.IsPlayerDodging", {
										statusEffect = "BaseStatusEffect.Kenjutsu_Area_02_Perk_4_Buff_Level_3";
									} : Prereqs.StatusEffectAbsentPrereq
								];
							} : MultiPrereq;
							statusEffect = "BaseStatusEffect.Kenjutsu_Area_02_Perk_4_Buff_Level_3";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					25
				];
			};
		}
	];
}

Kenjutsu_Area_05_Perk_1 : KenjutsuPerk
{
	loc_name_key = "LocKey#53989";
	loc_desc_key = "LocKey#53988";
	perkIcon = "UIIcon.Kenjutsu_Area_05_Perk_1";
	enumName = "Kenjutsu_Area_05_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						fk< StatModifierGroup > statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.CritChance";
									modifierType = "Additive";
									value = 10.f;
								} : ConstantStatModifier
							];
						};
					} : ApplyStatGroupOnWeapon
				];
			};
			uiData = 
			{
				intValues = 
				[
					10
				];
			};
		} : PerkLevelData
	];
}

Kenjutsu_Area_05_Perk_2 : KenjutsuPerk
{
	loc_name_key = "LocKey#53991";
	loc_desc_key = "LocKey#53990";
	perkIcon = "UIIcon.Kenjutsu_Area_05_Perk_2";
	enumName = "Kenjutsu_Area_05_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						fk< Effector > effectorToApply = 
						{
							prereqRecord = 
							{
								prereqClassName = "gameMultiPrereq";
								aggregationType = "AND";
								nestedPrereqs = 
								[
									"Perks.IsHitDeflectAttack", {
										statusEffect = "BaseStatusEffect.Kenjutsu_Area_03_Perk_2_Buff_Level_3";
									} : Prereqs.StatusEffectAbsentPrereq
								];
							} : MultiPrereq;
							statusEffect = "BaseStatusEffect.Kenjutsu_Area_03_Perk_2_Buff_Level_3";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					25
				];
			};
		} : PerkLevelData
	];
}

Kenjutsu_Area_06_Perk_1 : KenjutsuPerk
{
	loc_name_key = "LocKey#53993";
	loc_desc_key = "LocKey#53992";
	perkIcon = "UIIcon.Kenjutsu_Area_06_Perk_1";
	utility = "Perks.TriggeredUtility";
	enumName = "Kenjutsu_Area_06_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										CName weaponType = "Melee";
									} : WeaponTypeHitPrereqCondition, 
									{
										statusEffect = "Defeated";
										checkType = "CheckType.Type";
										invert = true;
									} : StatusEffectPresentHitPrereqCondition, 
									{
										float valueToCheck = 0f;
										CName objectToCheck = "Target";
										string statPoolToCompare = "Health";
										string comparisonType = "NotEqual";
									} : StatPoolHitPrereqCondition, 
									{
										statusEffect = "Bleeding";
										checkType = "CheckType.Type";
									} : StatusEffectPresentHitPrereqCondition, 
									{
										hitFlag = "WasBlocked";
										invert = true;
									} : HitFlagHitPrereqCondition
								];
							} : PostProcessHitTriggered;
							effectorClassName = "ModifyStatPoolValueEffector";
							statPoolUpdates = 
							[
								{
									statPoolType = "BaseStatPools.Health";
									statPoolValue = 2;
								} : StatPoolUpdate
							];
							bool usePercent = true;
						} : Effector;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					2
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								conditions = 
								[
									{
										CName weaponType = "Melee";
									} : WeaponTypeHitPrereqCondition, 
									{
										statusEffect = "Defeated";
										checkType = "CheckType.Type";
										invert = true;
									} : StatusEffectPresentHitPrereqCondition, 
									{
										float valueToCheck = 0f;
										CName objectToCheck = "Target";
										string statPoolToCompare = "Health";
										string comparisonType = "NotEqual";
									} : StatPoolHitPrereqCondition, 
									{
										statusEffect = "Bleeding";
										checkType = "CheckType.Type";
									} : StatusEffectPresentHitPrereqCondition, 
									{
										hitFlag = "WasBlocked";
										invert = true;
									} : HitFlagHitPrereqCondition
								];
							} : PostProcessHitTriggered;
							effectorClassName = "ModifyStatPoolValueEffector";
							statPoolUpdates = 
							[
								{
									statPoolType = "BaseStatPools.Health";
									statPoolValue = 4;
								} : StatPoolUpdate
							];
							bool usePercent = true;
						} : Effector;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					4
				];
			};
		}
	];
}

Kenjutsu_Area_06_Perk_2 : KenjutsuPerk
{
	loc_name_key = "LocKey#53995";
	loc_desc_key = "LocKey#53994";
	perkIcon = "UIIcon.Kenjutsu_Area_06_Perk_2";
	utility = "Perks.TriggeredUtility";
	enumName = "Kenjutsu_Area_06_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								prereqClassName = "gameMultiPrereq";
								aggregationType = "AND";
								nestedPrereqs = 
								[
									"Perks.IsPlayerDodging", {
										statusEffect = "BaseStatusEffect.Kenjutsu_Area_03_Perk_4_Buff_Level_1";
									} : Prereqs.StatusEffectAbsentPrereq
								];
							} : MultiPrereq;
							statusEffect = "BaseStatusEffect.Kenjutsu_Area_03_Perk_4_Buff_Level_1";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					25, 5
				];
			};
		}, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								prereqClassName = "gameMultiPrereq";
								aggregationType = "AND";
								nestedPrereqs = 
								[
									"Perks.IsPlayerDodging", {
										statusEffect = "BaseStatusEffect.Kenjutsu_Area_03_Perk_4_Buff_Level_3";
									} : Prereqs.StatusEffectAbsentPrereq
								];
							} : MultiPrereq;
							statusEffect = "BaseStatusEffect.Kenjutsu_Area_03_Perk_4_Buff_Level_3";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					50, 5
				];
			};
		}
	];
}

Kenjutsu_Area_07_Perk_1 : KenjutsuPerk
{
	loc_name_key = "LocKey#53997";
	loc_desc_key = "LocKey#53996";
	perkIcon = "UIIcon.Kenjutsu_Area_07_Perk_1";
	enumName = "Kenjutsu_Area_07_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Prereqs.ProcessHitTriggered";
							effectorClassName = "ModifyDamageWithStatPoolEffector";
							string statPool = "Health";
							string poolStatus = "Missing";
							string refObj = "Target";
							string operationType = "Multiply";
							float percentMult = 0.01f;
							float unitThreshold = 1f;
							float maxDmg = 2f;
						} : Effector;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					1, 1
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Prereqs.ProcessHitTriggered";
							effectorClassName = "ModifyDamageWithStatPoolEffector";
							string statPool = "Health";
							string poolStatus = "Missing";
							string refObj = "Target";
							string operationType = "Multiply";
							float percentMult = 0.02f;
							float unitThreshold = 1f;
							float maxDmg = 2f;
						} : Effector;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					2, 1
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = "Prereqs.ProcessHitTriggered";
							effectorClassName = "ModifyDamageWithStatPoolEffector";
							string statPool = "Health";
							string poolStatus = "Missing";
							string refObj = "Target";
							string operationType = "Multiply";
							float percentMult = 0.03f;
							float unitThreshold = 1f;
							float maxDmg = 2f;
						} : Effector;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					3, 1
				];
			};
		} : PerkLevelData
	];
}

Kenjutsu_Area_07_Perk_2 : KenjutsuPerk
{
	loc_name_key = "LocKey#53999";
	loc_desc_key = "LocKey#53998";
	perkIcon = "UIIcon.Kenjutsu_Area_07_Perk_2";
	enumName = "Kenjutsu_Area_07_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						fk< Effector > effectorToApply = 
						{
							prereqRecord = "Perks.TargetHasFullHealth";
							float value = 1.5f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					50
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						fk< Effector > effectorToApply = 
						{
							prereqRecord = "Perks.TargetHasFullHealth";
							float value = 1.75f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					75
				];
			};
		} : PerkLevelData, 
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						fk< Effector > effectorToApply = 
						{
							prereqRecord = "Perks.TargetHasFullHealth";
							float value = 2.f;
						} : MultiplyDamage;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					100
				];
			};
		} : PerkLevelData
	];
}

Kenjutsu_Area_08_Perk_1 : KenjutsuPerk
{
	loc_name_key = "LocKey#54001";
	loc_desc_key = "LocKey#54000";
	perkIcon = "UIIcon.Kenjutsu_Area_08_Perk_1";
	enumName = "Kenjutsu_Area_08_Perk_1";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						statGroup = 
						{
							statModifiers = 
							[
								{
									statType = "BaseStats.MaxStacksBonusBleeding";
									modifierType = "Additive";
									value = 2.f;
								} : ConstantStatModifier
							];
						};
					} : ApplyStatGroupOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					3
				];
			};
		}
	];
}

Kenjutsu_Area_08_Perk_2 : KenjutsuPerk
{
	loc_name_key = "LocKey#54003";
	loc_desc_key = "LocKey#54002";
	perkIcon = "UIIcon.Kenjutsu_Area_08_Perk_2";
	utility = "Perks.TriggeredUtility";
	enumName = "Kenjutsu_Area_08_Perk_2";
	levels = 
	[
		{
			dataPackage = 
			{
				effectors = 
				[
					{
						prereqRecord = "Perks.KenjutsuPerkPrereq";
						effectorToApply = 
						{
							prereqRecord = 
							{
								prereqClassName = "gameMultiPrereq";
								aggregationType = "AND";
								nestedPrereqs = 
								[
									"Perks.IsTargetKilled", {
										statusEffect = "BaseStatusEffect.Kenjutsu_Area_04_Perk_4_Buff_Level_3";
									} : Prereqs.StatusEffectAbsentPrereq
								];
							} : MultiPrereq;
							statusEffect = "BaseStatusEffect.Kenjutsu_Area_04_Perk_4_Buff_Level_3";
						} : ApplyStatusEffectOnPlayer;
					} : ApplyEffectorOnPlayer
				];
			};
			uiData = 
			{
				intValues = 
				[
					20, 30, 5
				];
			};
		}
	];
}

ProgressiveBladesPerkPrereq : Prereqs.ORPrereq
{
	fk< IPrereq >[] nestedPrereqs = 
	[
		{
			itemType = "ItemType.Wea_Katana";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Cyb_MantisBlades";
		} : Prereqs.WeaponHeldByTypePrereq
	];
}

NonProgressiveBladesPerkPrereq : Prereqs.ORPrereq
{
	fk< IPrereq >[] nestedPrereqs = 
	[
		{
			itemType = "ItemType.Wea_LongBlade";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_Axe";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_Machete";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_Chainsword";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_ShortBlade";
		} : Prereqs.WeaponHeldByTypePrereq
	];
}

KatanaExcludedBladesPerkPrereq : Prereqs.ORPrereq
{
	fk< IPrereq >[] nestedPrereqs = 
	[
		{
			itemType = "ItemType.Cyb_MantisBlades";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_LongBlade";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_Axe";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_Machete";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_Chainsword";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_ShortBlade";
		} : Prereqs.WeaponHeldByTypePrereq
	];
}

KenjutsuPerkPrereq : Prereqs.ORPrereq
{
	fk< IPrereq >[] nestedPrereqs = 
	[
		{
			itemType = "ItemType.Wea_Katana";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_LongBlade";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_ShortBlade";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Cyb_MantisBlades";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_Knife";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Cyb_NanoWires";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_Axe";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_Machete";
		} : Prereqs.WeaponHeldByTypePrereq, 
		{
			itemType = "ItemType.Wea_Chainsword";
		} : Prereqs.WeaponHeldByTypePrereq
	];
}

IsHitTargetBleedingAndAlive : PostProcessHitTriggered
{
	isSynchronous = false;
	conditions = 
	[
		{
			statusEffect = "Bleeding";
			checkType = "CheckType.Type";
		} : StatusEffectPresentHitPrereqCondition, 
		{
			statusEffect = "Defeated";
			checkType = "CheckType.Type";
			invert = true;
		} : StatusEffectPresentHitPrereqCondition, 
		{
			statusEffect = "Unconscious";
			checkType = "CheckType.Type";
			invert = true;
		} : StatusEffectPresentHitPrereqCondition
	];
}

