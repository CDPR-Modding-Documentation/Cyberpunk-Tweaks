package MiniGame
using RTDB

DefaultGame : DefaultRandomGame
{
}

ActivePreset : MiniGameE3
{
}

OfficerPreset : MiniGameE3Officer
{
}

DefaultRandomGame : HackingMiniGame
{
	gameType = 2;
	officer = false;
	dimension = 5;
	networkLevel = 1;
	allowedTraps = 
	[
		{
			probability = 0;
		} : MiniGame.Hidden, 
		{
			probability = 0;
		} : MiniGame.GridRegen, 
		{
			probability = 0;
		} : MiniGame.AppendStart
	];
}

MiniGameE3 : HackingMiniGame
{
	gameType = 2;
	officer = false;
	dimension = 5;
	networkLevel = 1;
	allowedTraps = 
	[
		{
			probability = 0;
		} : MiniGame.Hidden, 
		{
			probability = 0;
		} : MiniGame.GridRegen, 
		{
			probability = 0;
		} : MiniGame.AppendStart
	];
	predefinedGrid = 
	[
		"1C", "55", "BD", "55", "1C", "1C", "E9", "E9", "55", "1C", "BD", "55", "1C", "E9", "E9", "55", "BD", "1C", "BD", "55", "BD", "1C", "55", "BD", "1C"
	];
	predefinedBasicAccess = 
	[
		"1C", "BD"
	];
	predefinedCyberdeckPrograms = 
	[
		"Camera lag", "1C", "E9", "Officer tracing", "BD", "55", "1C"
	];
	predefinedNetworkPrograms = 
	[
		"Encrypted Data", "BD", "E9", "BD", "Program Prototype", "55", "1C", "1C", "1C"
	];
}

MiniGameE3Officer : HackingMiniGame
{
	gameType = 2;
	officer = true;
	dimension = 5;
	networkLevel = 1;
	allowedTraps = 
	[
		{
			probability = 0;
		} : MiniGame.Hidden, 
		{
			probability = 0;
		} : MiniGame.GridRegen, 
		{
			probability = 0;
		} : MiniGame.AppendStart
	];
	predefinedGrid = 
	[
		"1C", "55", "1C", "BD", "1C", "E9", "1C", "BD", "1C", "55", "55", "1C", "BD", "E9", "BD", "BD", "E9", "BD", "1C", "55", "1C", "55", "1C", "55", "E9"
	];
	predefinedBasicAccess = 
	[
		"55", "55"
	];
	predefinedCyberdeckPrograms = 
	[
		"Optics Bug", "55", "E9", "Overload Cyberware", "1C", "BD", "BD"
	];
	predefinedNetworkPrograms = 
	[
		"Squad tracing", "1C", "55", "Quick upload", "BD", "1C", "E9", "Jam Targeting system", "1C", "E9", "55", "55"
	];
}

GridRegen : Trap
{
	name = "GridRegen";
	type = "TrapType.Mixed";
	probability = 0;
}

RandomVirus : Trap
{
	name = "RandomVirus";
	type = "TrapType.Negative";
	probability = 0;
}

AppendStart : Trap
{
	name = "AppendStart";
	type = "TrapType.Negative";
	probability = 0;
}

Hidden : Trap
{
	name = "Hidden";
	type = "TrapType.Negative";
	probability = 0;
}

