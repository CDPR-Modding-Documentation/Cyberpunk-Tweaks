package UIMaps
using RTDB

RangedWeapons : UIStatsMap
{
	fk< Stat >[] primaryStats = 
	[
		"BaseStats.EffectiveDPS"
	];
	fk< Stat >[] secondaryStats = 
	[
		"BaseStats.PhysicalDamage", "BaseStats.ThermalDamage", "BaseStats.ElectricDamage", "BaseStats.ChemicalDamage", "BaseStats.CritChance", "BaseStats.CritDamage", "BaseStats.ChargeTime", "BaseStats.ChargeMultiplier", "BaseStats.BonusRicochetDamage", "BaseStats.BleedingApplicationRate", "BaseStats.BurningApplicationRate", "BaseStats.PoisonedApplicationRate", "BaseStats.ElectrocutedApplicationRate", "BaseStats.HeadshotDamageMultiplier"
	];
	fk< Stat >[] statsToCompare = 
	[
		"BaseStats.EffectiveDPS"
	];
	fk< ItemType >[] typesToCompareWith = 
	[
		"ItemType.Wea_Handgun", "ItemType.Wea_Rifle", "ItemType.Wea_Shotgun", "ItemType.Wea_SniperRifle", "ItemType.Wea_Revolver", "ItemType.Wea_LightMachineGun", "ItemType.Wea_PrecisionRifle", "ItemType.Wea_ShotgunDual", "ItemType.Wea_SubmachineGun"
	];
}

EquipmentItems : UIStatsMap
{
	fk< Stat >[] secondaryStats = 
	[
		"BaseStats.Armor", "BaseStats.ThermalResistance", "BaseStats.ElectricResistance", "BaseStats.ChemicalResistance", "BaseStats.Range"
	];
}

Clothing : UIStatsMap
{
	fk< Stat >[] primaryStats = 
	[
		"BaseStats.Armor"
	];
	fk< Stat >[] secondaryStats = 
	[
		"BaseStats.StreetCredXPBonusMultiplier", "BaseStats.CritChance", "BaseStats.CritDamage", "BaseStats.DummyModCritDamage", "BaseStats.HeadshotDamageMultiplier", "BaseStats.BonusDamageAgainstBosses", "BaseStats.BonusDamageAgainstElites", "BaseStats.BonusDamageAgainstRares", "BaseStats.ThermalResistance", "BaseStats.ChemicalResistance", "BaseStats.ElectricResistance", "BaseStats.DurationReductionDot", "BaseStats.DamageReductionMelee", "BaseStats.DamageReductionExplosion", "BaseStats.FallDamageReduction", "BaseStats.MitigationChance", "BaseStats.MitigationStrength", "BaseStats.DamageReductionQuickhacks", "BaseStats.QuickhacksCooldownReduction", "BaseStats.IntrinsicQuickHackUploadBonus", "BaseStats.StaminaCostReduction", "BaseStats.BlockFactor", "BaseStats.MaxSpeed", "BaseStats.Visibility", "BaseStats.VendorBuyPriceDiscount", "BaseStats.VendorSellPriceDiscount", "BaseStats.IntrinsicZoomLevelBonus", "BaseStats.IntrinsicReloadTimeBonus", "BaseStats.CarryCapacity"
	];
	fk< Stat >[] statsToCompare = 
	[
		"BaseStats.Armor"
	];
}

MeleeWeapons : UIStatsMap
{
	fk< Stat >[] primaryStats = 
	[
		"BaseStats.EffectiveDPS"
	];
	fk< Stat >[] secondaryStats = 
	[
		"BaseStats.PhysicalDamage", "BaseStats.ThermalDamage", "BaseStats.ElectricDamage", "BaseStats.ChemicalDamage", "BaseStats.ThermalResistance", "BaseStats.ChemicalResistance", "BaseStats.ElectricResistance", "BaseStats.StaminaCostReduction", "BaseStats.CritChance", "BaseStats.CritDamage", "BaseStats.BleedingApplicationRate", "BaseStats.BurningApplicationRate", "BaseStats.PoisonedApplicationRate", "BaseStats.ElectrocutedApplicationRate"
	];
	fk< Stat >[] statsToCompare = 
	[
		"BaseStats.EffectiveDPS"
	];
	fk< ItemType >[] typesToCompareWith = 
	[
		"ItemType.Wea_Axe", "ItemType.Wea_Chainsword", "ItemType.Wea_Fists", "ItemType.Wea_Hammer", "ItemType.Wea_Katana", "ItemType.Wea_Knife", "ItemType.Wea_LongBlade", "ItemType.Wea_Machete", "ItemType.Wea_Melee", "ItemType.Wea_OneHandedClub", "ItemType.Wea_ShortBlade", "ItemType.Wea_TwoHandedClub"
	];
}

ThrowableKnives : MeleeWeapons
{
	fk< Stat >[] secondaryStats += 
	[
		"BaseStats.HeadshotDamageMultiplier", "BaseStats.ThrowRecovery", "BaseStats.ShortDistanceDamageIncrease", "BaseStats.EnemyChemicalResistanceReduction", "BaseStats.WeaponSwapDuration"
	];
}

Cyberware : UIStatsMap
{
	fk< Stat >[] primaryStats = 
	[
		"BaseStats.DPS"
	];
	fk< Stat >[] statsToCompare = [];
	fk< Stat >[] secondaryStats = 
	[
		"BaseStats.BonusRicochetDamage"
	];
}

CyberMeleeWeapons : UIStatsMap
{
	fk< Stat >[] primaryStats = 
	[
		"BaseStats.EffectiveDPS"
	];
	fk< Stat >[] secondaryStats = 
	[
		"BaseStats.EffectiveDamagePerHit", "BaseStats.PhysicalDamage", "BaseStats.ThermalDamage", "BaseStats.ElectricDamage", "BaseStats.ChemicalDamage", "BaseStats.AttacksPerSecond", "BaseStats.StaminaCostReduction", "BaseStats.CritChance", "BaseStats.CritDamage", "BaseStats.BleedingApplicationRate", "BaseStats.BurningApplicationRate", "BaseStats.PoisonedApplicationRate", "BaseStats.ElectrocutedApplicationRate"
	];
	fk< Stat >[] statsToCompare = 
	[
		"BaseStats.EffectiveDPS"
	];
	fk< ItemType >[] typesToCompareWith = 
	[
		"ItemType.Cyb_NanoWires", "ItemType.Cyb_StrongArms", "ItemType.Cyb_MantisBlades"
	];
}

Consumable : UIStatsMap
{
	fk< Stat >[] secondaryStats = 
	[
		"BaseStats.ItemLevel", "BaseStats.MaxDuration"
	];
}

Inhaler : Consumable
{
	fk< Stat >[] secondaryStats = 
	[
		"BaseStats.ItemLevel"
	];
}

Gadget : UIStatsMap
{
	fk< Stat >[] primaryStats = 
	[
		"BaseStats.Range"
	];
	fk< Stat >[] secondaryStats = 
	[
		"BaseStats.ItemLevel", "BaseStats.Range", "BaseStats.PhysicalDamage", "BaseStats.ThermalDamage", "BaseStats.ElectricDamage", "BaseStats.ChemicalDamage"
	];
}

General : UIStatsMap
{
}

Part : UIStatsMap
{
	fk< Stat >[] secondaryStats = 
	[
		"BaseStats.RicochetCount"
	];
}

Mod : Part
{
	fk< ItemType >[] typesToCompareWith = 
	[
		"ItemType.Prt_Mod"
	];
}

Magazine : Part
{
	fk< Stat >[] secondaryStats = 
	[
		"BaseStats.Accuracy"
	];
	fk< ItemType >[] typesToCompareWith = 
	[
		"ItemType.Prt_Magazine"
	];
}

FabricEnhancer : Part
{
	fk< Stat >[] secondaryStats = 
	[
		"BaseStats.ItemArmor", "BaseStats.DurationReductionDot", "BaseStats.CritChance", "BaseStats.CritDamage", "BaseStats.HeadshotDamageMultiplier", "BaseStats.StreetCredXPBonusMultiplier", "BaseStats.MitigationStrength", "BaseStats.BonusDamageAgainstBosses", "BaseStats.BonusDamageAgainstElites", "BaseStats.BonusDamageAgainstRares", "BaseStats.QuickhacksCooldownReduction", "BaseStats.FallDamageReduction", "BaseStats.MaxSpeed", "BaseStats.StaminaCostReduction", "BaseStats.BlockFactor", "BaseStats.DamageReductionExplosion", "BaseStats.ThermalResistance", "BaseStats.ChemicalResistance", "BaseStats.ElectricResistance"
	];
	fk< ItemType >[] typesToCompareWith = 
	[
		"ItemType.Prt_FabricEnhancer"
	];
}

Fragment : Part
{
	fk< Stat >[] secondaryStats = 
	[
		"BaseStats.Charge", "BaseStats.AttackSpeed", "BaseStats.BlockFactor"
	];
}

Scope : Part
{
	fk< Stat >[] secondaryStats = 
	[
		"BaseStats.AimInTime", "BaseStats.EffectiveRange"
	];
	fk< ItemType >[] typesToCompareWith = 
	[
		"ItemType.Prt_Scope"
	];
}

