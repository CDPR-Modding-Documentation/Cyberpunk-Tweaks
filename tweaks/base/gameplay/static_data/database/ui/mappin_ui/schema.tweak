package RTDB

MappinUIParamGroup
{
	float minValue = 10.f;
	float maxValue = 100.f;
	float minFactor = 1.0f;
	float maxFactor = 1.0f;
	float valueOffset = 0.0f;
	bool quadratic = false;
	float quadraticPeakMultiplier = 1.0f;
}

MappinUISpawnProfile
{
	float spawnDistance = 0;
	float despawnDistance = 0;
}

MappinUICustomOpacityParams
{
	float distanceWhenFullyHidden = 5.0f;
	float distanceWhenFullyVisible = 9.0f;
	float visibilityConeStartAngle = 15.0f;
	float visibilityConeEndAngle = 45.0f;
	float visibilityConeMaximumOpacity = 0.65f;
}

MappinUIRuntimeProfile
{
	int priority = 0;
	bool[] visibleInTier = 
	[
		true, false, false, false, false
	];
	bool visibleInBraindance = false;
	bool visibleInScanning = true;
	bool clampX = false;
	bool clampY = false;
	Vector2 clampEllipseSize = ( 0.7f, 0.7f );
	Vector2 clampRectMargin = ( 0.f, 0.f );
	bool dynamicClamping = false;
	bool showDistance = false;
	float showDistanceMinRange = 10.f;
	float showNameMinRange = 25.f;
	bool scaleByDistance = true;
	fk< MappinUIParamGroup > scaleDistanceParams = "MappinUISettings.DefaultDistanceScale";
	fk< MappinUIParamGroup > scaleDistanceScanningParams = "MappinUISettings.DefaultDistanceScale";
	fk< MappinUIParamGroup > opacityDistanceParams = "";
	fk< MappinUIParamGroup > opacityAngleParams = "";
	fk< MappinUICustomOpacityParams > opacityCustomParams = "";
	fk< MappinClampingSettings > clampingParams = "MappinClampingSettings.Default";
	Vector3 worldOffset = ( 0.f, 0.f, 0.f );
	Vector2 screenOffset = ( 0.f, 0.f );
	bool keepNameplate = true;
	bool useQuestProperties = false;
	float hoverRadius = 120.f;
	bool showTrackedIcon = true;
	bool isLoot = false;
}

MappinUISettings : MappinUIRuntimeProfile
{
	bool showInTier3 = false;
	float completedPOIOpacity = 0.0f;
}

MappinUIGlobalProfile
{
	float completedPOIOpacity = 0.7f;
	float gpsPortalIconScale = 0.8f;
	float verticalRelationVisibleRangeMin = 5.f;
	float verticalRelationVisibleRangeMax = 100.f;
	float verticalRelationTolerance = 2.5f;
	bool[] nameplateVisibleInTier = 
	[
		true, false, false, false, false
	];
	bool nameplateVisibleInBraindance = true;
}

MappinClampingSettings
{
	bool useSpecialShapeLogic = true;
	Vector2 clampingRectangleLeftAndTop = ( 0.025f, 0.05f );
	Vector2 clampingRectangleRightAndBottom = ( 0.025f, 0.05f );
	Vector2 ellipseSize = ( 0.5f, 0.4f );
	Vector2 ellipseOffset = ( -0.2f, -0.2f );
	bool disableTopLeftEllipse = false;
	bool disableTopRightEllipse = false;
	bool disableBottomRightEllipse = false;
	bool disableBottomLeftEllipse = false;
	bool customTopLeftEllipse = false;
	Vector2 customTopLeftEllipseSize = ( 0.0f, 0.0f );
	Vector2 customTopLeftEllipseOffset = ( 0.0f, 0.0f );
	bool customTopRightEllipse = true;
	Vector2 customTopRightEllipseSize = ( 0.5f, 0.4f );
	Vector2 customTopRightEllipseOffset = ( -0.25f, -0.25f );
	bool customBottomRightEllipse = false;
	Vector2 customBottomRightEllipseSize = ( 0.0f, 0.0f );
	Vector2 customBottomRightEllipseOffset = ( 0.0f, 0.0f );
	bool customBottomLeftEllipse = false;
	Vector2 customBottomLeftEllipseSize = ( 0.0f, 0.0f );
	Vector2 customBottomLeftEllipseOffset = ( 0.0f, 0.0f );
	float minimumClampPercent = 0.5f;
	float clampSmoothing = 0.25f;
	bool useEllipseShape = false;
	Vector2 ellipseShapeSize = ( 0.25f, 0.25f );
}

MappinUIPreventionSettings
{
	float preventionMappinMaxDistance = 650.f;
	float preventionVehicleMappinMaxDistance = 650.f;
	float preventionDetectionThresholdForVisionCone = 90.f;
}

