package Vehicle
using RTDB, Items

PanzerCannon : VehicleWeapon
{
	slot = "AttachmentSlots.PanzerCannon";
	item = "Items.Panzer_Cannon";
	float minYaw = -15.0f;
	float maxYaw = 15.0f;
	float maxPitch = 60.0f;
	float minPitch = -25.0f;
	CName weaponShootAnimEvent = "shoot_cannon";
	float cycleTime = 0.3f;
	int singleShotProjectiles = 1;
	int wholeBurstProjectiles = 1;
	float singleProjectileCycleTime = 1.0f;
	bool genericTick = true;
	bool genericShoot = true;
	bool canFriendlyFire = false;
}

PanzerHomingMissileLauncher : VehicleWeapon
{
	slot = "AttachmentSlots.PanzerHomingMissiles";
	item = "Items.Panzer_Missile_Launcher";
	float minYaw = 0.0f;
	float maxYaw = 0.0f;
	float maxPitch = 0.0f;
	float minPitch = 0.0f;
	CName weaponShootAnimEvent = "shoot_rocket";
	float cycleTime = 2.0f;
	int singleShotProjectiles = 1;
	int wholeBurstProjectiles = 15;
	float singleProjectileCycleTime = 0.017f;
	bool genericTick = true;
	bool genericShoot = true;
}

PanzerCounterMeasuresLauncherLeft : VehicleWeapon
{
	slot = "AttachmentSlots.PanzerCounterMeasuresLeft";
	item = "Items.Panzer_Counter_Measures_Launcher";
	int singleShotProjectiles = 1;
	int wholeBurstProjectiles = 1;
	float cycleTime = 2.0f;
	float attackRange = 35.f;
	bool genericTick = true;
	bool genericShoot = false;
}

PanzerCounterMeasuresLauncherRight : VehicleWeapon
{
	slot = "AttachmentSlots.PanzerCounterMeasuresRight";
	item = "Items.Panzer_Counter_Measures_Launcher";
	int singleShotProjectiles = 1;
	int wholeBurstProjectiles = 1;
	float cycleTime = 2.0f;
	float attackRange = 35.f;
	bool genericTick = true;
	bool genericShoot = false;
}

