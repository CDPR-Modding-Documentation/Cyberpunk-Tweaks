package Items
using RTDB, BaseStats, Perks, Prereqs

CyberRotorsCommon : MusculoskeletalSystemModule
{
	string friendlyName = "NeoFiber";
	displayName = "LocKey#40858";
	localizedDescription = "LocKey#40859";
	iconPath = "cw_skeleton_cyberrotors";
	quality = "Quality.Common";
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Prereqs.MeleeWeaponHeldPrereq";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.AttackSpeed";
								modifierType = "AdditiveMultiplier";
								value = 0.05f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupOnWeapon
			];
			UIData = 
			{
				intValues = 
				[
					5
				];
			} : CyberRotorsUIData;
		}
	];
	CName cyberwareType = "CyberRotors";
	buyPrice += 
	[
		"Price.CyberRotors"
	];
	sellPrice += 
	[
		"Price.CyberRotors"
	];
}

CyberRotorsUncommon : CyberRotorsCommon
{
	quality = "Quality.Uncommon";
	equipPrereqs = 
	[
		{
			valueToCheck = 8;
		} : ReflexesPrereq
	];
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Prereqs.MeleeWeaponHeldPrereq";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.AttackSpeed";
								modifierType = "AdditiveMultiplier";
								value = 0.1f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupOnWeapon
			];
			UIData = 
			{
				intValues = 
				[
					10
				];
			} : CyberRotorsUIData;
		}
	];
}

CyberRotorsRare : CyberRotorsCommon
{
	quality = "Quality.Rare";
	equipPrereqs = 
	[
		{
			valueToCheck = 12;
		} : ReflexesPrereq
	];
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Prereqs.MeleeWeaponHeldPrereq";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.AttackSpeed";
								modifierType = "AdditiveMultiplier";
								value = 0.15f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupOnWeapon
			];
			UIData = 
			{
				intValues = 
				[
					15
				];
			} : CyberRotorsUIData;
		}
	];
}

CyberRotorsEpic : CyberRotorsCommon
{
	quality = "Quality.Epic";
	equipPrereqs = 
	[
		{
			valueToCheck = 15;
		} : ReflexesPrereq
	];
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Prereqs.MeleeWeaponHeldPrereq";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.AttackSpeed";
								modifierType = "AdditiveMultiplier";
								value = 0.2f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupOnWeapon
			];
			UIData = 
			{
				intValues = 
				[
					20
				];
			} : CyberRotorsUIData;
		}
	];
}

CyberRotorsLegendary : CyberRotorsCommon
{
	quality = "Quality.Legendary";
	equipPrereqs = 
	[
		{
			valueToCheck = 18;
		} : ReflexesPrereq
	];
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Prereqs.MeleeWeaponHeldPrereq";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.AttackSpeed";
								modifierType = "AdditiveMultiplier";
								value = 0.25f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupOnWeapon
			];
			UIData = 
			{
				intValues = 
				[
					25
				];
			} : CyberRotorsUIData;
		}
	];
}

EndoskeletonCommon : MusculoskeletalSystemModule
{
	string friendlyName = "Endoskeleton";
	displayName = "LocKey#3653";
	localizedDescription = "LocKey#3659";
	iconPath = "cw_skeleton_endoskeleton";
	quality = "Quality.Common";
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.Health";
					modifierType = "AdditiveMultiplier";
					value = 0.2f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					20
				];
			} : EndoskeletonUIData;
		}
	];
	CName cyberwareType = "Endoskeleton";
	buyPrice += 
	[
		"Price.Endoskeleton"
	];
	sellPrice += 
	[
		"Price.Endoskeleton"
	];
}

EndoskeletonUncommon : EndoskeletonCommon
{
	quality = "Quality.Uncommon";
	equipPrereqs = 
	[
		{
			valueToCheck = 8;
		} : BodyPrereq
	];
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.Health";
					modifierType = "AdditiveMultiplier";
					value = 0.3f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					30
				];
			} : EndoskeletonUIData;
		}
	];
}

EndoskeletonRare : EndoskeletonCommon
{
	quality = "Quality.Rare";
	equipPrereqs = 
	[
		{
			valueToCheck = 12;
		} : BodyPrereq
	];
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.Health";
					modifierType = "AdditiveMultiplier";
					value = 0.4f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					40
				];
			} : EndoskeletonUIData;
		}
	];
}

EndoskeletonEpic : EndoskeletonCommon
{
	quality = "Quality.Epic";
	equipPrereqs = 
	[
		{
			valueToCheck = 15;
		} : BodyPrereq
	];
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.Health";
					modifierType = "AdditiveMultiplier";
					value = 0.5f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					50
				];
			} : EndoskeletonUIData;
		}
	];
}

EndoskeletonLegendary : EndoskeletonCommon
{
	quality = "Quality.Legendary";
	equipPrereqs = 
	[
		{
			valueToCheck = 20;
		} : BodyPrereq
	];
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.Health";
					modifierType = "AdditiveMultiplier";
					value = 0.6f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					60
				];
			} : EndoskeletonUIData;
		}
	];
}

EnhancedTissueCommon : MusculoskeletalSystemModule
{
	displayName = "LocKey#40828";
	localizedDescription = "LocKey#40829";
	iconPath = "cw_skeleton_enhancedtissue";
	quality = "Quality.Common";
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.Stamina";
					modifierType = "AdditiveMultiplier";
					value = 0.2f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					20
				];
			} : EnhancedTissueUIData;
		}
	];
	CName cyberwareType = "EnhancedTissue";
	buyPrice += 
	[
		"Price.EnhancedTissue"
	];
	sellPrice += 
	[
		"Price.EnhancedTissue"
	];
}

EnhancedTissueUncommon : EnhancedTissueCommon
{
	quality = "Quality.Uncommon";
	equipPrereqs = 
	[
		{
			valueToCheck = 8;
		} : BodyPrereq
	];
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.Stamina";
					modifierType = "AdditiveMultiplier";
					value = 0.3f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					30
				];
			} : EnhancedTissueUIData;
		}
	];
}

EnhancedTissueRare : EnhancedTissueCommon
{
	quality = "Quality.Rare";
	equipPrereqs = 
	[
		{
			valueToCheck = 12;
		} : BodyPrereq
	];
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.Stamina";
					modifierType = "AdditiveMultiplier";
					value = 0.4f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					40
				];
			} : EnhancedTissueUIData;
		}
	];
}

EnhancedTissueEpic : EnhancedTissueCommon
{
	quality = "Quality.Epic";
	equipPrereqs = 
	[
		{
			valueToCheck = 15;
		} : BodyPrereq
	];
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.Stamina";
					modifierType = "AdditiveMultiplier";
					value = 0.5f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					50
				];
			} : EnhancedTissueUIData;
		}
	];
}

EnhancedTissueLegendary : EnhancedTissueCommon
{
	quality = "Quality.Legendary";
	equipPrereqs = 
	[
		{
			valueToCheck = 18;
		} : BodyPrereq
	];
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.Stamina";
					modifierType = "AdditiveMultiplier";
					value = 0.6f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					60
				];
			} : EnhancedTissueUIData;
		}
	];
}

TitaniumInfusedBonesCommon : MusculoskeletalSystemModule
{
	string friendlyName = "Endoskeleton";
	displayName = "LocKey#40831";
	localizedDescription = "LocKey#40832";
	iconPath = "cw_skeleton_titaniuminfusedbones";
	quality = "Quality.Common";
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CarryCapacity";
					modifierType = "AdditiveMultiplier";
					value = 0.2f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					20
				];
			} : TitaniumInfusedBonesUIData;
		}
	];
	CName cyberwareType = "TitaniumInfusedBones";
	buyPrice += 
	[
		"Price.TitaniumInfusedBones"
	];
	sellPrice += 
	[
		"Price.TitaniumInfusedBones"
	];
}

TitaniumInfusedBonesUncommon : TitaniumInfusedBonesCommon
{
	quality = "Quality.Uncommon";
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CarryCapacity";
					modifierType = "AdditiveMultiplier";
					value = 0.4f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					40
				];
			} : TitaniumInfusedBonesUIData;
		}
	];
}

TitaniumInfusedBonesRare : TitaniumInfusedBonesCommon
{
	quality = "Quality.Rare";
	equipPrereqs = 
	[
		{
			valueToCheck = 13;
		} : BodyPrereq
	];
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CarryCapacity";
					modifierType = "AdditiveMultiplier";
					value = 0.6f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					60
				];
			} : TitaniumInfusedBonesUIData;
		}
	];
}

MicroVibrationsGeneratorUncommon : MusculoskeletalSystemModule
{
	string friendlyName = "Endoskeleton";
	displayName = "LocKey#40834";
	localizedDescription = "LocKey#40835";
	iconPath = "cw_skeleton_microvibrationsgenerator";
	quality = "Quality.Uncommon";
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Prereqs.MeleeWeaponHeldPrereq";
					effectorToApply = 
					{
						prereqRecord = "Prereqs.ProcessHitTriggered";
						value = 1.05f;
					} : MultiplyDamage;
				} : ApplyEffectorOnPlayer
			];
			UIData = 
			{
				intValues = 
				[
					5
				];
			} : MicroVibrationsGeneratorUIData;
		}
	];
	CName cyberwareType = "MicroVibrationsGenerator";
	buyPrice += 
	[
		"Price.MicroVibrationsGenerator"
	];
	sellPrice += 
	[
		"Price.MicroVibrationsGenerator"
	];
}

MicroVibrationsGeneratorRare : MicroVibrationsGeneratorUncommon
{
	quality = "Quality.Rare";
	equipPrereqs = 
	[
		{
			valueToCheck = 12;
		} : ReflexesPrereq
	];
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Prereqs.MeleeWeaponHeldPrereq";
					effectorToApply = 
					{
						prereqRecord = "Prereqs.ProcessHitTriggered";
						value = 1.1f;
					} : MultiplyDamage;
				} : ApplyEffectorOnPlayer
			];
			UIData = 
			{
				intValues = 
				[
					10
				];
			} : MicroVibrationsGeneratorUIData;
		}
	];
}

MicroVibrationsGeneratorEpic : MicroVibrationsGeneratorUncommon
{
	quality = "Quality.Epic";
	equipPrereqs = 
	[
		{
			valueToCheck = 16;
		} : ReflexesPrereq
	];
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Prereqs.MeleeWeaponHeldPrereq";
					effectorToApply = 
					{
						prereqRecord = "Prereqs.ProcessHitTriggered";
						value = 1.15f;
					} : MultiplyDamage;
				} : ApplyEffectorOnPlayer
			];
			UIData = 
			{
				intValues = 
				[
					15
				];
			} : MicroVibrationsGeneratorUIData;
		}
	];
}

JointLockRare : MusculoskeletalSystemModule
{
	string friendlyName = "JointLock";
	displayName = "LocKey#40837";
	localizedDescription = "LocKey#40838";
	iconPath = "cw_skeleton_jointlock";
	quality = "Quality.Rare";
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			fk< Effector >[] effectors = 
			[
				{
					prereqRecord = "Prereqs.RangedWeaponHeldPrereq";
					CName effectorClassName = "ApplyStatGroupEffector";
					fk< StatModifierGroup > statGroup = 
					{
						fk< StatModifier >[] statModifiers = 
						[
							{
								statType = "BaseStats.RecoilKickMin";
								modifierType = "AdditiveMultiplier";
								value = -0.12f;
							} : ConstantStatModifier, 
							{
								statType = "BaseStats.RecoilKickMax";
								modifierType = "AdditiveMultiplier";
								value = -0.12f;
							} : ConstantStatModifier
						];
					} : StatModifierGroup;
					applicationTarget = "Weapon";
				} : ApplyStatGroupEffector
			];
			UIData = 
			{
				intValues = 
				[
					12
				];
			} : JointLockUIData;
		}
	];
	CName cyberwareType = "JointLock";
	buyPrice += 
	[
		"Price.JointLock"
	];
	sellPrice += 
	[
		"Price.JointLock"
	];
}

JointLockEpic : JointLockRare
{
	quality = "Quality.Epic";
	equipPrereqs = 
	[
		{
			valueToCheck = 12;
		} : BodyPrereq
	];
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			fk< Effector >[] effectors = 
			[
				{
					prereqRecord = "Prereqs.RangedWeaponHeldPrereq";
					CName effectorClassName = "ApplyStatGroupEffector";
					fk< StatModifierGroup > statGroup = 
					{
						fk< StatModifier >[] statModifiers = 
						[
							{
								statType = "BaseStats.RecoilKickMin";
								modifierType = "AdditiveMultiplier";
								value = -0.25f;
							} : ConstantStatModifier, 
							{
								statType = "BaseStats.RecoilKickMax";
								modifierType = "AdditiveMultiplier";
								value = -0.25f;
							} : ConstantStatModifier
						];
					} : StatModifierGroup;
					applicationTarget = "Weapon";
				} : ApplyStatGroupEffector
			];
			UIData = 
			{
				intValues = 
				[
					25
				];
			} : JointLockUIData;
		}
	];
}

DenseMarrowUncommon : MusculoskeletalSystemModule
{
	string friendlyName = "JointLock";
	displayName = "LocKey#40840";
	localizedDescription = "LocKey#40841";
	iconPath = "cw_skeleton_densemarrow";
	quality = "Quality.Uncommon";
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.StaminaCostReduction";
					modifierType = "Additive";
					value = 0.1f;
				} : ConstantStatModifier
			];
			fk< Effector >[] effectors = 
			[
				{
					prereqRecord = "Prereqs.MeleeWeaponHeldPrereq";
					effectorToApply = 
					{
						prereqRecord = "Prereqs.ProcessHitTriggered";
						value = 1.07f;
					} : MultiplyDamage;
				} : ApplyEffectorOnPlayer
			];
			UIData = 
			{
				intValues = 
				[
					10, 7
				];
			} : DenseMarrowUIData;
		}
	];
	CName cyberwareType = "DenseMarrow";
	buyPrice += 
	[
		"Price.DenseMarrow"
	];
	sellPrice += 
	[
		"Price.DenseMarrow"
	];
}

DenseMarrowRare : DenseMarrowUncommon
{
	quality = "Quality.Rare";
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.StaminaCostReduction";
					modifierType = "Additive";
					value = 0.1f;
				} : ConstantStatModifier
			];
			fk< Effector >[] effectors = 
			[
				{
					prereqRecord = "Prereqs.MeleeWeaponHeldPrereq";
					effectorToApply = 
					{
						prereqRecord = "Prereqs.ProcessHitTriggered";
						value = 1.15f;
					} : MultiplyDamage;
				} : ApplyEffectorOnPlayer
			];
			UIData = 
			{
				intValues = 
				[
					10, 15
				];
			} : DenseMarrowUIData;
		}
	];
}

DenseMarrowEpic : DenseMarrowUncommon
{
	quality = "Quality.Epic";
	equipPrereqs = 
	[
		{
			valueToCheck = 13;
		} : BodyPrereq
	];
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.StaminaCostReduction";
					modifierType = "Additive";
					value = 0.1f;
				} : ConstantStatModifier
			];
			fk< Effector >[] effectors = 
			[
				{
					prereqRecord = "Prereqs.MeleeWeaponHeldPrereq";
					effectorToApply = 
					{
						prereqRecord = "Prereqs.ProcessHitTriggered";
						value = 1.25f;
					} : MultiplyDamage;
				} : ApplyEffectorOnPlayer
			];
			UIData = 
			{
				intValues = 
				[
					10, 25
				];
			} : DenseMarrowUIData;
		}
	];
}

EndoskeletonUIData : GameplayLogicPackageUIData
{
	iconPath = "ability_silenced";
	localizedDescription = "LocKey#40826";
}

EnhancedTissueUIData : GameplayLogicPackageUIData
{
	iconPath = "ability_silenced";
	localizedDescription = "LocKey#40827";
}

JointLockUIData : GameplayLogicPackageUIData
{
	iconPath = "ability_silenced";
	localizedDescription = "LocKey#40836";
}

DenseMarrowUIData : GameplayLogicPackageUIData
{
	iconPath = "ability_silenced";
	localizedDescription = "LocKey#40839";
}

TitaniumInfusedBonesUIData : GameplayLogicPackageUIData
{
	iconPath = "ability_silenced";
	localizedDescription = "LocKey#40830";
}

MicroVibrationsGeneratorUIData : GameplayLogicPackageUIData
{
	iconPath = "ability_silenced";
	localizedDescription = "LocKey#40833";
}

