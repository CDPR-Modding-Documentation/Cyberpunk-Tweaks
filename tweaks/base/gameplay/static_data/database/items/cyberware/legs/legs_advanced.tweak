package Items
using RTDB, BaseStats, Price, Variants, ModifierGroups, Perks, NewPerks, Effectors, BaseStatusEffect, Prereqs

[ notQueryable ]
AdvancedLegsModule : LegsModule
{
	usesVariants = true;
	blueprint = "Items.GenericShardableCyberwareBlueprint";
	slotPartListPreset = 
	[
		"Items.GenericItemRootPreset"
	];
	statModifiers += 
	[
		"Items.ItemArmorToArmor", {
			statType = "BaseStats.Protection";
			modifierType = "Additive";
			refStat = "BaseStats.Armor";
			opSymbol = "*";
			value = 1.0f;
		} : CombinedStatModifier
	];
}

AdvancedCatPawsUncommon : AdvancedLegsModule
{
	friendlyName = "CatPaws";
	displayName = "LocKey#3725";
	localizedDescription = "LocKey#3730";
	iconPath = "cw_legs_catpaws";
	quality = "Quality.Uncommon";
	upgradeCostMult = 0.5f;
	statModifiers += 
	[
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = 10.0f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			refStat = "BaseStats.Quality";
			opSymbol = "*";
			value = 6.0f;
		} : CombinedStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			refStat = "BaseStats.IsItemPlus";
			opSymbol = "*";
			value = 6.0f;
		} : CombinedStatModifier, 
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Cool";
			refObject = "Player";
			opSymbol = "*";
			value = 0.2f;
		} : CombinedStatModifier, 
		{
			statType = "BaseStats.FallDamageReduction";
			modifierType = "Additive";
			value = 0.2f;
		} : ConstantStatModifier
	];
	variants = 
	[
		"Variants.Humanity5Cost"
	];
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.AudioLocomotionStimRangeMultiplier";
					modifierType = "Multiplier";
					value = 0.5f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "NewPerks.IsPlayerCrouchingOrCrouchSprintingPrereq";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.MaxSpeed";
								modifierType = "AdditiveMultiplier";
								value = 0.06f;
							} : ConstantStatModifier
						];
					};
				} : Perks.ApplyStatGroupOnPlayer
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#87381";
				floatValues = 
				[
					50f, 6f, 20f
				];
			};
		} : GameplayLogicPackage
	];
	slotPartListPreset += 
	[
		{
			itemPartPreset = "Items.AdvancedCatPawsStatsShard";
		} : StatsShardSlotPart
	];
	CName cyberwareType = "CatPaws";
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "low_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "low_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	nextUpgradeItem = "Items.AdvancedCatPawsUncommonPlus";
}

AdvancedCatPawsStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.StealthHitDamageBonus", "Modifiers.BonusQuickHackDamage", "Modifiers.BonusQuickHackDamageQualityToggle", "Modifiers.MeleeDamagePercentBonus", "Modifiers.MeleeDamagePercentBonusToggle"
	];
}

[ notQueryable ]
AdvancedCatPawsUncommonPlus : AdvancedCatPawsUncommon
{
	quality = "Quality.UncommonPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.AudioLocomotionStimRangeMultiplier";
					modifierType = "Multiplier";
					value = 0.5f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "NewPerks.IsPlayerCrouchingOrCrouchSprintingPrereq";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.MaxSpeed";
								modifierType = "AdditiveMultiplier";
								value = 0.06f;
							} : ConstantStatModifier
						];
					};
				} : Perks.ApplyStatGroupOnPlayer
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#87381";
				floatValues = 
				[
					50f, 6f, 20f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedCatPawsRare";
}

AdvancedCatPawsRare : AdvancedCatPawsUncommon
{
	quality = "Quality.Rare";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.AudioLocomotionStimRangeMultiplier";
					modifierType = "Multiplier";
					value = 0.5f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "NewPerks.IsPlayerCrouchingOrCrouchSprintingPrereq";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.MaxSpeed";
								modifierType = "AdditiveMultiplier";
								value = 0.08f;
							} : ConstantStatModifier
						];
					};
				} : Perks.ApplyStatGroupOnPlayer
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#87381";
				floatValues = 
				[
					50f, 8f, 20f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedCatPawsRarePlus";
}

[ notQueryable ]
AdvancedCatPawsRarePlus : AdvancedCatPawsUncommon
{
	quality = "Quality.RarePlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.AudioLocomotionStimRangeMultiplier";
					modifierType = "Multiplier";
					value = 0.5f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "NewPerks.IsPlayerCrouchingOrCrouchSprintingPrereq";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.MaxSpeed";
								modifierType = "AdditiveMultiplier";
								value = 0.08f;
							} : ConstantStatModifier
						];
					};
				} : Perks.ApplyStatGroupOnPlayer
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#87381";
				floatValues = 
				[
					50f, 8f, 20f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedCatPawsEpic";
}

AdvancedCatPawsEpic : AdvancedCatPawsUncommon
{
	quality = "Quality.Epic";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.AudioLocomotionStimRangeMultiplier";
					modifierType = "Multiplier";
					value = 0.5f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "NewPerks.IsPlayerCrouchingOrCrouchSprintingPrereq";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.MaxSpeed";
								modifierType = "AdditiveMultiplier";
								value = 0.1f;
							} : ConstantStatModifier
						];
					};
				} : Perks.ApplyStatGroupOnPlayer
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#87381";
				floatValues = 
				[
					50f, 10f, 20f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedCatPawsEpicPlus";
}

[ notQueryable ]
AdvancedCatPawsEpicPlus : AdvancedCatPawsUncommon
{
	quality = "Quality.EpicPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.AudioLocomotionStimRangeMultiplier";
					modifierType = "Multiplier";
					value = 0.5f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "NewPerks.IsPlayerCrouchingOrCrouchSprintingPrereq";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.MaxSpeed";
								modifierType = "AdditiveMultiplier";
								value = 0.1f;
							} : ConstantStatModifier
						];
					};
				} : Perks.ApplyStatGroupOnPlayer
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#87381";
				floatValues = 
				[
					50f, 10f, 20f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedCatPawsLegendary";
}

AdvancedCatPawsLegendary : AdvancedCatPawsUncommon
{
	quality = "Quality.Legendary";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.AudioLocomotionStimRangeMultiplier";
					modifierType = "Multiplier";
					value = 0.5f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "NewPerks.IsPlayerCrouchingOrCrouchSprintingPrereq";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.MaxSpeed";
								modifierType = "AdditiveMultiplier";
								value = 0.12f;
							} : ConstantStatModifier
						];
					};
				} : Perks.ApplyStatGroupOnPlayer
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#87381";
				floatValues = 
				[
					50f, 12f, 20f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedCatPawsLegendaryPlus";
}

[ notQueryable ]
AdvancedCatPawsLegendaryPlus : AdvancedCatPawsUncommon
{
	quality = "Quality.LegendaryPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.AudioLocomotionStimRangeMultiplier";
					modifierType = "Multiplier";
					value = 0.5f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "NewPerks.IsPlayerCrouchingOrCrouchSprintingPrereq";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.MaxSpeed";
								modifierType = "AdditiveMultiplier";
								value = 0.12f;
							} : ConstantStatModifier
						];
					};
				} : Perks.ApplyStatGroupOnPlayer
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#87381";
				floatValues = 
				[
					50f, 12f, 20f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedCatPawsLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedCatPawsLegendaryPlusPlus : AdvancedCatPawsUncommon
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.AudioLocomotionStimRangeMultiplier";
					modifierType = "Multiplier";
					value = 0.5f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "NewPerks.IsPlayerCrouchingOrCrouchSprintingPrereq";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.MaxSpeed";
								modifierType = "AdditiveMultiplier";
								value = 0.12f;
							} : ConstantStatModifier
						];
					};
				} : Perks.ApplyStatGroupOnPlayer
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#87381";
				floatValues = 
				[
					50f, 12f, 20f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "";
}

AdvancedBoostedTendonsUncommon : AdvancedLegsModule
{
	string friendlyName = "BoostedTendons";
	displayName = "LocKey#40875";
	localizedDescription = "LocKey#40876";
	iconPath = "cw_legs_boostedtendons";
	quality = "Quality.Uncommon";
	upgradeCostMult = 1.5f;
	statModifiers += 
	[
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = 2.0f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			refStat = "BaseStats.Quality";
			opSymbol = "*";
			value = 2.0f;
		} : CombinedStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			refStat = "BaseStats.IsItemPlus";
			opSymbol = "*";
			value = 1.0f;
		} : CombinedStatModifier, 
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Reflexes";
			refObject = "Player";
			opSymbol = "*";
			value = 0.1f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity8Cost"
	];
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.HasDoubleJump";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#43495";
			};
		} : GameplayLogicPackage
	];
	slotPartListPreset += 
	[
		{
			itemPartPreset = "Items.AdvancedBoostedTendonsStatsShard";
		} : StatsShardSlotPart
	];
	CName cyberwareType = "BoostedTendons";
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "midhigh_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "midhigh_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	nextUpgradeItem = "Items.AdvancedBoostedTendonsUncommonPlus";
}

AdvancedBoostedTendonsStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.HealthRegenPercent", "Modifiers.ExplosionResistance", "Modifiers.ExplosionResistanceQualityToggle", "Modifiers.GrenadesChargesRegenMult", "Modifiers.GrenadesChargesRegenMultToggle"
	];
}

[ notQueryable ]
AdvancedBoostedTendonsUncommonPlus : AdvancedBoostedTendonsUncommon
{
	quality = "Quality.UncommonPlus";
	OnEquip += 
	[
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "Items.AdvancedBoostedTendonsRare";
}

AdvancedBoostedTendonsRare : AdvancedBoostedTendonsUncommon
{
	quality = "Quality.Rare";
	OnEquip += 
	[
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "Items.AdvancedBoostedTendonsRarePlus";
}

[ notQueryable ]
AdvancedBoostedTendonsRarePlus : AdvancedBoostedTendonsUncommon
{
	quality = "Quality.RarePlus";
	OnEquip += 
	[
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "Items.AdvancedBoostedTendonsEpic";
}

AdvancedBoostedTendonsEpic : AdvancedBoostedTendonsUncommon
{
	quality = "Quality.Epic";
	OnEquip += 
	[
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "Items.AdvancedBoostedTendonsEpicPlus";
}

[ notQueryable ]
AdvancedBoostedTendonsEpicPlus : AdvancedBoostedTendonsUncommon
{
	quality = "Quality.EpicPlus";
	OnEquip += 
	[
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "Items.AdvancedBoostedTendonsLegendary";
}

AdvancedBoostedTendonsLegendary : AdvancedBoostedTendonsUncommon
{
	quality = "Quality.Legendary";
	OnEquip += 
	[
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "Items.AdvancedBoostedTendonsLegendaryPlus";
}

[ notQueryable ]
AdvancedBoostedTendonsLegendaryPlus : AdvancedBoostedTendonsUncommon
{
	quality = "Quality.LegendaryPlus";
	OnEquip += 
	[
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "Items.AdvancedBoostedTendonsLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedBoostedTendonsLegendaryPlusPlus : AdvancedBoostedTendonsUncommon
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip += 
	[
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "";
}

AdvancedReinforcedMusclesUncommon : AdvancedLegsModule
{
	string friendlyName = "ReinforcedMuscles";
	displayName = "LocKey#40882";
	localizedDescription = "LocKey#40883";
	iconPath = "cw_legs_reinforcedmuscles";
	quality = "Quality.Uncommon";
	upgradeCostMult = 1.0f;
	statModifiers += 
	[
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = 17.0f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			refStat = "BaseStats.Quality";
			opSymbol = "*";
			value = 18.0f;
		} : CombinedStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			refStat = "BaseStats.IsItemPlus";
			opSymbol = "*";
			value = 7.0f;
		} : CombinedStatModifier, 
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Strength";
			refObject = "Player";
			opSymbol = "*";
			value = 0.5f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity6Cost"
	];
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.HasChargeJump";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
		} : GameplayLogicPackage, 
		{
			UIData = 
			{
				localizedDescription = "LocKey#43496";
			};
		}
	];
	slotPartListPreset += 
	[
		{
			itemPartPreset = "Items.AdvancedReinforcedMusclesStatsShard";
		} : StatsShardSlotPart
	];
	CName cyberwareType = "ReinforcedMuscles";
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "mid_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "mid_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	nextUpgradeItem = "Items.AdvancedReinforcedMusclesUncommonPlus";
}

AdvancedReinforcedMusclesStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.HealthRegenPercent", "Modifiers.CarryCapacity", "Modifiers.CarryCapacityQualityToggle", "Modifiers.MeleeDamagePercentBonus", "Modifiers.MeleeDamagePercentBonusToggle"
	];
}

[ notQueryable ]
AdvancedReinforcedMusclesUncommonPlus : AdvancedReinforcedMusclesUncommon
{
	quality = "Quality.UncommonPlus";
	nextUpgradeItem = "Items.AdvancedReinforcedMusclesRare";
}

AdvancedReinforcedMusclesRare : AdvancedReinforcedMusclesUncommon
{
	quality = "Quality.Rare";
	OnEquip += 
	[
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "Items.AdvancedReinforcedMusclesRarePlus";
}

[ notQueryable ]
AdvancedReinforcedMusclesRarePlus : AdvancedReinforcedMusclesUncommon
{
	quality = "Quality.RarePlus";
	OnEquip += 
	[
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "Items.AdvancedReinforcedMusclesEpic";
}

AdvancedReinforcedMusclesEpic : AdvancedReinforcedMusclesUncommon
{
	quality = "Quality.Epic";
	OnEquip += 
	[
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "Items.AdvancedReinforcedMusclesEpicPlus";
}

[ notQueryable ]
AdvancedReinforcedMusclesEpicPlus : AdvancedReinforcedMusclesUncommon
{
	quality = "Quality.EpicPlus";
	OnEquip += 
	[
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "Items.AdvancedReinforcedMusclesLegendary";
}

AdvancedReinforcedMusclesLegendary : AdvancedReinforcedMusclesUncommon
{
	quality = "Quality.Legendary";
	OnEquip += 
	[
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "Items.AdvancedReinforcedMusclesLegendaryPlus";
}

[ notQueryable ]
AdvancedReinforcedMusclesLegendaryPlus : AdvancedReinforcedMusclesUncommon
{
	quality = "Quality.LegendaryPlus";
	OnEquip += 
	[
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "Items.AdvancedReinforcedMusclesLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedReinforcedMusclesLegendaryPlusPlus : AdvancedReinforcedMusclesUncommon
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip += 
	[
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "";
}

[ notQueryable ]
AdvancedJenkinsTendonsCommon : AdvancedLegsModule
{
	string friendlyName = "JenkinsTendons";
	displayName = "LocKey#85345";
	localizedDescription = "LocKey#85346";
	iconPath = "JenkinsTendons";
	quality = "Quality.Common";
	upgradeCostMult = 0.5f;
	statModifiers += 
	[
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = 14.0f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			refStat = "BaseStats.Quality";
			opSymbol = "*";
			value = 8.0f;
		} : CombinedStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			refStat = "BaseStats.IsItemPlus";
			opSymbol = "*";
			value = 8.0f;
		} : CombinedStatModifier, 
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Strength";
			refObject = "Player";
			opSymbol = "*";
			value = 0.5f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity6Cost"
	];
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#90249";
				floatValues = 
				[
					20f, 10f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.JenkinsHelper";
					modifierType = "Additive";
					value = 100f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperRegenPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperDecayPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperDecayEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							"Perks.IsPlayerInAir", "Perks.IsPlayerSprinting"
						];
					} : ANDPrereq;
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperDecayEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							"Perks.IsPlayerOnGround", "Perks.IsPlayerNotSprinting"
						];
					} : ANDPrereq;
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperRegenEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statPool = "BaseStatPools.JenkinsHelper";
					statusEffect = "BaseStatusEffect.JenkinsPlayerBuff";
					statPoolStep = 10f;
					minStacks = 10;
					maxStacks = 20;
					roundUpwards = true;
				} : StatPoolBasedStatusEffectEffector
			];
		} : GameplayLogicPackage
	];
	slotPartListPreset += 
	[
		{
			itemPartPreset = "Items.AdvancedJenkinsTendonsStatsShard";
		} : StatsShardSlotPart
	];
	CName cyberwareType = "JenkinsTendons";
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "low_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "low_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	nextUpgradeItem = "Items.AdvancedJenkinsTendonsCommonPlus";
}

AdvancedJenkinsTendonsStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.MeleeDamagePercentBonus", "Modifiers.RecoilPercentBonus", "Modifiers.RecoilPercentBonusQualityToggle", "Modifiers.HealingItemsChargesRegenMult", "Modifiers.HealingItemsChargesRegenMultToggle"
	];
}

[ notQueryable ]
AdvancedJenkinsTendonsCommonPlus : AdvancedJenkinsTendonsCommon
{
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#90249";
				floatValues = 
				[
					20f, 10f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.JenkinsHelper";
					modifierType = "Additive";
					value = 100f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperRegenPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperDecayPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperDecayEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							"Perks.IsPlayerInAir", "Perks.IsPlayerSprinting"
						];
					} : ANDPrereq;
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperDecayEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							"Perks.IsPlayerOnGround", "Perks.IsPlayerNotSprinting"
						];
					} : ANDPrereq;
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperRegenEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statPool = "BaseStatPools.JenkinsHelper";
					statusEffect = "BaseStatusEffect.JenkinsPlayerBuff";
					statPoolStep = 10f;
					minStacks = 10;
					maxStacks = 20;
					roundUpwards = true;
				} : StatPoolBasedStatusEffectEffector
			];
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedJenkinsTendonsUncommon";
}

AdvancedJenkinsTendonsUncommon : AdvancedJenkinsTendonsCommon
{
	quality = "Quality.Uncommon";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#90249";
				floatValues = 
				[
					30f, 10f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.JenkinsHelper";
					modifierType = "Additive";
					value = 100f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperRegenPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperDecayPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperDecayEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							"Perks.IsPlayerOnGround", "Perks.IsPlayerNotSprinting"
						];
					} : ANDPrereq;
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperRegenEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statPool = "BaseStatPools.JenkinsHelper";
					statusEffect = "BaseStatusEffect.JenkinsPlayerBuff";
					statPoolStep = 5f;
					minStacks = 10;
					maxStacks = 30;
					roundUpwards = true;
				} : StatPoolBasedStatusEffectEffector
			];
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedJenkinsTendonsUncommonPlus";
}

[ notQueryable ]
AdvancedJenkinsTendonsUncommonPlus : AdvancedJenkinsTendonsCommon
{
	quality = "Quality.UncommonPlus";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#90249";
				floatValues = 
				[
					30f, 10f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.JenkinsHelper";
					modifierType = "Additive";
					value = 100f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperRegenPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperDecayPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperDecayEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							"Perks.IsPlayerOnGround", "Perks.IsPlayerNotSprinting"
						];
					} : ANDPrereq;
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperRegenEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statPool = "BaseStatPools.JenkinsHelper";
					statusEffect = "BaseStatusEffect.JenkinsPlayerBuff";
					statPoolStep = 5f;
					minStacks = 10;
					maxStacks = 30;
					roundUpwards = true;
				} : StatPoolBasedStatusEffectEffector
			];
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedJenkinsTendonsRare";
}

AdvancedJenkinsTendonsRare : AdvancedJenkinsTendonsCommon
{
	quality = "Quality.Rare";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#90249";
				floatValues = 
				[
					40f, 10f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.JenkinsHelper";
					modifierType = "Additive";
					value = 100f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperRegenPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperDecayPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperDecayEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							"Perks.IsPlayerOnGround", "Perks.IsPlayerNotSprinting"
						];
					} : ANDPrereq;
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperRegenEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statPool = "BaseStatPools.JenkinsHelper";
					statusEffect = "BaseStatusEffect.JenkinsPlayerBuff";
					statPoolStep = 3.333f;
					minStacks = 10;
					maxStacks = 40;
					roundUpwards = true;
				} : StatPoolBasedStatusEffectEffector
			];
		} : GameplayLogicPackage, 
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "Items.AdvancedJenkinsTendonsRarePlus";
}

[ notQueryable ]
AdvancedJenkinsTendonsRarePlus : AdvancedJenkinsTendonsCommon
{
	quality = "Quality.RarePlus";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#90249";
				floatValues = 
				[
					40f, 10f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.JenkinsHelper";
					modifierType = "Additive";
					value = 100f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperRegenPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperDecayPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperDecayEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							"Perks.IsPlayerOnGround", "Perks.IsPlayerNotSprinting"
						];
					} : ANDPrereq;
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperRegenEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statPool = "BaseStatPools.JenkinsHelper";
					statusEffect = "BaseStatusEffect.JenkinsPlayerBuff";
					statPoolStep = 3.333f;
					minStacks = 10;
					maxStacks = 40;
					roundUpwards = true;
				} : StatPoolBasedStatusEffectEffector
			];
		} : GameplayLogicPackage, 
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "Items.AdvancedJenkinsTendonsEpic";
}

AdvancedJenkinsTendonsEpic : AdvancedJenkinsTendonsCommon
{
	quality = "Quality.Epic";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#90249";
				floatValues = 
				[
					50f, 10f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.JenkinsHelper";
					modifierType = "Additive";
					value = 100f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperRegenPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperDecayPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperDecayEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							"Perks.IsPlayerOnGround", "Perks.IsPlayerNotSprinting"
						];
					} : ANDPrereq;
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperRegenEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statPool = "BaseStatPools.JenkinsHelper";
					statusEffect = "BaseStatusEffect.JenkinsPlayerBuff";
					statPoolStep = 2.5f;
					minStacks = 10;
					maxStacks = 50;
					roundUpwards = true;
				} : StatPoolBasedStatusEffectEffector
			];
		} : GameplayLogicPackage, 
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "Items.AdvancedJenkinsTendonsEpicPlus";
}

[ notQueryable ]
AdvancedJenkinsTendonsEpicPlus : AdvancedJenkinsTendonsCommon
{
	quality = "Quality.EpicPlus";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#90249";
				floatValues = 
				[
					50f, 10f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.JenkinsHelper";
					modifierType = "Additive";
					value = 100f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperRegenPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperDecayPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperDecayEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							"Perks.IsPlayerOnGround", "Perks.IsPlayerNotSprinting"
						];
					} : ANDPrereq;
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperRegenEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statPool = "BaseStatPools.JenkinsHelper";
					statusEffect = "BaseStatusEffect.JenkinsPlayerBuff";
					statPoolStep = 2.5f;
					minStacks = 10;
					maxStacks = 50;
					roundUpwards = true;
				} : StatPoolBasedStatusEffectEffector
			];
		} : GameplayLogicPackage, 
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "Items.AdvancedJenkinsTendonsLegendary";
}

AdvancedJenkinsTendonsLegendary : AdvancedJenkinsTendonsCommon
{
	quality = "Quality.Legendary";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#90249";
				floatValues = 
				[
					60f, 10f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.JenkinsHelper";
					modifierType = "Additive";
					value = 100f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperRegenPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperDecayPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperDecayEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							"Perks.IsPlayerOnGround", "Perks.IsPlayerNotSprinting"
						];
					} : ANDPrereq;
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperRegenEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statPool = "BaseStatPools.JenkinsHelper";
					statusEffect = "BaseStatusEffect.JenkinsPlayerBuff";
					statPoolStep = 2f;
					minStacks = 10;
					maxStacks = 60;
					roundUpwards = true;
				} : StatPoolBasedStatusEffectEffector
			];
		} : GameplayLogicPackage, 
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "Items.AdvancedJenkinsTendonsLegendaryPlus";
}

[ notQueryable ]
AdvancedJenkinsTendonsLegendaryPlus : AdvancedJenkinsTendonsCommon
{
	quality = "Quality.LegendaryPlus";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#90249";
				floatValues = 
				[
					60f, 10f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.JenkinsHelper";
					modifierType = "Additive";
					value = 100f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperRegenPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperDecayPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperDecayEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							"Perks.IsPlayerOnGround", "Perks.IsPlayerNotSprinting"
						];
					} : ANDPrereq;
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperRegenEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statPool = "BaseStatPools.JenkinsHelper";
					statusEffect = "BaseStatusEffect.JenkinsPlayerBuff";
					statPoolStep = 2f;
					minStacks = 10;
					maxStacks = 60;
					roundUpwards = true;
				} : StatPoolBasedStatusEffectEffector
			];
		} : GameplayLogicPackage, 
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "Items.AdvancedJenkinsTendonsLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedJenkinsTendonsLegendaryPlusPlus : AdvancedJenkinsTendonsCommon
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#90249";
				floatValues = 
				[
					60f, 10f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.JenkinsHelper";
					modifierType = "Additive";
					value = 100f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperRegenPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.JenkinsHelperDecayPerSecond";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperDecayEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							"Perks.IsPlayerOnGround", "Perks.IsPlayerNotSprinting"
						];
					} : ANDPrereq;
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.JenkinsHelperRegenEnabled";
								modifierType = "Additive";
								value = 1.0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupEffector, 
				{
					prereqRecord = "Perks.IsPlayerSprinting";
					statPool = "BaseStatPools.JenkinsHelper";
					statusEffect = "BaseStatusEffect.JenkinsPlayerBuff";
					statPoolStep = 2f;
					minStacks = 10;
					maxStacks = 60;
					roundUpwards = true;
				} : StatPoolBasedStatusEffectEffector
			];
		} : GameplayLogicPackage, 
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "";
}

[ notQueryable ]
[ EP1 ]
IconicJenkinsTendonsUncommon : AdvancedLegsModule
{
	string friendlyName = "IconicJenkinsTendons";
	displayName = "LocKey#94438";
	localizedDescription = "LocKey#94438";
	iconPath = "cw_legs_speed_iconic";
	tags += 
	[
		"IllegalItem"
	];
	quality = "Quality.Uncommon";
	upgradeCostMult = 1.5f;
	statModifiers += 
	[
		{
			statType = "BaseStats.IsItemIconic";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			value = 10.0f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			refStat = "BaseStats.Quality";
			opSymbol = "*";
			value = 4.0f;
		} : CombinedStatModifier, 
		{
			statType = "BaseStats.Armor";
			modifierType = "Additive";
			refStat = "BaseStats.IsItemPlus";
			opSymbol = "*";
			value = 4.0f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity6Cost"
	];
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#94470";
				floatValues = 
				[
					12f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.MaxSpeed";
					modifierType = "AdditiveMultiplier";
					value = 0.12;
				} : ConstantStatModifier
			];
		} : GameplayLogicPackage
	];
	OnLooted += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						statusEffect = "BaseStatusEffect.JustLootedIconicCWFromAirdrop";
					} : StatusEffectPrereq;
					fact = "iconic_jenkins_tendons_airdropped";
					value = 1;
				} : SetFactEffector
			];
		}
	];
	slotPartListPreset += 
	[
		{
			itemPartPreset = "Items.AdvancedJenkinsTendonsStatsShard";
		} : StatsShardSlotPart
	];
	CName cyberwareType = "IconicJenkinsTendons";
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "low_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier, 
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			value = 1.5f;
		} : ConstantStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "low_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier, 
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			value = 1.5f;
		} : ConstantStatModifier
	];
	nextUpgradeItem = "Items.IconicJenkinsTendonsUncommonPlus";
}

[ notQueryable ]
[ EP1 ]
IconicJenkinsTendonsUncommonPlus : IconicJenkinsTendonsUncommon
{
	quality = "Quality.UncommonPlus";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#94470";
				floatValues = 
				[
					13f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.MaxSpeed";
					modifierType = "AdditiveMultiplier";
					value = 0.13;
				} : ConstantStatModifier
			];
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.IconicJenkinsTendonsRare";
}

[ notQueryable ]
[ EP1 ]
IconicJenkinsTendonsRare : IconicJenkinsTendonsUncommon
{
	quality = "Quality.Rare";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#94470";
				floatValues = 
				[
					14f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.MaxSpeed";
					modifierType = "AdditiveMultiplier";
					value = 0.14;
				} : ConstantStatModifier
			];
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.IconicJenkinsTendonsRarePlus";
}

[ notQueryable ]
[ EP1 ]
IconicJenkinsTendonsRarePlus : IconicJenkinsTendonsUncommon
{
	quality = "Quality.RarePlus";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#94470";
				floatValues = 
				[
					15f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.MaxSpeed";
					modifierType = "AdditiveMultiplier";
					value = 0.15;
				} : ConstantStatModifier
			];
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.IconicJenkinsTendonsEpic";
}

[ notQueryable ]
[ EP1 ]
IconicJenkinsTendonsEpic : IconicJenkinsTendonsUncommon
{
	quality = "Quality.Epic";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#94470";
				floatValues = 
				[
					16f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.MaxSpeed";
					modifierType = "AdditiveMultiplier";
					value = 0.16;
				} : ConstantStatModifier
			];
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.IconicJenkinsTendonsEpicPlus";
}

[ notQueryable ]
[ EP1 ]
IconicJenkinsTendonsEpicPlus : IconicJenkinsTendonsUncommon
{
	quality = "Quality.EpicPlus";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#94470";
				floatValues = 
				[
					17f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.MaxSpeed";
					modifierType = "AdditiveMultiplier";
					value = 0.17;
				} : ConstantStatModifier
			];
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.IconicJenkinsTendonsLegendary";
}

[ notQueryable ]
[ EP1 ]
IconicJenkinsTendonsLegendary : IconicJenkinsTendonsUncommon
{
	quality = "Quality.Legendary";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#94470";
				floatValues = 
				[
					18f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.MaxSpeed";
					modifierType = "AdditiveMultiplier";
					value = 0.18;
				} : ConstantStatModifier
			];
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.IconicJenkinsTendonsLegendaryPlus";
}

[ notQueryable ]
[ EP1 ]
IconicJenkinsTendonsLegendaryPlus : IconicJenkinsTendonsUncommon
{
	quality = "Quality.LegendaryPlus";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#94470";
				floatValues = 
				[
					19f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.MaxSpeed";
					modifierType = "AdditiveMultiplier";
					value = 0.19;
				} : ConstantStatModifier
			];
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.IconicJenkinsTendonsLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
IconicJenkinsTendonsLegendaryPlusPlus : IconicJenkinsTendonsUncommon
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#94470";
				floatValues = 
				[
					20f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.MaxSpeed";
					modifierType = "AdditiveMultiplier";
					value = 0.20;
				} : ConstantStatModifier
			];
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "";
}

