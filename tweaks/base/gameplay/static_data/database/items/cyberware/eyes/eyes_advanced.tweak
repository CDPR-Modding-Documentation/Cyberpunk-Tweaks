package Items
using RTDB, BaseStats, Perks, Prereqs, Price, Effectors, BaseStatusEffect

[ notQueryable ]
AdvancedKiroshiOptics : KiroshiOptics
{
	quality = "Quality.Common";
	upgradeCostMult = 0.5f;
	blueprint = "Items.GenericShardableCyberwareBlueprint";
	usesVariants = true;
	statModifiers += 
	[
		"Items.ItemArmorToArmor", {
			statType = "BaseStats.Protection";
			modifierType = "Additive";
			refStat = "BaseStats.Armor";
			opSymbol = "*";
			value = 1.0f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity1Cost"
	];
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.HasCybereye";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.HasLinkToBountySystem";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.CanUseZoom";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
		} : GameplayLogicPackage
	];
	slotPartListPreset = 
	[
		"Items.GenericItemRootPreset", {
			itemPartPreset = "Items.AdvancedKiroshiOpticsStatsShard";
		} : StatsShardSlotPart
	];
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "low_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "low_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsPlus";
}

AdvancedKiroshiOpticsStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.StealthHitDamageBonus", "Modifiers.BonusRicochetDamage", "Modifiers.BonusRicochetDamageQualityToggle", "Modifiers.BonusQuickHackDamage", "Modifiers.BonusQuickHackDamageToggle"
	];
}

AdvancedKiroshiOpticsPlus : AdvancedKiroshiOptics
{
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsUncommon";
}

[ notQueryable ]
AdvancedKiroshiOpticsUncommon : AdvancedKiroshiOptics
{
	quality = "Quality.Uncommon";
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsRare";
}

[ notQueryable ]
AdvancedKiroshiOpticsRare : AdvancedKiroshiOptics
{
	quality = "Quality.Rare";
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsEpic";
}

[ notQueryable ]
AdvancedKiroshiOpticsEpic : AdvancedKiroshiOptics
{
	quality = "Quality.Epic";
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsLegendary";
}

[ notQueryable ]
AdvancedKiroshiOpticsLegendary : AdvancedKiroshiOptics
{
	quality = "Quality.Legendary";
	nextUpgradeItem = "";
}

[ notQueryable ]
AdvancedKiroshiOptics_q001_1 : AdvancedKiroshiOpticsBareCommon
{
	tags += 
	[
		"MustBeWearableToPurchase"
	];
	buyPrice += 
	[
		"Price.PostCyberwareTutorialPrice"
	];
	sellPrice = [];
}

[ notQueryable ]
AdvancedKiroshiOptics_q001_2 : AdvancedKiroshiOptics
{
	tags += 
	[
		"MustBeWearableToPurchase"
	];
	buyPrice += 
	[
		"Price.PostCyberwareTutorialPrice"
	];
	sellPrice = [];
}

[ notQueryable ]
AdvancedKiroshiOptics_q001_3 : AdvancedKiroshiOptics
{
	tags += 
	[
		"MustBeWearableToPurchase"
	];
	buyPrice += 
	[
		"Price.PostCyberwareTutorialPrice"
	];
	sellPrice = [];
}

[ notQueryable ]
AdvancedKiroshiOptics_Tutorial_CommonPlus : AdvancedKiroshiOpticsSensorCommonPlus
{
	tags += 
	[
		"MustBeWearableToPurchase"
	];
	buyPrice += 
	[
		"Price.PostCyberwareTutorialPrice"
	];
	sellPrice = [];
}

[ notQueryable ]
AdvancedKiroshiOptics_Tutorial_Uncommon : AdvancedKiroshiOpticsSensor_Uncommon
{
	tags += 
	[
		"MustBeWearableToPurchase"
	];
	buyPrice += 
	[
		"Price.PostCyberwareTutorialPrice"
	];
	sellPrice = [];
}

[ notQueryable ]
AdvancedKiroshiOptics_Tutorial_UncommonPlus : AdvancedKiroshiOpticsSensorUncommonPlus
{
	tags += 
	[
		"MustBeWearableToPurchase"
	];
	buyPrice += 
	[
		"Price.PostCyberwareTutorialPrice"
	];
	sellPrice = [];
}

[ notQueryable ]
AdvancedKiroshiOptics_Tutorial_Rare : AdvancedKiroshiOpticsSensorRare
{
	tags += 
	[
		"MustBeWearableToPurchase"
	];
	buyPrice += 
	[
		"Price.PostCyberwareTutorialPrice"
	];
	sellPrice = [];
}

[ notQueryable ]
AdvancedKiroshiOptics_Tutorial_RarePlus : AdvancedKiroshiOpticsSensorRarePlus
{
	tags += 
	[
		"MustBeWearableToPurchase"
	];
	buyPrice += 
	[
		"Price.PostCyberwareTutorialPrice"
	];
	sellPrice = [];
}

[ notQueryable ]
AdvancedKiroshiOptics_Tutorial_Epic : AdvancedKiroshiOpticsSensorEpic
{
	tags += 
	[
		"MustBeWearableToPurchase"
	];
	buyPrice += 
	[
		"Price.PostCyberwareTutorialPrice"
	];
	sellPrice = [];
}

[ notQueryable ]
AdvancedKiroshiOptics_Tutorial_EpicPlus : AdvancedKiroshiOpticsSensorEpicPlus
{
	tags += 
	[
		"MustBeWearableToPurchase"
	];
	buyPrice += 
	[
		"Price.PostCyberwareTutorialPrice"
	];
	sellPrice = [];
}

[ notQueryable ]
AdvancedKiroshiOptics_Tutorial_Legendary : AdvancedKiroshiOpticsSensorLegendary
{
	tags += 
	[
		"MustBeWearableToPurchase"
	];
	buyPrice += 
	[
		"Price.PostCyberwareTutorialPrice"
	];
	sellPrice = [];
}

[ notQueryable ]
AdvancedKiroshiOptics_Tutorial_LegendaryPlus : AdvancedKiroshiOpticsSensorLegendaryPlus
{
	tags += 
	[
		"MustBeWearableToPurchase"
	];
	buyPrice += 
	[
		"Price.PostCyberwareTutorialPrice"
	];
	sellPrice = [];
}

[ notQueryable ]
[ EP1 ]
AdvancedKiroshiOptics_Tutorial_LegendaryPlusPlus : AdvancedKiroshiOpticsSensorLegendaryPlusPlus
{
	tags += 
	[
		"MustBeWearableToPurchase"
	];
	buyPrice += 
	[
		"Price.PostCyberwareTutorialPrice"
	];
	sellPrice = [];
}

[ notQueryable ]
AdvancedKiroshiOpticsPiercingBase : AdvancedKiroshiOptics
{
	displayName = "LocKey#93485";
	iconPath = "cw_eyes_4eye";
	statModifiers += 
	[
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.TechnicalAbility";
			refObject = "Player";
			opSymbol = "*";
			value = 0.5f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity2Cost"
	];
	slotPartListPreset = 
	[
		"Items.GenericItemRootPreset", {
			itemPartPreset = "Items.AdvancedKiroshiOpticsPiercingStatsShard";
		} : StatsShardSlotPart
	];
}

AdvancedKiroshiOpticsPiercingStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.ADSSpeedPercentBonus", "Modifiers.RecoilPercentBonus", "Modifiers.RecoilPercentBonusQualityToggle", "Modifiers.HeadshotDamageMultiplier", "Modifiers.HeadshotDamageMultiplierToggle"
	];
}

AdvancedKiroshiOpticsPiercingCommon : AdvancedKiroshiOpticsPiercingBase
{
	quality = "Quality.Common";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.TechPierceHighlightsEnabled";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanAngle";
					modifierType = "Additive";
					value = 10.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanRange";
					modifierType = "Additive";
					value = 15.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93487";
				floatValues = 
				[
					10f, 15f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 2.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93490";
				floatValues = 
				[
					4f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsPiercingCommonPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsPiercingCommonPlus : AdvancedKiroshiOpticsPiercingBase
{
	quality = "Quality.CommonPlus";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.TechPierceHighlightsEnabled";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanAngle";
					modifierType = "Additive";
					value = 11.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanRange";
					modifierType = "Additive";
					value = 18.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93487";
				floatValues = 
				[
					11f, 18f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 2.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93490";
				floatValues = 
				[
					4f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsPiercingUncommon";
}

AdvancedKiroshiOpticsPiercingUncommon : AdvancedKiroshiOpticsPiercingBase
{
	quality = "Quality.Uncommon";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.TechPierceHighlightsEnabled";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanAngle";
					modifierType = "Additive";
					value = 13.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanRange";
					modifierType = "Additive";
					value = 23.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93487";
				floatValues = 
				[
					13f, 23f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsPiercingUncommonPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsPiercingUncommonPlus : AdvancedKiroshiOpticsPiercingBase
{
	quality = "Quality.UncommonPlus";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.TechPierceHighlightsEnabled";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanAngle";
					modifierType = "Additive";
					value = 14.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanRange";
					modifierType = "Additive";
					value = 26.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93487";
				floatValues = 
				[
					14f, 26f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsPiercingRare";
}

AdvancedKiroshiOpticsPiercingRare : AdvancedKiroshiOpticsPiercingBase
{
	quality = "Quality.Rare";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.TechPierceHighlightsEnabled";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanAngle";
					modifierType = "Additive";
					value = 16.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanRange";
					modifierType = "Additive";
					value = 31.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93487";
				floatValues = 
				[
					16f, 31f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsPiercingRarePlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsPiercingRarePlus : AdvancedKiroshiOpticsPiercingBase
{
	quality = "Quality.RarePlus";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.TechPierceHighlightsEnabled";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanAngle";
					modifierType = "Additive";
					value = 17.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanRange";
					modifierType = "Additive";
					value = 34.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93487";
				floatValues = 
				[
					17f, 34f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsPiercingEpic";
}

AdvancedKiroshiOpticsPiercingEpic : AdvancedKiroshiOpticsPiercingBase
{
	quality = "Quality.Epic";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.TechPierceHighlightsEnabled";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanAngle";
					modifierType = "Additive";
					value = 19.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanRange";
					modifierType = "Additive";
					value = 39.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93487";
				floatValues = 
				[
					19f, 39f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 4.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					8f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsPiercingEpicPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsPiercingEpicPlus : AdvancedKiroshiOpticsPiercingBase
{
	quality = "Quality.EpicPlus";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.TechPierceHighlightsEnabled";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanAngle";
					modifierType = "Additive";
					value = 20.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanRange";
					modifierType = "Additive";
					value = 42.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93487";
				floatValues = 
				[
					20f, 42f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 4.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					8f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsPiercingLegendary";
}

AdvancedKiroshiOpticsPiercingLegendary : AdvancedKiroshiOpticsPiercingBase
{
	quality = "Quality.Legendary";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.TechPierceHighlightsEnabled";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanAngle";
					modifierType = "Additive";
					value = 22.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanRange";
					modifierType = "Additive";
					value = 47.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93487";
				floatValues = 
				[
					22f, 47f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsPiercingLegendaryPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsPiercingLegendaryPlus : AdvancedKiroshiOpticsPiercingBase
{
	quality = "Quality.LegendaryPlus";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.TechPierceHighlightsEnabled";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanAngle";
					modifierType = "Additive";
					value = 23.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanRange";
					modifierType = "Additive";
					value = 50.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93487";
				floatValues = 
				[
					23f, 50f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsPiercingLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedKiroshiOpticsPiercingLegendaryPlusPlus : AdvancedKiroshiOpticsPiercingBase
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.TechPierceHighlightsEnabled";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanAngle";
					modifierType = "Additive";
					value = 24.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.KiroshiPierceScanRange";
					modifierType = "Additive";
					value = 53.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93487";
				floatValues = 
				[
					24f, 53f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "";
}

[ notQueryable ]
AdvancedKiroshiOpticsSensorBase : AdvancedKiroshiOptics
{
	displayName = "LocKey#93491";
	iconPath = "cw_eyes_2eye";
	statModifiers += 
	[
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Intelligence";
			refObject = "Player";
			opSymbol = "*";
			value = 0.05f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity2Cost"
	];
	slotPartListPreset = 
	[
		"Items.GenericItemRootPreset", {
			itemPartPreset = "Items.AdvancedKiroshiOpticsSensorStatsShard";
		} : StatsShardSlotPart
	];
}

AdvancedKiroshiOpticsSensorStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.StealthHitDamageBonus", "Modifiers.BonusQuickHackDamage", "Modifiers.BonusQuickHackDamageQualityToggle", "Modifiers.HeadshotDamageMultiplier", "Modifiers.HeadshotDamageMultiplierToggle"
	];
}

AdvancedKiroshiOpticsSensorCommon : AdvancedKiroshiOpticsSensorBase
{
	quality = "Quality.Common";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 15f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93492";
				floatValues = 
				[
					15f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 2.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93490";
				floatValues = 
				[
					4f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsSensorCommonPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsSensorCommonPlus : AdvancedKiroshiOpticsSensorBase
{
	quality = "Quality.CommonPlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 17f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93492";
				floatValues = 
				[
					17f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 2.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93490";
				floatValues = 
				[
					4f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsSensor_Uncommon";
}

AdvancedKiroshiOpticsSensor_Uncommon : AdvancedKiroshiOpticsSensorBase
{
	quality = "Quality.Uncommon";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 20f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93492";
				floatValues = 
				[
					20f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsSensorUncommonPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsSensorUncommonPlus : AdvancedKiroshiOpticsSensorBase
{
	quality = "Quality.UncommonPlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 22f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93492";
				floatValues = 
				[
					22f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsSensorRare";
}

AdvancedKiroshiOpticsSensorRare : AdvancedKiroshiOpticsSensorBase
{
	quality = "Quality.Rare";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 25f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93492";
				floatValues = 
				[
					25f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsSensorRarePlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsSensorRarePlus : AdvancedKiroshiOpticsSensorBase
{
	quality = "Quality.RarePlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 27f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93492";
				floatValues = 
				[
					27f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsSensorEpic";
}

AdvancedKiroshiOpticsSensorEpic : AdvancedKiroshiOpticsSensorBase
{
	quality = "Quality.Epic";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 30f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93492";
				floatValues = 
				[
					30f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 4.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					8f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsSensorEpicPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsSensorEpicPlus : AdvancedKiroshiOpticsSensorBase
{
	quality = "Quality.EpicPlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 32f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93492";
				floatValues = 
				[
					32f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 4.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					8f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsSensorLegendary";
}

AdvancedKiroshiOpticsSensorLegendary : AdvancedKiroshiOpticsSensorBase
{
	quality = "Quality.Legendary";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 35f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93492";
				floatValues = 
				[
					35f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsSensorLegendaryPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsSensorLegendaryPlus : AdvancedKiroshiOpticsSensorBase
{
	quality = "Quality.LegendaryPlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 37f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93492";
				floatValues = 
				[
					37f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsSensorLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedKiroshiOpticsSensorLegendaryPlusPlus : AdvancedKiroshiOpticsSensorBase
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 39f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93492";
				floatValues = 
				[
					39f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "";
}

[ notQueryable ]
AdvancedKiroshiOpticsHunterBase : AdvancedKiroshiOptics
{
	displayName = "LocKey#93493";
	iconPath = "cw_eyes_2eye";
	statModifiers += 
	[
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Reflexes";
			refObject = "Player";
			opSymbol = "*";
			value = 0.1f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity2Cost"
	];
	slotPartListPreset = 
	[
		"Items.GenericItemRootPreset", {
			itemPartPreset = "Items.AdvancedKiroshiOpticsHunterStatsShard";
		} : StatsShardSlotPart
	];
}

AdvancedKiroshiOpticsHunterStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.ExplosionDamagePercentBonus", "Modifiers.BonusRicochetDamage", "Modifiers.BonusRicochetDamageQualityToggle", "Modifiers.GrenadesChargesRegenMult", "Modifiers.GrenadesChargesRegenMultToggle"
	];
}

AdvancedKiroshiOpticsHunterCommon : AdvancedKiroshiOpticsHunterBase
{
	quality = "Quality.Common";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 10f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93494";
				floatValues = 
				[
					10f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 2.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93490";
				floatValues = 
				[
					4f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsHunterCommonPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsHunterCommonPlus : AdvancedKiroshiOpticsHunterBase
{
	quality = "Quality.CommonPlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 11.5f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93494";
				floatValues = 
				[
					11.5f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 2.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93490";
				floatValues = 
				[
					4f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsHunterUncommon";
}

AdvancedKiroshiOpticsHunterUncommon : AdvancedKiroshiOpticsHunterBase
{
	quality = "Quality.Uncommon";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 14f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93494";
				floatValues = 
				[
					14f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsHunterUncommonPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsHunterUncommonPlus : AdvancedKiroshiOpticsHunterBase
{
	quality = "Quality.UncommonPlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 15.5f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93494";
				floatValues = 
				[
					15.5f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsHunterRare";
}

AdvancedKiroshiOpticsHunterRare : AdvancedKiroshiOpticsHunterBase
{
	quality = "Quality.Rare";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 18f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93494";
				floatValues = 
				[
					18f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsHunterRarePlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsHunterRarePlus : AdvancedKiroshiOpticsHunterBase
{
	quality = "Quality.RarePlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 19.5f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93494";
				floatValues = 
				[
					19.5f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsHunterEpic";
}

AdvancedKiroshiOpticsHunterEpic : AdvancedKiroshiOpticsHunterBase
{
	quality = "Quality.Epic";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 22f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93494";
				floatValues = 
				[
					22f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 4.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					8f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsHunterEpicPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsHunterEpicPlus : AdvancedKiroshiOpticsHunterBase
{
	quality = "Quality.EpicPlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 23.5f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93494";
				floatValues = 
				[
					23.5f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 4.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					8f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsHunterLegendary";
}

AdvancedKiroshiOpticsHunterLegendary : AdvancedKiroshiOpticsHunterBase
{
	quality = "Quality.Legendary";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 26f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93494";
				floatValues = 
				[
					26f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsHunterLegendaryPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsHunterLegendaryPlus : AdvancedKiroshiOpticsHunterBase
{
	quality = "Quality.LegendaryPlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 27.5f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93494";
				floatValues = 
				[
					27.5f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsHunterLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedKiroshiOpticsHunterLegendaryPlusPlus : AdvancedKiroshiOpticsHunterBase
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 29f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93494";
				floatValues = 
				[
					29f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "";
}

[ notQueryable ]
AdvancedKiroshiOpticsWallhackBase : AdvancedKiroshiOptics
{
	displayName = "LocKey#93502";
	iconPath = "cw_eyes_4eye";
	upgradeCostMult = 1.0f;
	statModifiers += 
	[
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Cool";
			refObject = "Player";
			opSymbol = "*";
			value = 0.2f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity8Cost"
	];
	slotPartListPreset = 
	[
		"Items.GenericItemRootPreset", {
			itemPartPreset = "Items.AdvancedKiroshiOpticsWallhackStatsShard";
		} : StatsShardSlotPart
	];
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "mid_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "mid_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
}

AdvancedKiroshiOpticsWallhackStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.BonusRicochetDamage", "Modifiers.VisibilityReduction", "Modifiers.VisibilityReductionQualityToggle", "Modifiers.GrenadesChargesRegenMult", "Modifiers.GrenadesChargesRegenMultToggle"
	];
}

[ notQueryable ]
AdvancedKiroshiOpticsWallhackCommon : AdvancedKiroshiOpticsWallhackBase
{
	quality = "Quality.Common";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 7.5f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93501";
				floatValues = 
				[
					7.5f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 2.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93490";
				floatValues = 
				[
					4f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsWallhackCommonPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsWallhackCommonPlus : AdvancedKiroshiOpticsWallhackBase
{
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 8.5f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93501";
				floatValues = 
				[
					8.5f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 2.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93490";
				floatValues = 
				[
					4f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsWallhackUncommon";
}

[ notQueryable ]
AdvancedKiroshiOpticsWallhackUncommon : AdvancedKiroshiOpticsWallhackBase
{
	quality = "Quality.Uncommon";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 10f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93501";
				floatValues = 
				[
					10f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsWallhackUncommonPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsWallhackUncommonPlus : AdvancedKiroshiOpticsWallhackBase
{
	quality = "Quality.Uncommon";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 11f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93501";
				floatValues = 
				[
					11f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsWallhackRare";
}

AdvancedKiroshiOpticsWallhackRare : AdvancedKiroshiOpticsWallhackBase
{
	quality = "Quality.Rare";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 12.5f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93501";
				floatValues = 
				[
					12.5f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsWallhackRarePlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsWallhackRarePlus : AdvancedKiroshiOpticsWallhackBase
{
	quality = "Quality.RarePlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 13.5f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93501";
				floatValues = 
				[
					13.5f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsWallhackEpic";
}

AdvancedKiroshiOpticsWallhackEpic : AdvancedKiroshiOpticsWallhackBase
{
	quality = "Quality.Epic";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 15f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93501";
				floatValues = 
				[
					15f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 4.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					8f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsWallhackEpicPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsWallhackEpicPlus : AdvancedKiroshiOpticsWallhackBase
{
	quality = "Quality.EpicPlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 16f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93501";
				floatValues = 
				[
					16f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 4.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					8f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsWallhackLegendary";
}

AdvancedKiroshiOpticsWallhackLegendary : AdvancedKiroshiOpticsWallhackBase
{
	quality = "Quality.Legendary";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 17.5f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93501";
				floatValues = 
				[
					17.5f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsWallhackLegendaryPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsWallhackLegendaryPlus : AdvancedKiroshiOpticsWallhackBase
{
	quality = "Quality.LegendaryPlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 18.5f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93501";
				floatValues = 
				[
					18.5f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsWallhackLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedKiroshiOpticsWallhackLegendaryPlusPlus : AdvancedKiroshiOpticsWallhackBase
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 19.5f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93501";
				floatValues = 
				[
					19.5f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "";
}

[ notQueryable ]
AdvancedKiroshiOpticsCombinedBase : AdvancedKiroshiOptics
{
	displayName = "LocKey#93503";
	iconPath = "cw_eyes_3eye";
	upgradeCostMult = 1.0f;
	statModifiers += 
	[
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Strength";
			refObject = "Player";
			opSymbol = "*";
			value = 0.5f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity10Cost"
	];
	slotPartListPreset = 
	[
		"Items.GenericItemRootPreset", {
			itemPartPreset = "Items.AdvancedKiroshiOpticsCombinedStatsShard";
		} : StatsShardSlotPart
	];
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "mid_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "mid_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
}

AdvancedKiroshiOpticsCombinedStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.Health", "Modifiers.BonusPercentDamageToEnemiesAtFullHealth", "Modifiers.BonusPercentDamageToEnemiesAtFullHealthQualityToggle", "Modifiers.RamOnKill", "Modifiers.RamOnKillToggle"
	];
}

[ notQueryable ]
AdvancedKiroshiOpticsCombinedCommon : AdvancedKiroshiOpticsCombinedBase
{
	quality = "Quality.Common";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 7.5f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 15f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 10f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93504";
				floatValues = 
				[
					7.5f, 15f, 10f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 2.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93490";
				floatValues = 
				[
					4f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsCombinedCommonPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsCombinedCommonPlus : AdvancedKiroshiOpticsCombinedBase
{
	quality = "Quality.CommonPlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 8.5f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 17f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 11.5f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93504";
				floatValues = 
				[
					8.5f, 17f, 11.5f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 2.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93490";
				floatValues = 
				[
					4f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsCombinedUncommon";
}

[ notQueryable ]
AdvancedKiroshiOpticsCombinedUncommon : AdvancedKiroshiOpticsCombinedBase
{
	quality = "Quality.Uncommon";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 10f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 20f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 14f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93504";
				floatValues = 
				[
					10f, 20f, 14f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsCombinedUncommonPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsCombinedUncommonPlus : AdvancedKiroshiOpticsCombinedBase
{
	quality = "Quality.UncommonPlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 11f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 22f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 15.5f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93504";
				floatValues = 
				[
					11f, 22f, 15.5f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsCombinedRare";
}

[ notQueryable ]
AdvancedKiroshiOpticsCombinedRare : AdvancedKiroshiOpticsCombinedBase
{
	quality = "Quality.Rare";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 12.5f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 25f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 18f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93504";
				floatValues = 
				[
					12.5f, 25f, 18f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsCombinedRarePlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsCombinedRarePlus : AdvancedKiroshiOpticsCombinedBase
{
	quality = "Quality.RarePlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 13.5f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 27f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 19.5f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93504";
				floatValues = 
				[
					13.5f, 27f, 19.5f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsCombinedEpic";
}

AdvancedKiroshiOpticsCombinedEpic : AdvancedKiroshiOpticsCombinedBase
{
	quality = "Quality.Epic";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 15f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 30f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 22f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93504";
				floatValues = 
				[
					15f, 30f, 22f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 4.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					8f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsCombinedEpicPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsCombinedEpicPlus : AdvancedKiroshiOpticsCombinedBase
{
	quality = "Quality.EpicPlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 16f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 32f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 23.5f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93504";
				floatValues = 
				[
					16f, 32f, 23.5f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 4.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					8f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsCombinedLegendary";
}

AdvancedKiroshiOpticsCombinedLegendary : AdvancedKiroshiOpticsCombinedBase
{
	quality = "Quality.Legendary";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 17.5f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 35f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 26f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93504";
				floatValues = 
				[
					17.5f, 35f, 26f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsCombinedLegendaryPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsCombinedLegendaryPlus : AdvancedKiroshiOpticsCombinedBase
{
	quality = "Quality.LegendaryPlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 18.5f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 37f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 27.5f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93504";
				floatValues = 
				[
					18.5f, 37f, 27.5f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsCombinedLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedKiroshiOpticsCombinedLegendaryPlusPlus : AdvancedKiroshiOpticsCombinedBase
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						nestedPrereqs = 
						[
							{
								checkType = "CheckType.Tag";
								tagToCheck = "KiroshiCooldown";
							} : Prereqs.StatusEffectAbsentPrereq, 
							{
								stateName = "Focus";
								isInState = true;
							} : Prereqs.IsInFocusModePSMPrereq
						];
					} : ANDPrereq;
					statusEffect = 
					{
						packages += 
						[
							{
								effectors = 
								[
									{
										maxDistance = 19.5f;
										searchFilter = "TechPreviewNPC";
										targetingSet = "Frustum";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 39f;
										highlightVisible = true;
										searchFilter = "Sensor";
									} : KiroshiHighlightEffector, 
									{
										maxDistance = 29f;
										onlyClosestToCrosshair = true;
										highlightVisible = true;
										searchFilter = "Device";
									} : KiroshiHighlightEffector
								];
							} : GameplayLogicPackage
						];
					} : KiroshiHighlightsBase;
					removeWithEffector = false;
				} : ApplyStatusEffectEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#93504";
				floatValues = 
				[
					19.5f, 39f, 29f, 60f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93489";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.BodyHealth"
	];
	nextUpgradeItem = "";
}

[ notQueryable ]
AdvancedKiroshiOpticsBareBase : AdvancedKiroshiOptics
{
	displayName = "LocKey#93505";
	iconPath = "cw_eyes_kiroshioptics";
	statModifiers += 
	[
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Cool";
			refObject = "Player";
			opSymbol = "*";
			value = 0.2f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity1Cost"
	];
	slotPartListPreset = 
	[
		"Items.GenericItemRootPreset", {
			itemPartPreset = "Items.AdvancedKiroshiOpticsBareStatsShard";
		} : StatsShardSlotPart
	];
}

AdvancedKiroshiOpticsBareStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.Health", "Modifiers.HeadshotDamageMultiplier", "Modifiers.HeadshotDamageMultiplierQualityToggle", "Modifiers.StealthHitDamageBonus", "Modifiers.StealthHitDamageBonusToggle"
	];
}

AdvancedKiroshiOpticsBareCommon : AdvancedKiroshiOpticsBareBase
{
	quality = "Quality.Common";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CameraDetectionSpeedReduction";
					modifierType = "Additive";
					value = 0.2f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93891";
				floatValues = 
				[
					20f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 2.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93507";
				floatValues = 
				[
					4f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsBareCommonPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsBareCommonPlus : AdvancedKiroshiOpticsBareBase
{
	quality = "Quality.CommonPlus";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CameraDetectionSpeedReduction";
					modifierType = "Additive";
					value = 0.22f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93891";
				floatValues = 
				[
					22f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 2.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93507";
				floatValues = 
				[
					4f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsBareUncommon";
}

AdvancedKiroshiOpticsBareUncommon : AdvancedKiroshiOpticsBareBase
{
	quality = "Quality.Uncommon";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CameraDetectionSpeedReduction";
					modifierType = "Additive";
					value = 0.25f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93891";
				floatValues = 
				[
					25f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93506";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsBareUncommonPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsBareUncommonPlus : AdvancedKiroshiOpticsBareBase
{
	quality = "Quality.UncommonPlus";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CameraDetectionSpeedReduction";
					modifierType = "Additive";
					value = 0.27f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93891";
				floatValues = 
				[
					27f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93506";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsBareRare";
}

AdvancedKiroshiOpticsBareRare : AdvancedKiroshiOpticsBareBase
{
	quality = "Quality.Rare";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CameraDetectionSpeedReduction";
					modifierType = "Additive";
					value = 0.3f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93891";
				floatValues = 
				[
					30f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93506";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsBareRarePlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsBareRarePlus : AdvancedKiroshiOpticsBareBase
{
	quality = "Quality.RarePlus";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CameraDetectionSpeedReduction";
					modifierType = "Additive";
					value = 0.32f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93891";
				floatValues = 
				[
					32f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 3.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93506";
				floatValues = 
				[
					6f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsBareEpic";
}

AdvancedKiroshiOpticsBareEpic : AdvancedKiroshiOpticsBareBase
{
	quality = "Quality.Epic";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CameraDetectionSpeedReduction";
					modifierType = "Additive";
					value = 0.35f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93891";
				floatValues = 
				[
					35f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 4.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93506";
				floatValues = 
				[
					8f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsBareEpicPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsBareEpicPlus : AdvancedKiroshiOpticsBareBase
{
	quality = "Quality.EpicPlus";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CameraDetectionSpeedReduction";
					modifierType = "Additive";
					value = 0.37f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93891";
				floatValues = 
				[
					37f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 4.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93506";
				floatValues = 
				[
					8f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsBareLegendary";
}

AdvancedKiroshiOpticsBareLegendary : AdvancedKiroshiOpticsBareBase
{
	quality = "Quality.Legendary";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CameraDetectionSpeedReduction";
					modifierType = "Additive";
					value = 0.4f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93891";
				floatValues = 
				[
					40f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93506";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsBareLegendaryPlus";
}

[ notQueryable ]
AdvancedKiroshiOpticsBareLegendaryPlus : AdvancedKiroshiOpticsBareBase
{
	quality = "Quality.LegendaryPlus";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CameraDetectionSpeedReduction";
					modifierType = "Additive";
					value = 0.42f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93891";
				floatValues = 
				[
					42f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93506";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedKiroshiOpticsBareLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedKiroshiOpticsBareLegendaryPlusPlus : AdvancedKiroshiOpticsBareBase
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CameraDetectionSpeedReduction";
					modifierType = "Additive";
					value = 0.44f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93891";
				floatValues = 
				[
					44f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93506";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "";
}

[ notQueryable ]
[ EP1 ]
Iconic_AdvancedKiroshiOpticsBareBase : AdvancedKiroshiOptics
{
	displayName = "LocKey#94426";
	iconPath = "cw_eyes_critical_iconic";
	tags += 
	[
		"IllegalItem"
	];
	upgradeCostMult = 1.5f;
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			value = 1.5f;
		} : ConstantStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			value = 1.5f;
		} : ConstantStatModifier
	];
	variants = 
	[
		"Variants.Humanity30Cost"
	];
	statModifiers += 
	[
		{
			statType = "BaseStats.IsItemIconic";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier
	];
	slotPartListPreset = 
	[
		"Items.GenericItemRootPreset", {
			itemPartPreset = "Items.AdvancedKiroshiOpticsBareStatsShard";
		} : StatsShardSlotPart
	];
	OnLooted += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						statusEffect = "BaseStatusEffect.JustLootedIconicCWFromAirdrop";
					} : StatusEffectPrereq;
					fact = "iconic_kiroshi_bare_airdropped";
					value = 1;
				} : SetFactEffector
			];
		}
	];
}

[ notQueryable ]
[ EP1 ]
Iconic_AdvancedKiroshiOpticsBareEpic : Iconic_AdvancedKiroshiOpticsBareBase
{
	quality = "Quality.Epic";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CritChance";
					modifierType = "Additive";
					value = 25f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#40769";
				intValues = 
				[
					25f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93506";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.Iconic_AdvancedKiroshiOpticsBareEpicPlus";
}

[ notQueryable ]
[ EP1 ]
Iconic_AdvancedKiroshiOpticsBareEpicPlus : Iconic_AdvancedKiroshiOpticsBareBase
{
	quality = "Quality.EpicPlus";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CritChance";
					modifierType = "Additive";
					value = 27f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#40769";
				intValues = 
				[
					27f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93506";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.Iconic_AdvancedKiroshiOpticsBareLegendary";
}

[ notQueryable ]
[ EP1 ]
Iconic_AdvancedKiroshiOpticsBareLegendary : Iconic_AdvancedKiroshiOpticsBareBase
{
	quality = "Quality.Legendary";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CritChance";
					modifierType = "Additive";
					value = 30f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#40769";
				intValues = 
				[
					30f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93506";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.Iconic_AdvancedKiroshiOpticsBareLegendaryPlus";
}

[ notQueryable ]
[ EP1 ]
Iconic_AdvancedKiroshiOpticsBareLegendaryPlus : Iconic_AdvancedKiroshiOpticsBareBase
{
	quality = "Quality.LegendaryPlus";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CritChance";
					modifierType = "Additive";
					value = 32f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#40769";
				intValues = 
				[
					32f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93506";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.Iconic_AdvancedKiroshiOpticsBareLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
Iconic_AdvancedKiroshiOpticsBareLegendaryPlusPlus : Iconic_AdvancedKiroshiOpticsBareBase
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip += 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CritChance";
					modifierType = "Additive";
					value = 35f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#40769";
				intValues = 
				[
					35f
				];
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.KiroshiMaxZoomLevel";
					modifierType = "Additive";
					value = 5.0f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#93506";
				floatValues = 
				[
					10f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "";
}

