package Items
using RTDB, BaseStats, Perks, Prereqs, Price, Variants, ModifierGroups, Effectors, Attunements, BaseStatusEffect

[ notQueryable ]
AdvancedFrontalCortexModule : FrontalCortexModule
{
	usesVariants = true;
	blueprint = "Items.GenericShardableCyberwareBlueprint";
	slotPartListPreset = 
	[
		"Items.GenericItemRootPreset"
	];
	statModifiers += 
	[
		"Items.ItemArmorToArmor", {
			statType = "BaseStats.Protection";
			modifierType = "Additive";
			refStat = "BaseStats.Armor";
			opSymbol = "*";
			value = 1.0f;
		} : CombinedStatModifier
	];
}

AdvancedCamilloRamManagerEpic : AdvancedFrontalCortexModule
{
	string friendlyName = "CamilloRamManager";
	displayName = "LocKey#40788";
	localizedDescription = "LocKey#40789";
	iconPath = "cw_frontalcortex_memoryreplenishment";
	quality = "Quality.Epic";
	upgradeCostMult = 1.0f;
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			value = 1.25f;
		} : ConstantStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			value = 1.25f;
		} : ConstantStatModifier
	];
	statModifiers += 
	[
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Intelligence";
			refObject = "Player";
			opSymbol = "*";
			value = 2.0f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity8Cost"
	];
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Memory";
							statPoolValue = 15;
						} : StatPoolUpdate
					];
				} : MemoryReplenishmentEffector, 
				"Items.MemoryReplenishmentSFXEffector", "Items.MemoryReplenishmentCooldownEffector"
			];
			UIData = 
			{
				intValues = 
				[
					20, 15
				];
			} : MemoryReplenishmentUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		{
			UIData = 
			{
				localizedDescription = "LocKey#93182";
				floatValues = 
				[
					80
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceRamManagerCooldown"
	];
	slotPartListPreset += 
	[
		{
			itemPartPreset = "Items.AdvancedCamilloRamManagerStatsShard";
		} : StatsShardSlotPart
	];
	CName cyberwareType = "MemoryReplenishment";
	nextUpgradeItem = "Items.AdvancedCamilloRamManagerEpicPlus";
}

AdvancedCamilloRamManagerStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.BonusQuickHackDamage", "Modifiers.ElectricDamagePercentBonus", "Modifiers.ElectricDamagePercentBonusQualityToggle", "Modifiers.RamOnKill", "Modifiers.RamOnKillToggle"
	];
}

[ notQueryable ]
AdvancedCamilloRamManagerEpicPlus : AdvancedCamilloRamManagerEpic
{
	quality = "Quality.EpicPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Memory";
							statPoolValue = 18;
						} : StatPoolUpdate
					];
				} : MemoryReplenishmentEffector, 
				"Items.MemoryReplenishmentSFXEffector", "Items.MemoryReplenishmentCooldownEffector"
			];
			UIData = 
			{
				intValues = 
				[
					20, 18
				];
			} : MemoryReplenishmentUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		{
			UIData = 
			{
				localizedDescription = "LocKey#93182";
				floatValues = 
				[
					80
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceRamManagerCooldown"
	];
	nextUpgradeItem = "Items.AdvancedCamilloRamManagerLegendary";
}

AdvancedCamilloRamManagerLegendary : AdvancedCamilloRamManagerEpic
{
	quality = "Quality.Legendary";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Memory";
							statPoolValue = 23;
						} : StatPoolUpdate
					];
				} : MemoryReplenishmentEffector, 
				"Items.MemoryReplenishmentSFXEffector", "Items.MemoryReplenishmentCooldownEffector"
			];
			UIData = 
			{
				intValues = 
				[
					20, 23
				];
			} : MemoryReplenishmentUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		{
			UIData = 
			{
				localizedDescription = "LocKey#93182";
				floatValues = 
				[
					80
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceRamManagerCooldown"
	];
	nextUpgradeItem = "Items.AdvancedCamilloRamManagerLegendaryPlus";
}

[ notQueryable ]
AdvancedCamilloRamManagerLegendaryPlus : AdvancedCamilloRamManagerEpic
{
	quality = "Quality.LegendaryPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Memory";
							statPoolValue = 26;
						} : StatPoolUpdate
					];
				} : MemoryReplenishmentEffector, 
				"Items.MemoryReplenishmentSFXEffector", "Items.MemoryReplenishmentCooldownEffector"
			];
			UIData = 
			{
				intValues = 
				[
					20, 26
				];
			} : MemoryReplenishmentUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		{
			UIData = 
			{
				localizedDescription = "LocKey#93182";
				floatValues = 
				[
					80
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceRamManagerCooldown"
	];
	nextUpgradeItem = "Items.AdvancedCamilloRamManagerLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedCamilloRamManagerLegendaryPlusPlus : AdvancedCamilloRamManagerEpic
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Memory";
							statPoolValue = 30;
						} : StatPoolUpdate
					];
				} : MemoryReplenishmentEffector, 
				"Items.MemoryReplenishmentSFXEffector", "Items.MemoryReplenishmentCooldownEffector"
			];
			UIData = 
			{
				intValues = 
				[
					20, 30
				];
			} : MemoryReplenishmentUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		{
			UIData = 
			{
				localizedDescription = "LocKey#93182";
				floatValues = 
				[
					80
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceRamManagerCooldown"
	];
	nextUpgradeItem = "";
}

[ notQueryable ]
[ EP1 ]
IconicCamilloRamManagerEpic : AdvancedCamilloRamManagerEpic
{
	displayName = "LocKey#94427";
	localizedDescription = "LocKey#40789";
	tags += 
	[
		"IllegalItem"
	];
	upgradeCostMult = 2.0f;
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			value = 2f;
		} : ConstantStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			value = 2f;
		} : ConstantStatModifier
	];
	statModifiers = 
	[
		"Items.ItemArmorToArmor", {
			statType = "BaseStats.Protection";
			modifierType = "Additive";
			refStat = "BaseStats.Armor";
			opSymbol = "*";
			value = 1.0f;
		} : CombinedStatModifier, 
		{
			statType = "BaseStats.IsItemIconic";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Intelligence";
			refObject = "Player";
			opSymbol = "*";
			value = 3.0f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity40Cost"
	];
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Memory";
							statPoolValue = 35;
						} : StatPoolUpdate
					];
				} : MemoryReplenishmentEffector, 
				"Items.MemoryReplenishmentSFXEffector", "Items.MemoryReplenishmentIconicEpicCooldownEffector"
			];
			UIData = 
			{
				intValues = 
				[
					20, 35
				];
			} : MemoryReplenishmentUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		{
			UIData = 
			{
				localizedDescription = "LocKey#93182";
				floatValues = 
				[
					95
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceIconicRamManagerCooldown"
	];
	OnLooted += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						statusEffect = "BaseStatusEffect.JustLootedIconicCWFromAirdrop";
					} : StatusEffectPrereq;
					fact = "iconic_camillio_ram_manager_airdropped";
					value = 1;
				} : SetFactEffector
			];
		}
	];
	nextUpgradeItem = "Items.IconicCamilloRamManagerEpicPlus";
}

[ notQueryable ]
[ EP1 ]
IconicCamilloRamManagerEpicPlus : IconicCamilloRamManagerEpic
{
	quality = "Quality.EpicPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Memory";
							statPoolValue = 38;
						} : StatPoolUpdate
					];
				} : MemoryReplenishmentEffector, 
				"Items.MemoryReplenishmentSFXEffector", "Items.MemoryReplenishmentIconicEpicPlusCooldownEffector"
			];
			UIData = 
			{
				intValues = 
				[
					20, 38
				];
			} : MemoryReplenishmentUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		{
			UIData = 
			{
				localizedDescription = "LocKey#93182";
				floatValues = 
				[
					90
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceIconicRamManagerCooldown"
	];
	nextUpgradeItem = "Items.IconicCamilloRamManagerLegendary";
}

[ notQueryable ]
[ EP1 ]
IconicCamilloRamManagerLegendary : IconicCamilloRamManagerEpic
{
	quality = "Quality.Legendary";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Memory";
							statPoolValue = 40;
						} : StatPoolUpdate
					];
				} : MemoryReplenishmentEffector, 
				"Items.MemoryReplenishmentSFXEffector", "Items.MemoryReplenishmentIconicLegendaryCooldownEffector"
			];
			UIData = 
			{
				intValues = 
				[
					20, 40
				];
			} : MemoryReplenishmentUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		{
			UIData = 
			{
				localizedDescription = "LocKey#93182";
				floatValues = 
				[
					85
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceIconicRamManagerCooldown"
	];
	nextUpgradeItem = "Items.IconicCamilloRamManagerLegendaryPlus_1";
}

[ notQueryable ]
[ EP1 ]
IconicCamilloRamManagerLegendaryPlus_1 : IconicCamilloRamManagerEpic
{
	quality = "Quality.LegendaryPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Memory";
							statPoolValue = 42;
						} : StatPoolUpdate
					];
				} : MemoryReplenishmentEffector, 
				"Items.MemoryReplenishmentSFXEffector", "Items.MemoryReplenishmentIconicLegendaryPlusCooldownEffector"
			];
			UIData = 
			{
				intValues = 
				[
					20, 42
				];
			} : MemoryReplenishmentUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		{
			UIData = 
			{
				localizedDescription = "LocKey#93182";
				floatValues = 
				[
					80
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceIconicRamManagerCooldown"
	];
	nextUpgradeItem = "Items.IconicCamilloRamManagerLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
IconicCamilloRamManagerLegendaryPlusPlus : IconicCamilloRamManagerEpic
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Memory";
							statPoolValue = 45;
						} : StatPoolUpdate
					];
				} : MemoryReplenishmentEffector, 
				"Items.MemoryReplenishmentSFXEffector", "Items.MemoryReplenishmentIconicLegendaryPlusPlusCooldownEffector"
			];
			UIData = 
			{
				intValues = 
				[
					20, 45
				];
			} : MemoryReplenishmentUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		{
			UIData = 
			{
				localizedDescription = "LocKey#93182";
				floatValues = 
				[
					75
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceIconicRamManagerCooldown"
	];
	nextUpgradeItem = "";
}

AdvancedExDiskRare : AdvancedFrontalCortexModule
{
	string friendlyName = "ExDisk";
	displayName = "LocKey#40776";
	localizedDescription = "LocKey#40777";
	iconPath = "cw_frontalcortex_braincapacitybooster";
	quality = "Quality.Rare";
	upgradeCostMult = 1.0f;
	statModifiers += 
	[
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Intelligence";
			refObject = "Player";
			opSymbol = "*";
			value = 0.05f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity10Cost"
	];
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 4;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackUploadTimeDecrease";
					modifierType = "Additive";
					value = 0.2f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					4
				];
				floatValues = 
				[
					20f
				];
			} : BrainCapacityBoosterUIData;
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	slotPartListPreset += 
	[
		{
			itemPartPreset = "Items.AdvancedExDiskStatsShard";
		} : StatsShardSlotPart
	];
	CName cyberwareType = "ExDisk";
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "mid_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "mid_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	nextUpgradeItem = "Items.AdvancedExDiskRarePlus";
}

AdvancedExDiskStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.Health", "Modifiers.HeadshotDamageMultiplier", "Modifiers.HeadshotDamageMultiplierQualityToggle", "Modifiers.ReloadSpeedPercentBonus", "Modifiers.ReloadSpeedPercentBonusToggle"
	];
}

[ notQueryable ]
AdvancedExDiskRarePlus : AdvancedExDiskRare
{
	quality = "Quality.RarePlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 4;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackUploadTimeDecrease";
					modifierType = "Additive";
					value = 0.23f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					4
				];
				floatValues = 
				[
					23f
				];
			} : BrainCapacityBoosterUIData;
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedExDiskEpic";
}

AdvancedExDiskEpic : AdvancedExDiskRare
{
	quality = "Quality.Epic";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 5;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackUploadTimeDecrease";
					modifierType = "Additive";
					value = 0.25f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					5
				];
				floatValues = 
				[
					25f
				];
			} : BrainCapacityBoosterUIData;
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedExDiskEpicPlus";
}

[ notQueryable ]
AdvancedExDiskEpicPlus : AdvancedExDiskRarePlus
{
	quality = "Quality.EpicPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 5;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackUploadTimeDecrease";
					modifierType = "Additive";
					value = 0.27f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					5
				];
				floatValues = 
				[
					27f
				];
			} : BrainCapacityBoosterUIData;
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedExDiskLegendary";
}

AdvancedExDiskLegendary : AdvancedExDiskRare
{
	quality = "Quality.Legendary";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 6;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackUploadTimeDecrease";
					modifierType = "Additive";
					value = 0.3f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					6
				];
				floatValues = 
				[
					30f
				];
			} : BrainCapacityBoosterUIData;
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedExDiskLegendaryPlus";
}

[ notQueryable ]
AdvancedExDiskLegendaryPlus : AdvancedExDiskRare
{
	quality = "Quality.LegendaryPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 6;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackUploadTimeDecrease";
					modifierType = "Additive";
					value = 0.32f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					6
				];
				floatValues = 
				[
					32f
				];
			} : BrainCapacityBoosterUIData;
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedExDiskLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedExDiskLegendaryPlusPlus : AdvancedExDiskRare
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 6;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackUploadTimeDecrease";
					modifierType = "Additive";
					value = 0.35f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					6
				];
				floatValues = 
				[
					35f
				];
			} : BrainCapacityBoosterUIData;
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "";
}

AdvancedMechatronicCoreCommon : AdvancedFrontalCortexModule
{
	displayName = "LocKey#40791";
	localizedDescription = "LocKey#40792";
	iconPath = "cw_frontalcortex_roboticcore";
	quality = "Quality.Common";
	upgradeCostMult = 0.5f;
	statModifiers += 
	[
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.TechnicalAbility";
			refObject = "Player";
			opSymbol = "*";
			value = 0.5f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity5Cost"
	];
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.BonusDamageAgainstMechanicals";
					modifierType = "Additive";
					value = 0.15;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					15
				];
			} : RoboticCoreUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}
	];
	slotPartListPreset += 
	[
		{
			itemPartPreset = "Items.AdvancedMechatronicCoreStatsShard";
		} : StatsShardSlotPart
	];
	CName cyberwareType = "RoboticCore";
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "low_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "low_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	nextUpgradeItem = "Items.AdvancedMechatronicCoreCommonPlus";
}

AdvancedMechatronicCoreStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.ExplosionDamagePercentBonus", "Modifiers.GrenadesChargesRegenMult", "Modifiers.GrenadesChargesRegenMultQualityToggle", "Modifiers.ExplosionResistance", "Modifiers.ExplosionResistanceToggle"
	];
}

[ notQueryable ]
AdvancedMechatronicCoreCommonPlus : AdvancedMechatronicCoreCommon
{
	quality = "Quality.CommonPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.BonusDamageAgainstMechanicals";
					modifierType = "Additive";
					value = 0.17;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					17
				];
			} : RoboticCoreUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}
	];
	nextUpgradeItem = "Items.AdvancedMechatronicCoreUncommon";
}

AdvancedMechatronicCoreUncommon : AdvancedMechatronicCoreCommon
{
	quality = "Quality.Uncommon";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.BonusDamageAgainstMechanicals";
					modifierType = "Additive";
					value = 0.2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					20
				];
			} : RoboticCoreUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}
	];
	nextUpgradeItem = "Items.AdvancedMechatronicCoreUncommonPlus";
}

[ notQueryable ]
AdvancedMechatronicCoreUncommonPlus : AdvancedMechatronicCoreCommonPlus
{
	quality = "Quality.UncommonPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.BonusDamageAgainstMechanicals";
					modifierType = "Additive";
					value = 0.22;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					22
				];
			} : RoboticCoreUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}
	];
	nextUpgradeItem = "Items.AdvancedMechatronicCoreRare";
}

AdvancedMechatronicCoreRare : AdvancedMechatronicCoreCommon
{
	quality = "Quality.Rare";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.BonusDamageAgainstMechanicals";
					modifierType = "Additive";
					value = 0.25;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					25
				];
			} : RoboticCoreUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "Items.AdvancedMechatronicCoreRarePlus";
}

[ notQueryable ]
AdvancedMechatronicCoreRarePlus : AdvancedMechatronicCoreCommonPlus
{
	quality = "Quality.RarePlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.BonusDamageAgainstMechanicals";
					modifierType = "Additive";
					value = 0.27;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					27
				];
			} : RoboticCoreUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "Items.AdvancedMechatronicCoreEpic";
}

AdvancedMechatronicCoreEpic : AdvancedMechatronicCoreCommon
{
	quality = "Quality.Epic";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.BonusDamageAgainstMechanicals";
					modifierType = "Additive";
					value = 0.3;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					30
				];
			} : RoboticCoreUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "Items.AdvancedMechatronicCoreEpicPlus";
}

[ notQueryable ]
AdvancedMechatronicCoreEpicPlus : AdvancedMechatronicCoreCommonPlus
{
	quality = "Quality.EpicPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.BonusDamageAgainstMechanicals";
					modifierType = "Additive";
					value = 0.32;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					32
				];
			} : RoboticCoreUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "Items.AdvancedMechatronicCoreLegendary";
}

AdvancedMechatronicCoreLegendary : AdvancedMechatronicCoreCommon
{
	quality = "Quality.Legendary";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.BonusDamageAgainstMechanicals";
					modifierType = "Additive";
					value = 0.35;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					35
				];
			} : RoboticCoreUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "Items.AdvancedMechatronicCoreLegendaryPlus";
}

[ notQueryable ]
AdvancedMechatronicCoreLegendaryPlus : AdvancedMechatronicCoreCommonPlus
{
	quality = "Quality.LegendaryPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.BonusDamageAgainstMechanicals";
					modifierType = "Additive";
					value = 0.37;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					37
				];
			} : RoboticCoreUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "Items.AdvancedMechatronicCoreLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedMechatronicCoreLegendaryPlusPlus : AdvancedMechatronicCoreCommonPlus
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.BonusDamageAgainstMechanicals";
					modifierType = "Additive";
					value = 0.4;
				} : ConstantStatModifier
			];
			UIData = 
			{
				intValues = 
				[
					40
				];
			} : RoboticCoreUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "";
}

AdvancedMemoryBoostUncommon : AdvancedFrontalCortexModule
{
	displayName = "LocKey#40785";
	localizedDescription = "LocKey#40786";
	iconPath = "cw_frontalcortex_memoryboost";
	quality = "Quality.Uncommon";
	upgradeCostMult = 1.5f;
	statModifiers += 
	[
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Intelligence";
			refObject = "Player";
			opSymbol = "*";
			value = 0.05f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity18Cost"
	];
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Memory";
							statPoolValue = 0.4f;
						} : StatPoolUpdate
					];
				} : Items.MemoryBoostEffector, 
				"Items.MemoryBoostSFXEffector"
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#87382";
				floatValues = 
				[
					0.4f
				];
			};
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}
	];
	slotPartListPreset += 
	[
		{
			itemPartPreset = "Items.AdvancedMemoryBoostStatsShard";
		} : StatsShardSlotPart
	];
	CName cyberwareType = "MemoryBoost";
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "high_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "high_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	nextUpgradeItem = "Items.AdvancedMemoryBoostUncommonPlus";
}

AdvancedMemoryBoostStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.StealthHitDamageBonus", "Modifiers.BonusQuickHackDamage", "Modifiers.BonusQuickHackDamageQualityToggle", "Modifiers.DamageOverTimePercentBonus", "Modifiers.DamageOverTimePercentBonusToggle"
	];
}

[ notQueryable ]
AdvancedMemoryBoostUncommonPlus : AdvancedMemoryBoostUncommon
{
	quality = "Quality.UncommonPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Memory";
							statPoolValue = 0.45f;
						} : StatPoolUpdate
					];
				} : Items.MemoryBoostEffector, 
				"Items.MemoryBoostSFXEffector"
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#87382";
				floatValues = 
				[
					0.45f
				];
			};
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}
	];
	nextUpgradeItem = "Items.AdvancedMemoryBoostRare";
}

AdvancedMemoryBoostRare : AdvancedMemoryBoostUncommon
{
	quality = "Quality.Rare";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Memory";
							statPoolValue = 0.7f;
						} : StatPoolUpdate
					];
				} : Items.MemoryBoostEffector, 
				"Items.MemoryBoostSFXEffector"
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#87382";
				floatValues = 
				[
					0.70f
				];
			};
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedMemoryBoostRarePlus";
}

[ notQueryable ]
AdvancedMemoryBoostRarePlus : AdvancedMemoryBoostUncommonPlus
{
	quality = "Quality.RarePlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Memory";
							statPoolValue = 0.75f;
						} : StatPoolUpdate
					];
				} : Items.MemoryBoostEffector, 
				"Items.MemoryBoostSFXEffector"
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#87382";
				floatValues = 
				[
					0.75f
				];
			};
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedMemoryBoostEpic";
}

AdvancedMemoryBoostEpic : AdvancedMemoryBoostUncommon
{
	quality = "Quality.Epic";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Memory";
							statPoolValue = 1f;
						} : StatPoolUpdate
					];
				} : Items.MemoryBoostEffector, 
				"Items.MemoryBoostSFXEffector"
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#87382";
				floatValues = 
				[
					1f
				];
			};
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedMemoryBoostEpicPlus";
}

[ notQueryable ]
AdvancedMemoryBoostEpicPlus : AdvancedMemoryBoostUncommonPlus
{
	quality = "Quality.EpicPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Memory";
							statPoolValue = 1.05f;
						} : StatPoolUpdate
					];
				} : Items.MemoryBoostEffector, 
				"Items.MemoryBoostSFXEffector"
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#87382";
				floatValues = 
				[
					1.05f
				];
			};
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedMemoryBoostLegendary";
}

AdvancedMemoryBoostLegendary : AdvancedMemoryBoostUncommon
{
	quality = "Quality.Legendary";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Memory";
							statPoolValue = 1.25f;
						} : StatPoolUpdate
					];
				} : Items.MemoryBoostEffector, 
				"Items.MemoryBoostSFXEffector"
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#87382";
				floatValues = 
				[
					1.25f
				];
			};
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedMemoryBoostLegendaryPlus";
}

[ notQueryable ]
AdvancedMemoryBoostLegendaryPlus : AdvancedMemoryBoostUncommonPlus
{
	quality = "Quality.LegendaryPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Memory";
							statPoolValue = 1.3f;
						} : StatPoolUpdate
					];
				} : Items.MemoryBoostEffector, 
				"Items.MemoryBoostSFXEffector"
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#87382";
				floatValues = 
				[
					1.30f
				];
			};
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedMemoryBoostLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedMemoryBoostLegendaryPlusPlus : AdvancedMemoryBoostUncommonPlus
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.Memory";
							statPoolValue = 1.35f;
						} : StatPoolUpdate
					];
				} : Items.MemoryBoostEffector, 
				"Items.MemoryBoostSFXEffector"
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#87382";
				floatValues = 
				[
					1.35f
				];
			};
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "";
}

AdvancedRamUpgradeCommon : AdvancedFrontalCortexModule
{
	displayName = "LocKey#40779";
	localizedDescription = "LocKey#40780";
	iconPath = "cw_frontalcortex_fastaccessmemory";
	quality = "Quality.Common";
	upgradeCostMult = 1.0f;
	statModifiers += 
	[
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Intelligence";
			refObject = "Player";
			opSymbol = "*";
			value = 0.05f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity8Cost"
	];
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.MemoryRegenRate";
					modifierType = "Additive";
					value = 0.1f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				floatValues = 
				[
					0.1f
				];
			} : FastAccessMemoryUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}
	];
	slotPartListPreset += 
	[
		{
			itemPartPreset = "Items.AdvancedRamUpgradeStatsShard";
		} : StatsShardSlotPart
	];
	CName cyberwareType = "FastAccessMemory";
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "mid_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "mid_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	nextUpgradeItem = "Items.AdvancedRamUpgradeCommonPlus";
}

AdvancedRamUpgradeStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.HealthRegenPercent", "Modifiers.HealingItemsChargesRegenMult", "Modifiers.HealingItemsChargesRegenMultQualityToggle", "Modifiers.RecoilPercentBonus", "Modifiers.RecoilPercentBonusToggle"
	];
}

[ notQueryable ]
AdvancedRamUpgradeCommonPlus : AdvancedRamUpgradeCommon
{
	quality = "Quality.CommonPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.MemoryRegenRate";
					modifierType = "Additive";
					value = 0.11f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				floatValues = 
				[
					0.11f
				];
			} : FastAccessMemoryUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}
	];
	nextUpgradeItem = "Items.AdvancedRamUpgradeUncommon";
}

AdvancedRamUpgradeUncommon : AdvancedRamUpgradeCommon
{
	quality = "Quality.Uncommon";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.MemoryRegenRate";
					modifierType = "Additive";
					value = 0.13f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				floatValues = 
				[
					0.13f
				];
			} : FastAccessMemoryUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}
	];
	nextUpgradeItem = "Items.AdvancedRamUpgradeUncommonPlus";
}

[ notQueryable ]
AdvancedRamUpgradeUncommonPlus : AdvancedRamUpgradeCommonPlus
{
	quality = "Quality.UncommonPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.MemoryRegenRate";
					modifierType = "Additive";
					value = 0.14f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				floatValues = 
				[
					0.14f
				];
			} : FastAccessMemoryUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}
	];
	nextUpgradeItem = "Items.AdvancedRamUpgradeRare";
}

AdvancedRamUpgradeRare : AdvancedRamUpgradeCommon
{
	quality = "Quality.Rare";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.MemoryRegenRate";
					modifierType = "Additive";
					value = 0.16f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				floatValues = 
				[
					0.16f
				];
			} : FastAccessMemoryUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedRamUpgradeRarePlus";
}

[ notQueryable ]
AdvancedRamUpgradeRarePlus : AdvancedRamUpgradeCommonPlus
{
	quality = "Quality.RarePlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.MemoryRegenRate";
					modifierType = "Additive";
					value = 0.18f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				floatValues = 
				[
					0.18f
				];
			} : FastAccessMemoryUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedRamUpgradeEpic";
}

AdvancedRamUpgradeEpic : AdvancedRamUpgradeCommon
{
	quality = "Quality.Epic";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.MemoryRegenRate";
					modifierType = "Additive";
					value = 0.2f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				floatValues = 
				[
					0.20f
				];
			} : FastAccessMemoryUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedRamUpgradeEpicPlus";
}

[ notQueryable ]
AdvancedRamUpgradeEpicPlus : AdvancedRamUpgradeCommonPlus
{
	quality = "Quality.EpicPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.MemoryRegenRate";
					modifierType = "Additive";
					value = 0.23f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				floatValues = 
				[
					0.23f
				];
			} : FastAccessMemoryUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedRamUpgradeLegendary";
}

AdvancedRamUpgradeLegendary : AdvancedRamUpgradeCommon
{
	quality = "Quality.Legendary";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.MemoryRegenRate";
					modifierType = "Additive";
					value = 0.25f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				floatValues = 
				[
					0.25f
				];
			} : FastAccessMemoryUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedRamUpgradeLegendaryPlus";
}

[ notQueryable ]
AdvancedRamUpgradeLegendaryPlus : AdvancedRamUpgradeCommonPlus
{
	quality = "Quality.LegendaryPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.MemoryRegenRate";
					modifierType = "Additive";
					value = 0.28f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				floatValues = 
				[
					0.28f
				];
			} : FastAccessMemoryUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedRamUpgradeLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedRamUpgradeLegendaryPlusPlus : AdvancedRamUpgradeCommonPlus
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.MemoryRegenRate";
					modifierType = "Additive";
					value = 0.3f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				floatValues = 
				[
					0.30f
				];
			} : FastAccessMemoryUIData;
		}, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "";
}

AdvancedSelfIceRare : AdvancedFrontalCortexModule
{
	string friendlyName = "Anti-Virus";
	displayName = "LocKey#3643";
	localizedDescription = "LocKey#3647";
	iconPath = "cw_frontalcortex_antivirus";
	quality = "Quality.Rare";
	upgradeCostMult = 0.5f;
	statModifiers += 
	[
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Intelligence";
			refObject = "Player";
			opSymbol = "*";
			value = 0.5f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity5Cost"
	];
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.QuickhackShield";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.AntiVirusCooldownReduction";
					modifierType = "Additive";
					value = 30;
				} : ConstantStatModifier
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#40768";
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}, 
		{
			UIData = 
			{
				localizedDescription = "LocKey#93182";
				floatValues = 
				[
					45
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceSelfIceCooldown"
	];
	slotPartListPreset += 
	[
		{
			itemPartPreset = "Items.AdvancedSelfIceStatsShard";
		} : StatsShardSlotPart
	];
	CName cyberwareType = "AntiVirus";
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "low_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "low_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	nextUpgradeItem = "Items.AdvancedSelfIceRarePlus";
}

AdvancedSelfIceStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.MeleeResistance", "Modifiers.DamageOverTimeResistance", "Modifiers.DamageOverTimeResistanceQualityToggle", "Modifiers.ExplosionResistance", "Modifiers.ExplosionResistanceToggle"
	];
}

[ notQueryable ]
AdvancedSelfIceRarePlus : AdvancedSelfIceRare
{
	quality = "Quality.RarePlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.QuickhackShield";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.AntiVirusCooldownReduction";
					modifierType = "Additive";
					value = 33;
				} : ConstantStatModifier
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#40768";
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					1
				];
			};
		}, 
		{
			UIData = 
			{
				localizedDescription = "LocKey#93182";
				floatValues = 
				[
					42
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceSelfIceCooldown"
	];
	nextUpgradeItem = "Items.AdvancedSelfIceEpic";
}

AdvancedSelfIceEpic : AdvancedSelfIceRare
{
	quality = "Quality.Epic";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.QuickhackShield";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.AntiVirusCooldownReduction";
					modifierType = "Additive";
					value = 38;
				} : ConstantStatModifier
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#40768";
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		{
			UIData = 
			{
				localizedDescription = "LocKey#93182";
				floatValues = 
				[
					37
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceSelfIceCooldown"
	];
	nextUpgradeItem = "Items.AdvancedSelfIceEpicPlus";
}

[ notQueryable ]
AdvancedSelfIceEpicPlus : AdvancedSelfIceRarePlus
{
	quality = "Quality.EpicPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.QuickhackShield";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.AntiVirusCooldownReduction";
					modifierType = "Additive";
					value = 41;
				} : ConstantStatModifier
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#40768";
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		{
			UIData = 
			{
				localizedDescription = "LocKey#93182";
				floatValues = 
				[
					34
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceSelfIceCooldown"
	];
	nextUpgradeItem = "Items.AdvancedSelfIceLegendary";
}

AdvancedSelfIceLegendary : AdvancedSelfIceRare
{
	quality = "Quality.Legendary";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.QuickhackShield";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.AntiVirusCooldownReduction";
					modifierType = "Additive";
					value = 46;
				} : ConstantStatModifier
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#40768";
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		{
			UIData = 
			{
				localizedDescription = "LocKey#93182";
				floatValues = 
				[
					29
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceSelfIceCooldown"
	];
	nextUpgradeItem = "Items.AdvancedSelfIceLegendaryPlus";
}

[ notQueryable ]
AdvancedSelfIceLegendaryPlus : AdvancedSelfIceRarePlus
{
	quality = "Quality.LegendaryPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.QuickhackShield";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.AntiVirusCooldownReduction";
					modifierType = "Additive";
					value = 49;
				} : ConstantStatModifier
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#40768";
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		{
			UIData = 
			{
				localizedDescription = "LocKey#93182";
				floatValues = 
				[
					26
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceSelfIceCooldown"
	];
	nextUpgradeItem = "Items.AdvancedSelfIceLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedSelfIceLegendaryPlusPlus : AdvancedSelfIceRarePlus
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.QuickhackShield";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.AntiVirusCooldownReduction";
					modifierType = "Additive";
					value = 55;
				} : ConstantStatModifier
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#40768";
			};
		} : GameplayLogicPackage, 
		{
			stats = 
			[
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 2;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#92412";
				floatValues = 
				[
					2
				];
			};
		}, 
		{
			UIData = 
			{
				localizedDescription = "LocKey#93182";
				floatValues = 
				[
					20
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceSelfIceCooldown"
	];
	nextUpgradeItem = "";
}

[ notQueryable ]
AdvancedSmartStorageEffector : Effector
{
	prereqRecord = 
	{
		conditions += 
		[
			{
				invert = true;
			} : SelfHitPrereqCondition
		];
	} : PostProcessHitReceived;
	effectorClassName = "SmartStorageEffector";
	float baseChance = 0.25f;
	float chanceStep = 0.25f;
	float revealDuration = 3.0f;
	fk< StatusEffect > statusEffectForTarget = "BaseStatusEffect.SmartStorageRevengeTarget";
	fk< StatusEffect > statusEffectForSelf = "BaseStatusEffect.SmartStorageCooldown";
}

[ notQueryable ]
AdvancedSmartStorageTriggerEffector : ApplyEffectorEffector
{
	prereqRecord = 
	{
		statusEffect = "BaseStatusEffect.SmartStorageCooldown";
	} : StatusEffectAbsentPrereq;
	effectorToApply = "Items.AdvancedSmartStorageEffector";
}

[ notQueryable ]
AdvancedSmartStorageBuffEffector : MultiplyDamage
{
	prereqRecord = 
	{
		conditions = 
		[
			{
				statusEffect = "SmartStorageRevengeTarget";
				checkType = "CheckType.Record";
			} : StatusEffectPresentHitPrereqCondition
		];
	} : ProcessHitTriggered;
	value = 1.0f;
}

[ notQueryable ]
AdvancedSmartStorageCommon : AdvancedFrontalCortexModule
{
	string friendlyName = "SmartStorage";
	displayName = "LocKey#85333";
	localizedDescription = "LocKey#85334";
	iconPath = "cw_skeleton_smartstorage";
	quality = "Quality.Common";
	upgradeCostMult = 1.0f;
	statModifiers += 
	[
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Cool";
			refObject = "Player";
			opSymbol = "*";
			value = 0.2f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity12Cost"
	];
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#88990";
				floatValues = 
				[
					0f, 0f
				];
			};
		} : GameplayLogicPackage
	];
	CName cyberwareType = "SmartStorage";
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "mid_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "mid_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	nextUpgradeItem = "Items.AdvancedSmartStorageUncommon";
}

[ notQueryable ]
AdvancedSmartStorageUncommon : AdvancedSmartStorageCommon
{
	quality = "Quality.Uncommon";
	nextUpgradeItem = "Items.AdvancedSmartStorageRare";
}

[ notQueryable ]
AdvancedSmartStorageRare : AdvancedSmartStorageCommon
{
	quality = "Quality.Rare";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#88990";
				floatValues = 
				[
					20f, 10f
				];
			};
			effectors = 
			[
				"Items.AdvancedSmartStorageTriggerEffector", {
					value = 1.2f;
				} : AdvancedSmartStorageBuffEffector
			];
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedSmartStorageEpic";
}

[ notQueryable ]
AdvancedSmartStorageEpic : AdvancedSmartStorageRare
{
	quality = "Quality.Epic";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#88990";
				floatValues = 
				[
					25f, 10f
				];
			};
			effectors = 
			[
				"Items.AdvancedSmartStorageTriggerEffector", {
					value = 1.25f;
				} : AdvancedSmartStorageBuffEffector
			];
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "Items.AdvancedSmartStorageLegendary";
}

[ notQueryable ]
AdvancedSmartStorageLegendary : AdvancedSmartStorageRare
{
	quality = "Quality.Legendary";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#88990";
				floatValues = 
				[
					30f, 10f
				];
			};
			effectors = 
			[
				"Items.AdvancedSmartStorageTriggerEffector", {
					value = 1.3f;
				} : AdvancedSmartStorageBuffEffector
			];
		} : GameplayLogicPackage, 
		"Attunements.CoolHeadshotDamage"
	];
	nextUpgradeItem = "";
}

[ notQueryable ]
AdvancedSubdermalCoProcessorCommon : AdvancedFrontalCortexModule
{
	string friendlyName = "SubdermalCoProcessor";
	displayName = "LocKey#85331";
	localizedDescription = "LocKey#85332";
	iconPath = "cw_skeleton_subdermalcoprocessor";
	quality = "Quality.Common";
	upgradeCostMult = 1.5f;
	statModifiers += 
	[
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.TechnicalAbility";
			refObject = "Player";
			opSymbol = "*";
			value = 0.5f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity14Cost"
	];
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -0.3f;
					isPercentage = true;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 0.3f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 0.3f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 0.3f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 0.3f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 0.3f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					0.3f
				];
			};
		} : GameplayLogicPackage
	];
	slotPartListPreset += 
	[
		{
			itemPartPreset = "Items.AdvancedSubdermalCoProcessorStatsShard";
		} : StatsShardSlotPart
	];
	CName cyberwareType = "SubdermalCoProcessor";
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "high_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "high_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	nextUpgradeItem = "Items.AdvancedSubdermalCoProcessorCommonPlus";
}

AdvancedSubdermalCoProcessorStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.StealthHitDamageBonus", "Modifiers.MeleeDamagePercentBonus", "Modifiers.MeleeDamagePercentBonusQualityToggle", "Modifiers.ADSSpeedPercentBonus", "Modifiers.ADSSpeedPercentBonusToggle"
	];
}

[ notQueryable ]
AdvancedSubdermalCoProcessorCommonPlus : AdvancedSubdermalCoProcessorCommon
{
	quality = "Quality.CommonPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -0.35f;
					isPercentage = true;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 0.35f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 0.35f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 0.35f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 0.35f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 0.35f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					0.4f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedSubdermalCoProcessorUncommon";
}

AdvancedSubdermalCoProcessorUncommon : AdvancedSubdermalCoProcessorCommon
{
	quality = "Quality.Uncommon";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -0.6f;
					isPercentage = true;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 0.6f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 0.6f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 0.6f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 0.6f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 0.6f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					0.60f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedSubdermalCoProcessorUncommonPlus";
}

[ notQueryable ]
AdvancedSubdermalCoProcessorUncommonPlus : AdvancedSubdermalCoProcessorCommonPlus
{
	quality = "Quality.UncommonPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -0.65f;
					isPercentage = true;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 0.65f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 0.65f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 0.65f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 0.65f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 0.65f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					0.65f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedSubdermalCoProcessorRare";
}

AdvancedSubdermalCoProcessorRare : AdvancedSubdermalCoProcessorCommon
{
	quality = "Quality.Rare";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -0.8f;
					isPercentage = true;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 0.8f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 0.8f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 0.8f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 0.8f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 0.8f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					0.8f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "Items.AdvancedSubdermalCoProcessorRarePlus";
}

[ notQueryable ]
AdvancedSubdermalCoProcessorRarePlus : AdvancedSubdermalCoProcessorCommonPlus
{
	quality = "Quality.RarePlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -0.85f;
					isPercentage = true;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 0.85f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 0.85f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 0.85f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 0.85f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 0.85f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					0.85f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "Items.AdvancedSubdermalCoProcessorEpic";
}

AdvancedSubdermalCoProcessorEpic : AdvancedSubdermalCoProcessorCommon
{
	quality = "Quality.Epic";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -1f;
					isPercentage = true;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 1f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 1f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 1f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 1f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 1f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					1f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "Items.AdvancedSubdermalCoProcessorEpicPlus";
}

[ notQueryable ]
AdvancedSubdermalCoProcessorEpicPlus : AdvancedSubdermalCoProcessorCommonPlus
{
	quality = "Quality.EpicPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -1.05f;
					isPercentage = true;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 1.05f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 1.05f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 1.05f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 1.05f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 1.05f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					1.05f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "Items.AdvancedSubdermalCoProcessorLegendary";
}

AdvancedSubdermalCoProcessorLegendary : AdvancedSubdermalCoProcessorCommon
{
	quality = "Quality.Legendary";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -1.25f;
					isPercentage = true;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 1.25f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 1.25f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 1.25f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 1.25f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 1.25f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					1.25f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "Items.AdvancedSubdermalCoProcessorLegendaryPlus";
}

[ notQueryable ]
AdvancedSubdermalCoProcessorLegendaryPlus : AdvancedSubdermalCoProcessorCommonPlus
{
	quality = "Quality.LegendaryPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -1.3f;
					isPercentage = true;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 1.3f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 1.3f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 1.3f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 1.3f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 1.3f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					1.30f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "Items.AdvancedSubdermalCoProcessorLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedSubdermalCoProcessorLegendaryPlusPlus : AdvancedSubdermalCoProcessorCommonPlus
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -1.35f;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 1.35f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 1.35f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 1.35f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 1.35f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 1.35f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					1.35f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.TechArmor"
	];
	nextUpgradeItem = "";
}

[ notQueryable ]
[ EP1 ]
IconicAdvancedSubdermalCoProcessorEpic : AdvancedSubdermalCoProcessorEpic
{
	displayName = "LocKey#94429";
	localizedDescription = "LocKey#85332";
	quality = "Quality.Epic";
	tags += 
	[
		"IllegalItem"
	];
	upgradeCostMult = 2.5f;
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			value = 2f;
		} : ConstantStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			value = 2f;
		} : ConstantStatModifier
	];
	statModifiers = 
	[
		{
			statType = "BaseStats.IsItemIconic";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier
	];
	variants = 
	[
		"Variants.Humanity48Cost"
	];
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -5.0f;
					isPercentage = true;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 5.0f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 5.0f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 5.0f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 5.0f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 5.0f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					5.0f
				];
			};
		} : GameplayLogicPackage
	];
	OnLooted += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						statusEffect = "BaseStatusEffect.JustLootedIconicCWFromAirdrop";
					} : StatusEffectPrereq;
					fact = "iconic_subdermal_coprocessor_airdropped";
					value = 1;
				} : SetFactEffector
			];
		}
	];
	nextUpgradeItem = "Items.IconicAdvancedSubdermalCoProcessorEpicPlus";
}

[ notQueryable ]
[ EP1 ]
IconicAdvancedSubdermalCoProcessorEpicPlus : IconicAdvancedSubdermalCoProcessorEpic
{
	quality = "Quality.EpicPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -5.5f;
					isPercentage = true;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 5.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 5.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 5.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 5.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 5.5f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					5.5f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.IconicAdvancedSubdermalCoProcessorLegendary";
}

[ notQueryable ]
[ EP1 ]
IconicAdvancedSubdermalCoProcessorLegendary : AdvancedSubdermalCoProcessorLegendary
{
	displayName = "LocKey#94429";
	localizedDescription = "LocKey#85332";
	upgradeCostMult = 2.5f;
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			value = 2f;
		} : ConstantStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			value = 2f;
		} : ConstantStatModifier
	];
	statModifiers = 
	[
		{
			statType = "BaseStats.IsItemIconic";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier
	];
	variants = 
	[
		"Variants.Humanity48Cost"
	];
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -6.5f;
					isPercentage = true;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 6.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 6.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 6.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 6.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 6.5f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					6.5f
				];
			};
		} : GameplayLogicPackage
	];
	OnLooted += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						statusEffect = "BaseStatusEffect.JustLootedIconicCWFromAirdrop";
					} : StatusEffectPrereq;
					fact = "iconic_subdermal_coprocessor_airdropped";
					value = 1;
				} : SetFactEffector
			];
		}
	];
	nextUpgradeItem = "Items.IconicAdvancedSubdermalCoProcessorLegendaryPlus";
}

[ notQueryable ]
[ EP1 ]
IconicAdvancedSubdermalCoProcessorLegendaryPlus : IconicAdvancedSubdermalCoProcessorLegendary
{
	quality = "Quality.LegendaryPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -7f;
					isPercentage = true;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 7f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 7f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 7f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 7f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 7f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					7f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.IconicAdvancedSubdermalCoProcessorLegendaryPlusPlus";
}

[ notQueryable ]
IconicAdvancedSubdermalCoProcessorEpic_Regina : AdvancedSubdermalCoProcessorEpic
{
	displayName = "LocKey#94429";
	localizedDescription = "LocKey#85332";
	quality = "Quality.Epic";
	upgradeCostMult = 2.5f;
	tags += 
	[
		"AdvancedSubdermalCoProcessor_Regina"
	];
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			value = 2f;
		} : ConstantStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			value = 2f;
		} : ConstantStatModifier
	];
	statModifiers = 
	[
		{
			statType = "BaseStats.IsItemIconic";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier
	];
	variants = 
	[
		"Variants.Humanity48Cost"
	];
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -5.0f;
					isPercentage = true;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 5.0f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 5.0f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 5.0f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 5.0f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 5.0f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					5.0f
				];
			};
		} : GameplayLogicPackage
	];
	OnLooted = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						fact = "regina_iconic_subdermalcoprocessor_acquired";
						value = 0;
						comparisonType = "Equal";
					} : FactValuePrereq;
					fact = "regina_iconic_subdermalcoprocessor_acquired";
					value = 1;
				} : SetFactEffector
			];
		}
	];
	nextUpgradeItem = "Items.IconicAdvancedSubdermalCoProcessorEpicPlus_Regina";
}

[ notQueryable ]
IconicAdvancedSubdermalCoProcessorEpicPlus_Regina : IconicAdvancedSubdermalCoProcessorEpic_Regina
{
	quality = "Quality.EpicPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -5.5f;
					isPercentage = true;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 5.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 5.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 5.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 5.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 5.5f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					5.5f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.IconicAdvancedSubdermalCoProcessorLegendary_Regina";
}

[ notQueryable ]
IconicAdvancedSubdermalCoProcessorLegendary_Regina : AdvancedSubdermalCoProcessorLegendary
{
	tags += 
	[
		"AdvancedSubdermalCoProcessor_Regina"
	];
	displayName = "LocKey#94429";
	localizedDescription = "LocKey#85332";
	statModifiers = 
	[
		{
			statType = "BaseStats.IsItemIconic";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier
	];
	variants = 
	[
		"Variants.Humanity48Cost"
	];
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -6.5f;
					isPercentage = true;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 6.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 6.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 6.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 6.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 6.5f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					6.5f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.IconicAdvancedSubdermalCoProcessorLegendaryPlus_Regina";
}

[ notQueryable ]
IconicAdvancedSubdermalCoProcessorLegendaryPlus_Regina : IconicAdvancedSubdermalCoProcessorLegendary_Regina
{
	quality = "Quality.LegendaryPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -7f;
					isPercentage = true;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 7f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 7f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 7f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 7f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 7f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					7f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.IconicAdvancedSubdermalCoProcessorLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
IconicAdvancedSubdermalCoProcessorLegendaryPlusPlus : IconicAdvancedSubdermalCoProcessorLegendaryPlus
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip = 
	[
		{
			effectors = 
			[
				{
					prereqRecord = "Perks.IsTargetKilled";
					change = -7.5f;
					isPercentage = true;
				} : ModifyCyberwareCooldownDurationEffector, 
				{
					prereqRecord = "Perks.IsTargetKilled";
					statPoolUpdates = 
					[
						{
							statPoolType = "BaseStatPools.BerserkCharge";
							statPoolValue = 7.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CWMaskCharges";
							statPoolValue = 7.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.OpticalCamoCharges";
							statPoolValue = 7.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.SandevistanCharge";
							statPoolValue = 7.5f;
						} : StatPoolUpdate, 
						{
							statPoolType = "BaseStatPools.CyberdeckOverclock";
							statPoolValue = 7.5f;
						} : StatPoolUpdate
					];
					usePercent = true;
				} : ModifyStatPoolValueEffector
			];
			UIData = 
			{
				localizedDescription = "LocKey#88992";
				floatValues = 
				[
					7.5f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "";
}

[ notQueryable ]
[ EP1 ]
AdvancedTimeBankLegendary : AdvancedFrontalCortexModule
{
	string friendlyName = "TimeBank";
	displayName = "LocKey#85359";
	localizedDescription = "LocKey#85360";
	iconPath = "TimeBank";
	quality = "Quality.Legendary";
	upgradeCostMult = 2.5f;
	statModifiers = 
	[
		{
			statType = "BaseStats.IsItemIconic";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Intelligence";
			refObject = "Player";
			opSymbol = "*";
			value = 0.05f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity45Cost"
	];
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CyberwareCooldownReduction";
					modifierType = "Additive";
					value = 0.1f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.TimeBankCharges";
					modifierType = "Additive";
					value = 30f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				"Effectors.StatusEffectBasedTimeBankEffector", {
					statPoolType = "BaseStatPools.BerserkCharge";
				} : StatPoolBasedTimeBankEffector, 
				{
					statPoolType = "BaseStatPools.CWMaskCharges";
				} : StatPoolBasedTimeBankEffector, 
				{
					statPoolType = "BaseStatPools.OpticalCamoCharges";
				} : StatPoolBasedTimeBankEffector, 
				{
					statPoolType = "BaseStatPools.SandevistanCharge";
				} : StatPoolBasedTimeBankEffector, 
				{
					statPoolType = "BaseStatPools.CyberdeckOverclock";
				} : StatPoolBasedTimeBankEffector, 
				{
					prereqRecord = "Perks.IsPlayerInCombatState";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.TimeBankRegenEnabled";
								modifierType = "Multiplier";
								value = 0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupOnPlayer
			];
			UIData = 
			{
				localizedDescription = "LocKey#89020";
				floatValues = 
				[
					30f, 60f, 10f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceAllDamage"
	];
	slotPartListPreset += 
	[
		{
			itemPartPreset = "Items.AdvancedTimeBankStatsShard";
		} : StatsShardSlotPart
	];
	CName cyberwareType = "TimeBank";
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "high_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "high_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	nextUpgradeItem = "Items.AdvancedTimeBankLegendaryPlus";
}

AdvancedTimeBankStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.HealingItemsChargesRegenMult", "Modifiers.CritChance", "Modifiers.CritChanceQualityToggle", "Modifiers.CritDamage", "Modifiers.CritDamageToggle"
	];
}

[ notQueryable ]
[ EP1 ]
AdvancedTimeBankLegendaryPlus : AdvancedTimeBankLegendary
{
	quality = "Quality.LegendaryPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CyberwareCooldownReduction";
					modifierType = "Additive";
					value = 0.12f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.TimeBankCharges";
					modifierType = "Additive";
					value = 40f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				"Effectors.StatusEffectBasedTimeBankEffector", {
					statPoolType = "BaseStatPools.BerserkCharge";
				} : StatPoolBasedTimeBankEffector, 
				{
					statPoolType = "BaseStatPools.CWMaskCharges";
				} : StatPoolBasedTimeBankEffector, 
				{
					statPoolType = "BaseStatPools.OpticalCamoCharges";
				} : StatPoolBasedTimeBankEffector, 
				{
					statPoolType = "BaseStatPools.SandevistanCharge";
				} : StatPoolBasedTimeBankEffector, 
				{
					statPoolType = "BaseStatPools.CyberdeckOverclock";
				} : StatPoolBasedTimeBankEffector, 
				{
					prereqRecord = "Perks.IsPlayerInCombatState";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.TimeBankRegenEnabled";
								modifierType = "Multiplier";
								value = 0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupOnPlayer
			];
			UIData = 
			{
				localizedDescription = "LocKey#89020";
				floatValues = 
				[
					40f, 60f, 12f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedTimeBankLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedTimeBankLegendaryPlusPlus : AdvancedTimeBankLegendary
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CyberwareCooldownReduction";
					modifierType = "Additive";
					value = 0.15f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.TimeBankCharges";
					modifierType = "Additive";
					value = 50f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				"Effectors.StatusEffectBasedTimeBankEffector", {
					statPoolType = "BaseStatPools.BerserkCharge";
				} : StatPoolBasedTimeBankEffector, 
				{
					statPoolType = "BaseStatPools.CWMaskCharges";
				} : StatPoolBasedTimeBankEffector, 
				{
					statPoolType = "BaseStatPools.OpticalCamoCharges";
				} : StatPoolBasedTimeBankEffector, 
				{
					statPoolType = "BaseStatPools.SandevistanCharge";
				} : StatPoolBasedTimeBankEffector, 
				{
					statPoolType = "BaseStatPools.CyberdeckOverclock";
				} : StatPoolBasedTimeBankEffector, 
				{
					prereqRecord = "Perks.IsPlayerInCombatState";
					statGroup = 
					{
						statModifiers = 
						[
							{
								statType = "BaseStats.TimeBankRegenEnabled";
								modifierType = "Multiplier";
								value = 0f;
							} : ConstantStatModifier
						];
					};
				} : ApplyStatGroupOnPlayer
			];
			UIData = 
			{
				localizedDescription = "LocKey#89020";
				floatValues = 
				[
					50f, 60f, 15f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "";
}

AdvancedBioConductorsCommon : AdvancedFrontalCortexModule
{
	displayName = "LocKey#40745";
	localizedDescription = "LocKey#40746";
	iconPath = "cw_circulatory_bioconductors";
	quality = "Quality.Common";
	upgradeCostMult = 1.5f;
	statModifiers += 
	[
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Intelligence";
			refObject = "Player";
			opSymbol = "*";
			value = 0.05f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity16Cost"
	];
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CanQuickHackCriticallyHit";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackCritChance";
					modifierType = "Additive";
					value = 15f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = -4f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#91762";
				floatValues = 
				[
					15f, 4f
				];
			};
		} : GameplayLogicPackage
	];
	slotPartListPreset += 
	[
		{
			itemPartPreset = "Items.AdvancedBioConductorsStatsShard";
		} : StatsShardSlotPart
	];
	CName cyberwareType = "BioConductors";
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "high_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "high_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	nextUpgradeItem = "Items.AdvancedBioConductorsCommonPlus";
}

AdvancedBioConductorsStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.ReloadSpeedPercentBonus", "Modifiers.BonusQuickHackDamage", "Modifiers.BonusQuickHackDamageQualityToggle", "Modifiers.RamOnKill", "Modifiers.RamOnKillToggle"
	];
}

[ notQueryable ]
AdvancedBioConductorsCommonPlus : AdvancedBioConductorsCommon
{
	quality = "Quality.CommonPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CanQuickHackCriticallyHit";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackCritChance";
					modifierType = "Additive";
					value = 17f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = -4f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#91762";
				floatValues = 
				[
					17f, 4f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedBioConductorsUncommon";
}

AdvancedBioConductorsUncommon : AdvancedBioConductorsCommon
{
	quality = "Quality.Uncommon";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CanQuickHackCriticallyHit";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackCritChance";
					modifierType = "Additive";
					value = 20f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = -4f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#91762";
				floatValues = 
				[
					20f, 4f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedBioConductorsUncommonPlus";
}

[ notQueryable ]
AdvancedBioConductorsUncommonPlus : AdvancedBioConductorsCommonPlus
{
	quality = "Quality.UncommonPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CanQuickHackCriticallyHit";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackCritChance";
					modifierType = "Additive";
					value = 22f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = -4f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#91762";
				floatValues = 
				[
					22f, 4f
				];
			};
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedBioConductorsRare";
}

AdvancedBioConductorsRare : AdvancedBioConductorsCommon
{
	quality = "Quality.Rare";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CanQuickHackCriticallyHit";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackCritChance";
					modifierType = "Additive";
					value = 25f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = -4f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#91762";
				floatValues = 
				[
					25f, 4f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedBioConductorsRarePlus";
}

[ notQueryable ]
AdvancedBioConductorsRarePlus : AdvancedBioConductorsCommonPlus
{
	quality = "Quality.RarePlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CanQuickHackCriticallyHit";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackCritChance";
					modifierType = "Additive";
					value = 27f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = -4f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#91762";
				floatValues = 
				[
					27f, 4f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedBioConductorsEpic";
}

AdvancedBioConductorsEpic : AdvancedBioConductorsCommon
{
	quality = "Quality.Epic";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CanQuickHackCriticallyHit";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackCritChance";
					modifierType = "Additive";
					value = 30f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = -4f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#91762";
				floatValues = 
				[
					30f, 4f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedBioConductorsEpicPlus";
}

[ notQueryable ]
AdvancedBioConductorsEpicPlus : AdvancedBioConductorsCommonPlus
{
	quality = "Quality.EpicPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CanQuickHackCriticallyHit";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackCritChance";
					modifierType = "Additive";
					value = 32f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = -4f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#91762";
				floatValues = 
				[
					32f, 4f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedBioConductorsLegendary";
}

AdvancedBioConductorsLegendary : AdvancedBioConductorsCommon
{
	quality = "Quality.Legendary";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CanQuickHackCriticallyHit";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackCritChance";
					modifierType = "Additive";
					value = 35f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = -4f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#91762";
				floatValues = 
				[
					35f, 4f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedBioConductorsLegendaryPlus";
}

[ notQueryable ]
AdvancedBioConductorsLegendaryPlus : AdvancedBioConductorsCommon
{
	quality = "Quality.LegendaryPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CanQuickHackCriticallyHit";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackCritChance";
					modifierType = "Additive";
					value = 37f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = -4f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#91762";
				floatValues = 
				[
					37f, 4f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "Items.AdvancedBioConductorsLegendary_PlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedBioConductorsLegendary_PlusPlus : AdvancedBioConductorsCommon
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CanQuickHackCriticallyHit";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackCritChance";
					modifierType = "Additive";
					value = 40f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = -4f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#91762";
				floatValues = 
				[
					40f, 4f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceAllDamage"
	];
	nextUpgradeItem = "";
}

[ notQueryable ]
[ EP1 ]
IconicBioConductorsRare : AdvancedBioConductorsRare
{
	displayName = "LocKey#94428";
	localizedDescription = "LocKey#40746";
	upgradeCostMult = 2.5f;
	tags += 
	[
		"IllegalItem"
	];
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			value = 2f;
		} : ConstantStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			value = 2f;
		} : ConstantStatModifier
	];
	statModifiers = 
	[
		"Items.ItemArmorToArmor", {
			statType = "BaseStats.Protection";
			modifierType = "Additive";
			refStat = "BaseStats.Armor";
			opSymbol = "*";
			value = 1.0f;
		} : CombinedStatModifier, 
		{
			statType = "BaseStats.IsItemIconic";
			modifierType = "Additive";
			value = 1f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Intelligence";
			refObject = "Player";
			opSymbol = "*";
			value = 0.5f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity50Cost"
	];
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CanQuickHackCriticallyHit";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackCritChance";
					modifierType = "Additive";
					value = 80f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = -8f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#91762";
				floatValues = 
				[
					80f, 8f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceQuickhackDamageIconic"
	];
	OnLooted += 
	[
		{
			effectors = 
			[
				{
					prereqRecord = 
					{
						statusEffect = "BaseStatusEffect.JustLootedIconicCWFromAirdrop";
					} : StatusEffectPrereq;
					fact = "iconic_bioconductor_airdropped";
					value = 1;
				} : SetFactEffector
			];
		}
	];
	nextUpgradeItem = "Items.IconicBioConductorsRarePlus";
}

[ notQueryable ]
[ EP1 ]
IconicBioConductorsRarePlus : IconicBioConductorsRare
{
	quality = "Quality.RarePlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CanQuickHackCriticallyHit";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackCritChance";
					modifierType = "Additive";
					value = 85f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = -8f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#91762";
				floatValues = 
				[
					85f, 8f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceQuickhackDamageIconic"
	];
	nextUpgradeItem = "Items.IconicBioConductorsEpic";
}

[ notQueryable ]
[ EP1 ]
IconicBioConductorsEpic : IconicBioConductorsRare
{
	quality = "Quality.Epic";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CanQuickHackCriticallyHit";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackCritChance";
					modifierType = "Additive";
					value = 90f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = -8f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#91762";
				floatValues = 
				[
					90f, 8f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceQuickhackDamageIconic"
	];
	nextUpgradeItem = "Items.IconicBioConductorsEpicPlus";
}

[ notQueryable ]
[ EP1 ]
IconicBioConductorsEpicPlus : IconicBioConductorsRare
{
	quality = "Quality.EpicPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CanQuickHackCriticallyHit";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackCritChance";
					modifierType = "Additive";
					value = 95f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = -8f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#91762";
				floatValues = 
				[
					95f, 8f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceQuickhackDamageIconic"
	];
	nextUpgradeItem = "Items.IconicBioConductorsLegendary";
}

[ notQueryable ]
[ EP1 ]
IconicBioConductorsLegendary : IconicBioConductorsRare
{
	quality = "Quality.Legendary";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CanQuickHackCriticallyHit";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackCritChance";
					modifierType = "Additive";
					value = 100f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = -8f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#91762";
				floatValues = 
				[
					100f, 8f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceQuickhackDamageIconic"
	];
	nextUpgradeItem = "Items.IconicBioConductorsLegendaryPlus";
}

[ notQueryable ]
[ EP1 ]
IconicBioConductorsLegendaryPlus : IconicBioConductorsRare
{
	quality = "Quality.LegendaryPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CanQuickHackCriticallyHit";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackCritChance";
					modifierType = "Additive";
					value = 100f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = -6f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#91762";
				floatValues = 
				[
					100f, 6f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceQuickhackDamageIconic"
	];
	nextUpgradeItem = "Items.IconicBioConductorsLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
IconicBioConductorsLegendaryPlusPlus : IconicBioConductorsRare
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.CanQuickHackCriticallyHit";
					modifierType = "Additive";
					value = 1.0f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.QuickHackCritChance";
					modifierType = "Additive";
					value = 100f;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = -4f;
				} : ConstantStatModifier
			];
			UIData = 
			{
				localizedDescription = "LocKey#91762";
				floatValues = 
				[
					100f, 4f
				];
			};
		} : GameplayLogicPackage, 
		"Attunements.IntelligenceQuickhackDamageIconic"
	];
	nextUpgradeItem = "";
}

[ notQueryable ]
AdvancedKerenziovBoostSystemCommon : AdvancedFrontalCortexModule
{
	string friendlyName = "KerenziovBoostSystem";
	displayName = "LocKey#85319";
	localizedDescription = "LocKey#85320";
	iconPath = "cw_skeleton_kerenziovboostsystem";
	quality = "Quality.Common";
	upgradeCostMult = 1f;
	statModifiers += 
	[
		{
			statType = "BaseStats.AttunementHelper";
			modifierType = "Additive";
			refStat = "BaseStats.Reflexes";
			refObject = "Player";
			opSymbol = "*";
			value = 0.1f;
		} : CombinedStatModifier
	];
	variants = 
	[
		"Variants.Humanity3Cost"
	];
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#89437";
				floatValues = 
				[
					100f, 7f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.TimeDilationKerenzikovPlayerTimeScale";
					modifierType = "Additive";
					value = 0.05f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = 
					{
						statusEffect = "BaseStatusEffect.KerenzikovPlayerBuff";
						checkType = "CheckType.Record";
					} : StatusEffectPrereq;
					statusEffect = "BaseStatusEffect.KerenzikovsBoostSystemBuff";
				} : ApplyStatusEffectEffector
			];
		} : GameplayLogicPackage
	];
	slotPartListPreset += 
	[
		{
			itemPartPreset = "Items.AdvancedKerenziovBoostSystemStatsShard";
		} : StatsShardSlotPart
	];
	CName cyberwareType = "KerenziovBoostSystem";
	buyPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "mid_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	sellPrice += 
	[
		{
			statType = "BaseStats.Price";
			modifierType = "Multiplier";
			id = "cyberware_curves";
			column = "mid_humanity_to_price_mult";
			refStat = "BaseStats.Quality";
			refObject = "Item";
		} : CurveStatModifier
	];
	nextUpgradeItem = "Items.AdvancedKerenziovBoostSystemCommonPlus";
}

AdvancedKerenziovBoostSystemStatsShard : CyberwareStatsShardStatic
{
	statModifiers += 
	[
		"Modifiers.ReloadSpeedPercentBonus", "Modifiers.ADSSpeedPercentBonus", "Modifiers.ADSSpeedPercentBonusQualityToggle", "Modifiers.VisibilityReduction", "Modifiers.VisibilityReductionToggle"
	];
}

[ notQueryable ]
AdvancedKerenziovBoostSystemCommonPlus : AdvancedKerenziovBoostSystemCommon
{
	quality = "Quality.CommonPlus";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#89437";
				floatValues = 
				[
					100f, 7f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.TimeDilationKerenzikovPlayerTimeScale";
					modifierType = "Additive";
					value = 0.05f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = 
					{
						statusEffect = "BaseStatusEffect.KerenzikovPlayerBuff";
						checkType = "CheckType.Record";
					} : StatusEffectPrereq;
					statusEffect = "BaseStatusEffect.KerenzikovsBoostSystemBuff";
				} : ApplyStatusEffectEffector
			];
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKerenziovBoostSystemUncommon";
}

[ notQueryable ]
AdvancedKerenziovBoostSystemUncommon : AdvancedKerenziovBoostSystemCommon
{
	quality = "Quality.Uncommon";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#89437";
				floatValues = 
				[
					100f, 7f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.TimeDilationKerenzikovPlayerTimeScale";
					modifierType = "Additive";
					value = 0.05f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = 
					{
						statusEffect = "BaseStatusEffect.KerenzikovPlayerBuff";
						checkType = "CheckType.Record";
					} : StatusEffectPrereq;
					statusEffect = "BaseStatusEffect.KerenzikovsBoostSystemBuff";
				} : ApplyStatusEffectEffector
			];
		} : GameplayLogicPackage
	];
	nextUpgradeItem = "Items.AdvancedKerenziovBoostSystemRare";
}

AdvancedKerenziovBoostSystemRare : AdvancedKerenziovBoostSystemCommon
{
	quality = "Quality.Rare";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#89437";
				floatValues = 
				[
					100f, 5f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.TimeDilationKerenzikovPlayerTimeScale";
					modifierType = "Additive";
					value = 0.05f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = 
					{
						statusEffect = "BaseStatusEffect.KerenzikovPlayerBuff";
						checkType = "CheckType.Record";
					} : StatusEffectPrereq;
					statusEffect = "BaseStatusEffect.KerenzikovsBoostSystemBuff";
				} : ApplyStatusEffectEffector
			];
		} : GameplayLogicPackage, 
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "Items.AdvancedKerenziovBoostSystemRarePlus";
}

[ notQueryable ]
AdvancedKerenziovBoostSystemRarePlus : AdvancedKerenziovBoostSystemCommonPlus
{
	quality = "Quality.RarePlus";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#89437";
				floatValues = 
				[
					100f, 7f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.TimeDilationKerenzikovPlayerTimeScale";
					modifierType = "Additive";
					value = 0.07f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = 
					{
						statusEffect = "BaseStatusEffect.KerenzikovPlayerBuff";
						checkType = "CheckType.Record";
					} : StatusEffectPrereq;
					statusEffect = "BaseStatusEffect.KerenzikovsBoostSystemBuff";
				} : ApplyStatusEffectEffector
			];
		} : GameplayLogicPackage, 
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "Items.AdvancedKerenziovBoostSystemEpic";
}

AdvancedKerenziovBoostSystemEpic : AdvancedKerenziovBoostSystemCommon
{
	quality = "Quality.Epic";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#89437";
				floatValues = 
				[
					100f, 10f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.TimeDilationKerenzikovPlayerTimeScale";
					modifierType = "Additive";
					value = 0.1f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = 
					{
						statusEffect = "BaseStatusEffect.KerenzikovPlayerBuff";
						checkType = "CheckType.Record";
					} : StatusEffectPrereq;
					statusEffect = "BaseStatusEffect.KerenzikovsBoostSystemBuff";
				} : ApplyStatusEffectEffector
			];
		} : GameplayLogicPackage, 
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "Items.AdvancedKerenziovBoostSystemEpicPlus";
}

[ notQueryable ]
AdvancedKerenziovBoostSystemEpicPlus : AdvancedKerenziovBoostSystemCommonPlus
{
	quality = "Quality.EpicPlus";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#89437";
				floatValues = 
				[
					100f, 12f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.TimeDilationKerenzikovPlayerTimeScale";
					modifierType = "Additive";
					value = 0.12f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = 
					{
						statusEffect = "BaseStatusEffect.KerenzikovPlayerBuff";
						checkType = "CheckType.Record";
					} : StatusEffectPrereq;
					statusEffect = "BaseStatusEffect.KerenzikovsBoostSystemBuff";
				} : ApplyStatusEffectEffector
			];
		} : GameplayLogicPackage, 
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "Items.AdvancedKerenziovBoostSystemLegendary";
}

AdvancedKerenziovBoostSystemLegendary : AdvancedKerenziovBoostSystemCommon
{
	quality = "Quality.Legendary";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#89437";
				floatValues = 
				[
					100f, 15f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.TimeDilationKerenzikovPlayerTimeScale";
					modifierType = "Additive";
					value = 0.15f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = 
					{
						statusEffect = "BaseStatusEffect.KerenzikovPlayerBuff";
						checkType = "CheckType.Record";
					} : StatusEffectPrereq;
					statusEffect = "BaseStatusEffect.KerenzikovsBoostSystemBuff";
				} : ApplyStatusEffectEffector
			];
		} : GameplayLogicPackage, 
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "Items.AdvancedKerenziovBoostSystemLegendaryPlus";
}

[ notQueryable ]
AdvancedKerenziovBoostSystemLegendaryPlus : AdvancedKerenziovBoostSystemCommonPlus
{
	quality = "Quality.LegendaryPlus";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#89437";
				floatValues = 
				[
					100f, 17f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.TimeDilationKerenzikovPlayerTimeScale";
					modifierType = "Additive";
					value = 0.17f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = 
					{
						statusEffect = "BaseStatusEffect.KerenzikovPlayerBuff";
						checkType = "CheckType.Record";
					} : StatusEffectPrereq;
					statusEffect = "BaseStatusEffect.KerenzikovsBoostSystemBuff";
				} : ApplyStatusEffectEffector
			];
		} : GameplayLogicPackage, 
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "Items.AdvancedKerenziovBoostSystemLegendaryPlusPlus";
}

[ notQueryable ]
[ EP1 ]
AdvancedKerenziovBoostSystemLegendaryPlusPlus : AdvancedKerenziovBoostSystemCommonPlus
{
	quality = "Quality.LegendaryPlusPlus";
	OnEquip = 
	[
		{
			UIData = 
			{
				localizedDescription = "LocKey#89437";
				floatValues = 
				[
					100f, 19f
				];
			};
			stats = 
			[
				{
					statType = "BaseStats.TimeDilationKerenzikovPlayerTimeScale";
					modifierType = "Additive";
					value = 0.19f;
				} : ConstantStatModifier
			];
			effectors = 
			[
				{
					prereqRecord = 
					{
						statusEffect = "BaseStatusEffect.KerenzikovPlayerBuff";
						checkType = "CheckType.Record";
					} : StatusEffectPrereq;
					statusEffect = "BaseStatusEffect.KerenzikovsBoostSystemBuff";
				} : ApplyStatusEffectEffector
			];
		} : GameplayLogicPackage, 
		"Attunements.ReflexesCritChance"
	];
	nextUpgradeItem = "";
}

