package Items
using RTDB, BaseStats

BaseDeck : SystemReplacementModule
{
	string friendlyName = "";
	displayName = "LocKey#842";
	localizedDescription = "LocKey#843";
	iconPath = "militech_paraline";
	fk< ItemBlueprint > blueprint = "Items.CyberdeckBlueprint2Slots";
	fk< SlotItemPartListElement >[] slotPartList = 
	[
		"Items.GenericRootSlotItem"
	];
	tags += 
	[
		"Cyberdeck"
	];
	fk< Quality > quality = "Quality.Common";
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.HasCyberdeck";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#49703";
			};
		} : GameplayLogicPackage, 
		{
			effectors = 
			[
				{
					prereqRecord = "Prereqs.AlwaysTruePrereq";
					effectorClassName = "UnlockMinigameProgramEffector";
					string networkAction = "MinigameAction.NetworkDataMineLootAll";
				} : Effector, 
				{
					prereqRecord = "Prereqs.AlwaysTruePrereq";
					effectorClassName = "UnlockMinigameProgramEffector";
					string networkAction = "MinigameAction.NetworkDataMineLootAllAdvanced";
				} : Effector, 
				{
					prereqRecord = "Prereqs.AlwaysTruePrereq";
					effectorClassName = "UnlockMinigameProgramEffector";
					string networkAction = "MinigameAction.NetworkDataMineLootAllMaster";
				} : Effector, 
				{
					prereqRecord = "Prereqs.AlwaysTruePrereq";
					effectorClassName = "UnlockMinigameProgramEffector";
					string networkAction = "MinigameAction.NetworkLowerICEMinorFirst";
				} : Effector, 
				{
				} : RemoveCooldownStatusEffectsEffector
			];
		} : GameplayLogicPackage
	];
	objectActions = 
	[
		"DeviceAction.MalfunctionClassHack", "DeviceAction.ToggleStateClassHack", "DeviceAction.TakeControlCameraClassHack", "QuickHack.RemoteBreach", "DeviceAction.RemoteBreach", "DeviceAction.DataExtractionClassHack"
	];
	CName cyberwareType = "Cyberdeck";
	buyPrice += 
	[
		"Price.Cyberdeck"
	];
	sellPrice += 
	[
		"Price.Cyberdeck"
	];
}

CyberdeckBlueprint2Slots : ItemBlueprint
{
	fk< ItemBlueprintElement > rootElement = 
	{
		fk< AttachmentSlot > slot = "AttachmentSlots.GenericItemRoot";
		fk< ItemBlueprintElement >[] childElements = 
		[
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram1";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram2";
			}
		];
	};
}

CyberdeckBlueprint3Slots : ItemBlueprint
{
	fk< ItemBlueprintElement > rootElement = 
	{
		fk< AttachmentSlot > slot = "AttachmentSlots.GenericItemRoot";
		fk< ItemBlueprintElement >[] childElements = 
		[
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram1";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram2";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram3";
			}
		];
	};
}

CyberdeckBlueprint4Slots : ItemBlueprint
{
	fk< ItemBlueprintElement > rootElement = 
	{
		fk< AttachmentSlot > slot = "AttachmentSlots.GenericItemRoot";
		fk< ItemBlueprintElement >[] childElements = 
		[
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram1";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram2";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram3";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram4";
			}
		];
	};
}

CyberdeckBlueprint5Slots : ItemBlueprint
{
	fk< ItemBlueprintElement > rootElement = 
	{
		fk< AttachmentSlot > slot = "AttachmentSlots.GenericItemRoot";
		fk< ItemBlueprintElement >[] childElements = 
		[
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram1";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram2";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram3";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram4";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram5";
			}
		];
	};
}

CyberdeckBlueprint6Slots : ItemBlueprint
{
	fk< ItemBlueprintElement > rootElement = 
	{
		fk< AttachmentSlot > slot = "AttachmentSlots.GenericItemRoot";
		fk< ItemBlueprintElement >[] childElements = 
		[
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram1";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram2";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram3";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram4";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram5";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram6";
			}
		];
	};
}

CyberdeckBlueprint7Slots : ItemBlueprint
{
	fk< ItemBlueprintElement > rootElement = 
	{
		fk< AttachmentSlot > slot = "AttachmentSlots.GenericItemRoot";
		fk< ItemBlueprintElement >[] childElements = 
		[
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram1";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram2";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram3";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram4";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram5";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram6";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram7";
			}
		];
	};
}

CyberdeckBlueprint8Slots : ItemBlueprint
{
	fk< ItemBlueprintElement > rootElement = 
	{
		fk< AttachmentSlot > slot = "AttachmentSlots.GenericItemRoot";
		fk< ItemBlueprintElement >[] childElements = 
		[
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram1";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram2";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram3";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram4";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram5";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram6";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram7";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram8";
			}
		];
	};
}

BeginnerCyberdeck : MilitechParaline
{
	fk< ItemBlueprint > blueprint = "Items.BeginnerCyberdeckBlueprint";
}

TutorialCyberdeck_Course3Stage01 : MilitechParaline
{
	fk< ItemBlueprint > blueprint = "Items.CyberdeckBlueprint2Slots";
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.HasCyberdeck";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.MemoryOutOfCombatRegenRate";
					modifierType = "Multiplier";
					value = 0.0;
				} : ConstantStatModifier
			];
		} : GameplayLogicPackage
	];
	objectActions = 
	[
		"DeviceAction.MalfunctionClassHack", "DeviceAction.PingDeviceTutorial", "QuickHack.PingHackTutorial", "QuickHack.GrenadeTutorialHack", "QuickHack.CommsCallInTutorialHack"
	];
	slotPartList = [];
}

TutorialCyberdeck_Course3Stage02 : MilitechParaline
{
	fk< ItemBlueprint > blueprint = "Items.CyberdeckBlueprint2Slots";
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.HasCyberdeck";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 10;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.BufferSize";
					modifierType = "Additive";
					value = 4;
				} : ConstantStatModifier
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#50363";
			};
		} : GameplayLogicPackage, 
		{
			effectors = 
			[
				{
					prereqRecord = "Prereqs.AlwaysTruePrereq";
					effectorClassName = "UnlockMinigameProgramEffector";
					string networkAction = "MinigameAction.NetworkDataMineLootAll";
				} : Effector, 
				{
					prereqRecord = "Prereqs.AlwaysTruePrereq";
					effectorClassName = "UnlockMinigameProgramEffector";
					string networkAction = "MinigameAction.NetworkLowerICETutorial";
				} : Effector
			];
		} : GameplayLogicPackage
	];
	objectActions = 
	[
		"DeviceAction.TakeControlCameraClassHack", "QuickHack.RemoteBreach", "QuickHack.GrenadeTutorialHack"
	];
	slotPartList = [];
}

TutorialCyberdeck_Course4Stage04 : MilitechParaline
{
	fk< ItemBlueprint > blueprint = "Items.CyberdeckBlueprint2Slots";
	fk< GameplayLogicPackage >[] OnEquip = 
	[
		{
			stats = 
			[
				{
					statType = "BaseStats.HasCyberdeck";
					modifierType = "Additive";
					value = 1;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.Memory";
					modifierType = "Additive";
					value = 10;
				} : ConstantStatModifier, 
				{
					statType = "BaseStats.BufferSize";
					modifierType = "Additive";
					value = 4;
				} : ConstantStatModifier
			];
			UIData = 
			{
				iconPath = "ability_silenced";
				localizedDescription = "LocKey#50363";
			};
		} : GameplayLogicPackage, 
		{
			effectors = 
			[
				{
					prereqRecord = "Prereqs.AlwaysTruePrereq";
					effectorClassName = "UnlockMinigameProgramEffector";
					string networkAction = "MinigameAction.NetworkLowerICEMinorFirst";
				} : Effector
			];
		} : GameplayLogicPackage
	];
	objectActions = 
	[
		"QuickHack.WeaponMalfunctionHack", "QuickHack.BlindHack", "QuickHack.SuicideLvl3Hack", "QuickHack.RemoteBreach"
	];
	slotPartList = [];
}

BeginnerCyberdeckBlueprint : ItemBlueprint
{
	fk< ItemBlueprintElement > rootElement = 
	{
		fk< AttachmentSlot > slot = "AttachmentSlots.GenericItemRoot";
		fk< ItemBlueprintElement >[] childElements = 
		[
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram1";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram2";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram3";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram4";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram5";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram6";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram7";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram8";
			}
		];
	};
}

SmasherCyberdeckBlueprint : ItemBlueprint
{
	fk< ItemBlueprintElement > rootElement = 
	{
		fk< AttachmentSlot > slot = "AttachmentSlots.GenericItemRoot";
		fk< ItemBlueprintElement >[] childElements = 
		[
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram1";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram2";
			}, 
			{
				fk< AttachmentSlot > slot = "AttachmentSlots.CyberdeckProgram3";
			}
		];
	};
}

RemoveCooldownStatusEffectsEffector : Effector
{
	fk< IPrereq > prereqRecord = "Prereqs.AlwaysTruePrereq";
	CName effectorClassName = "RemoveStatusEffectsEffector";
	string[] statusEffects = 
	[
		"BaseStatusEffect.RemoteBreachCooldown", "BaseStatusEffect.RebootOpticsCooldown", "BaseStatusEffect.SuicideCooldown", "BaseStatusEffect.SystemCollapseCooldown", "BaseStatusEffect.GrenadeCooldown", "BaseStatusEffect.MadnessCooldown", "BaseStatusEffect.OverloadCooldown", "BaseStatusEffect.BrainMeltCooldown", "BaseStatusEffect.OverheatCooldown", "BaseStatusEffect.CommsNoiseCooldown", "BaseStatusEffect.CallInCooldown", "BaseStatusEffect.WhistleCooldown", "BaseStatusEffect.MemoryWipeCooldown", "BaseStatusEffect.ContagionCooldown"
	];
}

