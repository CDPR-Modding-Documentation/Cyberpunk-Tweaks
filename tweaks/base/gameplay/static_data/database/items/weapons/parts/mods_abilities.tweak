package Items
using RTDB, Prereqs, Effectors, Perks, BaseStats

WeaponModAbilityBase : GameplayLogicPackage
{
}

PowerWeaponModAbilityBase : WeaponModAbilityBase
{
}

TechWeaponModAbilityBase : WeaponModAbilityBase
{
}

SmartWeaponModAbilityBase : WeaponModAbilityBase
{
}

PowerWeaponModAbility01 : PowerWeaponModAbilityBase
{
	effectors = 
	[
		{
			prereqRecord = "Prereqs.ProcessHitTriggered";
			statusEffect = "BaseStatusEffect.PowerWeaponMod01Debuff";
			bool isRandom = false;
		} : AddStatusEffectToAttackEffector
	];
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#40272";
		intValues = 
		[
			10, 10
		];
	};
}

PowerWeaponModAbility02 : PowerWeaponModAbilityBase
{
	effectors = 
	[
		{
			prereqRecord = "Prereqs.PowerWeaponHeldPrereq";
			fk< StatModifierGroup > statGroup = 
			{
				statModifiers = 
				[
					{
						statType = "BaseStats.SpreadChangePerShot";
						modifierType = "AdditiveMultiplier";
						value = -0.8f;
					} : ConstantStatModifier
				];
			} : StatModifierGroup;
		} : ApplyStatGroupOnWeapon
	];
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#40273";
		intValues = 
		[
			80
		];
	};
}

PowerWeaponModAbility03 : PowerWeaponModAbilityBase
{
	effectors = 
	[
		{
			prereqRecord = "Perks.PlayerIsAiming";
			statGroup = 
			{
				statModifiers = 
				[
					{
						statType = "BaseStats.RecoilEnableLinearY";
						modifierType = "Multiplier";
						value = 0f;
					} : ConstantStatModifier, 
					{
						statType = "BaseStats.RecoilEnableCycleY";
						modifierType = "Multiplier";
						value = 0f;
					} : ConstantStatModifier, 
					{
						statType = "BaseStats.RecoilEnableScaleY";
						modifierType = "Multiplier";
						value = 0f;
					} : ConstantStatModifier
				];
			};
		} : ApplyStatGroupOnWeapon
	];
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#45295";
	};
}

PowerWeaponModAbility04 : PowerWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#40275";
		intValues = 
		[
			6
		];
	};
}

PowerWeaponModAbility05 : PowerWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#40276";
		intValues = 
		[
			50
		];
	};
}

PowerWeaponModAbility06 : PowerWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedName = "LocKey#50275";
		localizedDescription = "LocKey#40277";
		intValues = 
		[
			20
		];
	};
}

TechWeaponModAbility01 : TechWeaponModAbilityBase
{
	effectors = 
	[
		{
			prereqRecord = 
			{
				conditions = 
				[
					{
						hitFlag = "WeaponFullyCharged";
					} : HitFlagHitPrereqCondition, 
					{
						float valueToCheck = 0f;
						CName objectToCheck = "Target";
						string statPoolToCompare = "Health";
						string comparisonType = "NotEqual";
					} : StatPoolHitPrereqCondition
				];
			} : ProcessHitTriggered;
			value = 1.1f;
		} : MultiplyDamage
	];
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#40284";
		intValues = 
		[
			10
		];
	};
}

TechWeaponModAbility02 : TechWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#40285";
	};
}

TechWeaponModAbility03 : TechWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#40286";
		floatValues = 
		[
			50
		];
	};
}

TechWeaponModAbility04 : TechWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#40287";
		intValues = 
		[
			50
		];
	};
}

TechWeaponModAbility05 : TechWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#40288";
		intValues = 
		[
			50
		];
	};
}

BuryaWeaponModAbility : TechWeaponModAbilityBase
{
	effectors = 
	[
		{
			prereqRecord = "Perks.PlayerIsAiming";
			fk< StatModifierGroup > statGroup = 
			{
				statModifiers = 
				[
					{
						statType = "BaseStats.DamagePerHit";
						modifierType = "Multiplier";
						value = 0.8f;
					} : ConstantStatModifier
				];
			} : StatModifierGroup;
		} : ApplyStatGroupOnWeapon
	];
}

SmartWeaponModAbility01 : SmartWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#40278";
		intValues = 
		[
			50
		];
	};
}

SmartWeaponModAbility02 : SmartWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#40279";
		intValues = 
		[
			2
		];
	};
}

SmartWeaponModAbility03 : SmartWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#40280";
		intValues = 
		[
			2, 2
		];
	};
}

SmartWeaponModAbility04 : SmartWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#40281";
		intValues = 
		[
			25
		];
	};
}

SmartWeaponModAbility05 : SmartWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#40283";
		intValues = 
		[
			50
		];
	};
}

IconicWeaponModAbilityBase : WeaponModAbilityBase
{
}

CassidyWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50741";
	};
}

RiverWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50136";
	};
}

KerryWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50902";
	};
}

SaratogaMaelstromWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#43089";
	};
}

YukimuraKijiWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50742";
	};
}

DoomDoomWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#43087";
	};
}

WilsonWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50743";
	};
}

FrankWeaponModAbility : IconicWeaponModAbilityBase
{
	effectors = 
	[
		{
			prereqRecord = "Perks.IsPlayerInCritHealth";
			CName effectorClassName = "ApplyStatGroupEffector";
			fk< StatModifierGroup > statGroup = 
			{
				statModifiers = 
				[
					{
						statType = "BaseStats.CycleTimeBonus";
						modifierType = "Additive";
						value = -0.4f;
					} : ConstantStatModifier, 
					{
						statType = "BaseStats.ReloadTimeBonus";
						modifierType = "Additive";
						value = -0.15f;
					} : ConstantStatModifier, 
					{
						statType = "BaseStats.EmptyReloadTime";
						modifierType = "Multiplier";
						value = 0.85f;
					} : ConstantStatModifier, 
					{
						statType = "BaseStats.PhysicalDamage";
						modifierType = "Multiplier";
						value = 1.5f;
					} : ConstantStatModifier
				];
			} : StatModifierGroup;
			applicationTarget = "Weapon";
		} : ApplyStatGroupEffector
	];
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50744";
	};
}

DennysBatWeaponModAbility : IconicWeaponModAbilityBase
{
	effectors = 
	[
		{
			prereqRecord = "Perks.IsAttackMelee";
			statusEffect = "BaseStatusEffect.Stun";
			float applicationChance = 0.2f;
		} : AddStatusEffectToAttackEffector, 
		{
			prereqRecord = "Perks.IsHitStrongAttack";
			statusEffect = "BaseStatusEffect.Stun";
			float applicationChance = 0.25f;
		} : AddStatusEffectToAttackEffector
	];
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50800";
	};
}

FingersCaneWeaponModAbility : IconicWeaponModAbilityBase
{
	effectors = 
	[
		{
			prereqRecord = "Perks.IsAttackMelee";
			statusEffect = "BaseStatusEffect.Electrocuted";
			float applicationChance = 0.15f;
		} : AddStatusEffectToAttackEffector
	];
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50803";
	};
}

RoyceWeaponModAbility : IconicWeaponModAbilityBase
{
	effectors = 
	[
		"Effectors.ChaosWeaponCritChanceCustomEffector", "Effectors.ChaosWeaponElementalDamageCustomEffector", "Effectors.ChaosWeaponDebuffApplicationCustomEffector"
	];
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#43009";
	};
}

GoldenKnuckleDustersWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50806";
	};
}

SuzieWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#45264";
	};
}

NashWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50813";
	};
}

BuckWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#43113";
	};
	effectors = 
	[
		{
			prereqRecord = 
			{
				isSynchronous = false;
				conditions += 
				[
					{
						weaponType = "Ranged";
					} : WeaponTypeHitPrereqCondition, 
					{
						hitFlag = "DotApplied";
						onlyOncePerShot = true;
					} : HitFlagHitPrereqCondition
				];
			} : IsHitTargetAlive;
			statusEffect = "BaseStatusEffect.Grad_Buck_Demolition_Buff";
		} : ApplyStatusEffectOnPlayer
	];
}

PanamWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50901";
	};
}

RaffenSaratogaWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50844";
	};
}

PrototypeShingenWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50873";
	};
}

RogueLibertyWeaponModAbility : IconicWeaponModAbilityBase
{
	effectors = 
	[
		{
			prereqRecord = "Perks.IsAttackRanged";
			statusEffect = "BaseStatusEffect.Stun";
			float applicationChance = 0.05f;
		} : AddStatusEffectToAttackEffector
	];
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50740";
	};
}

RogueMasamuneWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50891";
	};
}

SaburoKatanaWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#42986";
		floatValues = 
		[
			5, 20
		];
	};
}

ScorpionKnifeWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#80973";
		floatValues = 
		[
			100, 100
		];
	};
}

IconicNeurotoxinKnifeWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#81590";
		intValues = 
		[
			1, 3
		];
	};
}

IconicPunkKnifeWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#81589";
		intValues = 
		[
			250
		];
	};
}

MaikoNueWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#49714";
	};
}

CyberspadeWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50893";
	};
	effectors = 
	[
		{
			prereqRecord = 
			{
				conditions += 
				[
					{
						statusEffect = "Unconscious";
						checkType = "CheckType.Type";
						invert = true;
					} : StatusEffectPresentHitPrereqCondition
				];
			} : IsTargetKilled;
			effectorClassName = "ModifyStatPoolValueEffector";
			statPoolUpdates = 
			[
				{
					statPoolType = "BaseStatPools.Health";
					statPoolValue = 20;
				} : StatPoolUpdate
			];
			bool usePercent = true;
		} : Effector
	];
}

MoxCarnageWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50894";
	};
}

DildoWeaponModAbility : IconicWeaponModAbilityBase
{
	effectors = 
	[
		{
			prereqRecord = "Perks.HitIsBodyPartHead";
			value = 0.169f;
		} : AddCritChance, 
		{
			prereqRecord = "Perks.IsHitStrongAttack";
			statusEffect = "BaseStatusEffect.Stun";
			float applicationChance = 0.069f;
		} : AddStatusEffectToAttackEffector
	];
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50895";
	};
}

TinkerBellWeaponModAbility : IconicWeaponModAbilityBase
{
	effectors = 
	[
		{
			prereqRecord = "Perks.IsHitStrongAttack";
			statusEffect = "BaseStatusEffect.Unconscious";
			float applicationChance = 0.2f;
		} : AddStatusEffectToAttackEffector
	];
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50896";
	};
}

SurgeonKatanaWeaponModAbility : IconicWeaponModAbilityBase
{
	effectors = 
	[
		{
			prereqRecord = 
			{
				string stateName = "Sandevistan";
				bool isInState = true;
			} : Prereqs.TimeDilationPSMPrereq;
			fk< Effector > effectorToApply = 
			{
				prereqRecord = "Perks.IsAttackMelee";
				value = 50f;
			} : AddCritChance;
		} : ApplyEffectorOnPlayer, 
		{
			prereqRecord = 
			{
				string stateName = "Sandevistan";
				bool isInState = true;
			} : Prereqs.TimeDilationPSMPrereq;
			fk< Effector > effectorToApply = 
			{
				prereqRecord = "Perks.IsHitStrongAttack";
				value = 50f;
			} : AddCritChance;
		} : ApplyEffectorOnPlayer, 
		{
			prereqRecord = 
			{
				string stateName = "Sandevistan";
				bool isInState = true;
			} : Prereqs.TimeDilationPSMPrereq;
			fk< Effector > effectorToApply = 
			{
				prereqRecord = "Perks.IsAttackMelee";
				statusEffect = "BaseStatusEffect.Bleeding";
				float applicationChance = 1f;
			} : AddStatusEffectToAttackEffector;
		} : ApplyEffectorOnPlayer, 
		{
			prereqRecord = 
			{
				string stateName = "Sandevistan";
				bool isInState = true;
			} : Prereqs.TimeDilationPSMPrereq;
			fk< Effector > effectorToApply = 
			{
				prereqRecord = "Perks.IsHitStrongAttack";
				statusEffect = "BaseStatusEffect.Bleeding";
				float applicationChance = 1f;
			} : AddStatusEffectToAttackEffector;
		} : ApplyEffectorOnPlayer
	];
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50897";
	};
}

CocktailStickWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50898";
	};
}

DexLibertyWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#43123";
	};
}

HiromiKatanaWeaponModAbility : IconicWeaponModAbilityBase
{
	effectors = 
	[
		{
			prereqRecord = "Perks.IsHitBlockAttack";
			value = 1.5f;
		} : MultiplyDamage, 
		{
			prereqRecord = "Perks.IsHitSprintAttack";
			value = 1.5f;
		} : MultiplyDamage, 
		{
			prereqRecord = "Perks.IsHitCrouchAttack";
			value = 1.5f;
		} : MultiplyDamage, 
		{
			prereqRecord = "Perks.IsHitJumpAttack";
			value = 1.5f;
		} : MultiplyDamage
	];
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50899";
	};
}

TakemuraKatanaWeaponModAbility : IconicWeaponModAbilityBase
{
	effectors = 
	[
		{
			prereqRecord = 
			{
				statusEffect = "BaseStatusEffect.KerenzikovPlayerBuff";
				checkType = "CheckType.Record";
			} : StatusEffectPrereq;
			effectorToApply = 
			{
				prereqRecord = 
				{
					nestedPrereqs = 
					[
						"Perks.IsHitStrongAttack", "Perks.IsAttackMelee"
					];
				} : ORPrereq;
				value = 100f;
			} : AddCritChance;
		} : ApplyEffectorOnPlayer, 
		{
			prereqRecord = "Perks.IsHitFinalAttack";
			value = 2.0f;
		} : MultiplyDamage, 
		{
			prereqRecord = "Perks.TargetHasMoreHealthThanInstigator";
			value = 2.0f;
		} : MultiplyDamage
	];
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50900";
	};
}

JackieNueWeaponModAbility : IconicWeaponModAbilityBase
{
	effectors = 
	[
		{
			prereqRecord = "Perks.IsAttackRanged";
			statusEffect = "BaseStatusEffect.Stun";
			float applicationChance = 0.05f;
		} : AddStatusEffectToAttackEffector
	];
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#43116";
	};
}

YorinobuLibertyWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#43104";
	};
}

SidewinderDividedWeaponModAbility : IconicWeaponModAbilityBase
{
	effectors = 
	[
		{
			prereqRecord = "Perks.IsAttackRanged";
			attackRecord = "Attacks.BiotechGrenadeV2";
			bool isRandom = true;
			applicationChance = 0.066f;
		} : Effectors.TriggerAttackOnTargetEffect
	];
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50912";
	};
}

PadreLibertyWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#81196";
	};
	effectors = 
	[
		{
			prereqRecord = 
			{
				isSynchronous = true;
				conditions += 
				[
					{
						npcType = "Any";
						invert = true;
					} : TargetNPCTypeHitPrereqCondition, 
					{
						attackType = "Ranged";
					} : AttackTypeHitPrereqCondition, 
					{
						weaponType = "Ranged";
					} : WeaponTypeHitPrereqCondition, 
					{
						hitFlag = "DotApplied";
						invert = true;
					} : HitFlagHitPrereqCondition, 
					{
						statusEffect = "Liberty_Padre_Burning";
						checkType = "CheckType.Record";
						invert = true;
					} : StatusEffectPresentHitPrereqCondition
				];
			} : IsHitTargetAlive;
			statusEffect = "BaseStatusEffect.Liberty_Padre_BurningChanceBuff";
		} : ApplyStatusEffectOnPlayer, 
		{
			prereqRecord = 
			{
				isSynchronous = false;
				conditions += 
				[
					{
						attackType = "Ranged";
					} : AttackTypeHitPrereqCondition, 
					{
						weaponType = "Ranged";
					} : WeaponTypeHitPrereqCondition, 
					{
						hitFlag = "DotApplied";
					} : HitFlagHitPrereqCondition
				];
			} : PostProcessHitTriggered;
			statusEffects = 
			[
				"BaseStatusEffect.Liberty_Padre_BurningChanceBuff"
			];
		} : RemoveStatusEffectsEffector, 
		{
			prereqRecord = 
			{
				conditions += 
				[
					{
						attackType = "Ranged";
					} : AttackTypeHitPrereqCondition, 
					{
						weaponType = "Ranged";
					} : WeaponTypeHitPrereqCondition, 
					{
						statusEffect = "Liberty_Padre_Burning";
						checkType = "CheckType.Record";
						objectToCheck = "Target";
						invert = false;
					} : StatusEffectPresentHitPrereqCondition
				];
			} : PreProcessHitTriggered;
			value = 1.25f;
		} : MultiplyDamage
	];
}

TacticianDinoWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#81197";
	};
}

WakakoKatanaWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#81198";
	};
}

ButchersKnifeWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#81861";
	};
	effectors = 
	[
		{
			prereqRecord = 
			{
				isSynchronous = false;
				conditions += 
				[
					{
						npcType = "Human";
						invert = false;
					} : TargetNPCTypeHitPrereqCondition, 
					{
						weaponType = "Melee";
					} : WeaponTypeHitPrereqCondition, 
					{
						hitFlag = "DotApplied";
						onlyOncePerShot = true;
					} : HitFlagHitPrereqCondition
				];
			} : IsHitTargetAlive;
			statusEffect = "BaseStatusEffect.Butchers_Cleaver_Bloodlust_Buff";
		} : ApplyStatusEffectOnPlayer, 
		{
			prereqRecord = 
			{
				conditions += 
				[
					{
						npcType = "Human";
						invert = false;
					} : TargetNPCTypeHitPrereqCondition, 
					{
						weaponType = "Melee";
					} : WeaponTypeHitPrereqCondition, 
					{
						statusEffect = "Bleeding";
						checkType = "CheckType.Type";
						objectToCheck = "Target";
						invert = false;
					} : StatusEffectPresentHitPrereqCondition
				];
			} : IsHitTargetAlive;
			statusEffect = "BaseStatusEffect.Butchers_Cleaver_Bloodlust_Buff";
		} : ApplyStatusEffectOnPlayer
	];
}

TinyMikeWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#82708";
	};
	effectors = 
	[
		{
			prereqRecord = 
			{
				conditions = 
				[
					{
						ammoState = "LastBullet";
					} : AmmoStateHitPrereqCondition
				];
			} : ProcessHitTriggered;
			value = 100f;
		} : AddCritChance
	];
}

EdgerunnersCarnageWeaponModAbility : IconicWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#84179";
	};
	effectors = 
	[
		{
			prereqRecord = 
			{
				conditions += 
				[
					{
						statusEffect = "Defeated";
						checkType = "CheckType.Type";
						invert = true;
					} : StatusEffectPresentHitPrereqCondition, 
					{
						weaponType = "Ranged";
					} : WeaponTypeHitPrereqCondition
				];
			} : IsTargetKilled;
			statusEffect = "BaseStatusEffect.Carnage_Edgerunners_Buff";
		} : ApplyStatusEffectOnPlayer
	];
}

LegendaryWeaponModAbilityBase : WeaponModAbilityBase
{
}

IglaSovereignWeaponModAbility : LegendaryWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50904";
	};
	effectors = 
	[
		{
			prereqRecord = "Perks.PlayerIsAiming";
			fk< StatModifierGroup > statGroup = 
			{
				statModifiers = 
				[
					{
						statType = "BaseStats.DamagePerHit";
						modifierType = "Multiplier";
						value = 0.6f;
					} : ConstantStatModifier
				];
			} : StatModifierGroup;
		} : ApplyStatGroupOnWeapon
	];
}

ZhuoEightStarWeaponModAbility : LegendaryWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50903";
	};
}

BuryaHammerWeaponModAbility : LegendaryWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50906";
	};
}

PulsarBuzzsawWeaponModAbility : LegendaryWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50905";
	};
}

DianYinglongWeaponModAbility : LegendaryWeaponModAbilityBase
{
	effectors = 
	[
		{
			prereqRecord = "Perks.IsAttackRanged";
			attackRecord = "Attacks.EMPGrenade";
			bool isRandom = true;
			applicationChance = 0.12f;
		} : Effectors.TriggerAttackOnTargetEffect
	];
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50911";
	};
}

TacticianHeadsmanWeaponModAbility : LegendaryWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50910";
	};
}

CopperheadGenesisWeaponModAbility : LegendaryWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50909";
	};
}

AjaxMoronWeaponModAbility : LegendaryWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50907";
	};
}

NekomataBreakthroughWeaponModAbility : LegendaryWeaponModAbilityBase
{
	UIData = 
	{
		iconPath = "ability_offensive";
		localizedDescription = "LocKey#50908";
	};
}

