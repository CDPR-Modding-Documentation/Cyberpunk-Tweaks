package Items
using RTDB, BaseStats, WeaponFxPackage, Proficiencies, Prereqs

[ notQueryable ]
Base_Handgun : Base_Weapon
{
	fk< ItemType > itemType = "ItemType.Wea_Handgun";
	triggerEffectName = "te_wea_aim_fast";
	fk< Attack >[] attacks += 
	[
		"Attacks.SuicideBulletEffect", "Attacks.SuicideBulletProjectile"
	];
	buyPrice += 
	[
		"Price.HandgunMultiplier"
	];
	sellPrice += 
	[
		"Price.HandgunMultiplier"
	];
	shootingPatternPackages = 
	[
		"ShootingPatterns.ChargedShootShootingPackage", "ShootingPatterns.BurstShootingPackage", "ShootingPatterns.FullAutoPistolSmartShootingPackage", "ShootingPatterns.FullAutoPistolShootingPackage"
	];
	tags += 
	[
		"OneHandedRangedWeapon", "DriverCombatRangedWeapon", "DriverCombatBikeWeapon"
	];
	statModifierGroups += 
	[
		"Items.Base_Handgun_RPG_Stats", "Items.Base_Handgun_Misc_Stats", "Items.Base_Handgun_Sway_Stats", "Items.Base_PlayerState_Spread_Stats"
	];
	Vector3 position = ( 0.0f, 0.0f, 0.047f );
	float offset = 0.f;
	fk< GameplayLogicPackage >[] OnAttach += 
	[
		{
			animationWrapperOverrides = 
			[
				"w_base_handgun"
			];
		} : GameplayLogicPackage
	];
}

Base_Handgun_RPG_Stats : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.Weight";
			modifierType = "Additive";
			value = 3.3f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.HeadshotDamageMultiplier";
			modifierType = "Additive";
			value = 1.5f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WeaponTypeToStaminaCost";
			modifierType = "Multiplier";
			value = 120f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.WeaponVehicleDamagePercentBonus";
			modifierType = "Additive";
			value = 0.3f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.StaminaCostReduction";
			modifierType = "Additive";
			refObject = "Player";
			refStat = "BaseStats.HandgunStaminaCostReduction";
			opSymbol = "*";
			value = 1f;
		} : CombinedStatModifier
	];
}

Base_Handgun_Misc_Stats : StatModifierGroup
{
	statModifiers = 
	[
		{
			float value = 0.25f;
		} : UnequipDurationModifier, 
		{
			float value = 0.3f;
		} : EquipDurationModifier, 
		"BaseStats.UnequipDurationModifier", "BaseStats.SlideWhenLeaningOutOfCoverModifier", "BaseStats.BlockLocomotionWhenLeaningOutOfCoverModifier", {
			statType = "BaseStats.BulletMagnetismDefaultAngle";
			modifierType = "Additive";
			value = 0.3f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.BulletMagnetismHighVelocityAngle";
			modifierType = "Additive";
			value = 1.0f;
		} : ConstantStatModifier, 
		{
			float value = 30.f;
		} : EffectiveRangeModifier, 
		{
			value = 100.f;
		} : MaximumRangeModifier, 
		{
			float value = 1.f;
		} : RecoilRecoveryMinSpeedModifier, 
		{
			float value = 30.f;
		} : RecoilMaxLengthModifier, 
		{
			float value = 10.f;
		} : PhysicalImpulseModifier, 
		{
			float value = 25.f;
		} : KnockdownImpulseModifier, 
		{
			float value = 25.f;
		} : BaseKnockdownImpulseModifier, 
		{
			float value = 25.f;
		} : BaseEvadeImpulseModifier, 
		{
			value = 0.15f;
		} : AimInTimeModifier, 
		{
			value = 0.2f;
		} : AimOutTimeModifier, 
		{
			statType = "BaseStats.HitDismembermentFactor";
			modifierType = "Multiplier";
			value = 0.5f;
		} : ConstantStatModifier
	];
}

Base_Handgun_DeadReckoning_Stats : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.BulletDeadReckoningEnabled";
			modifierType = "Additive";
			value = 1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.BulletDeadReckoningMinimumSpeed";
			modifierType = "Additive";
			value = 0.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.BulletDeadReckoningMaxRange";
			modifierType = "Additive";
			value = 40.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.BulletDeadReckoningMaxAngleCorrection";
			modifierType = "Additive";
			value = 25.f;
		} : ConstantStatModifier
	];
}

Base_Handgun_NPC_Stats : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.CanUseCloseRing";
			modifierType = "Additive";
			value = 1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.CanUseMediumRing";
			modifierType = "Additive";
			value = 1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.CanUseFarRing";
			modifierType = "Additive";
			value = 1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.CanUseExtremeRing";
			modifierType = "Additive";
			value = 1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.HitDismembermentFactor";
			modifierType = "Multiplier";
			value = 0.5f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.HitReactionFactor";
			modifierType = "Additive";
			value = 2.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.HitWoundsFactor";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.HitDismembermentFactor";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			value = 0.3f;
		} : ShootingOffsetAIModifier, 
		{
			float value = 10.f;
		} : PhysicalImpulseModifier, 
		{
			float value = 25.f;
		} : KnockdownImpulseModifier, 
		{
			float value = 25.f;
		} : BaseKnockdownImpulseModifier, 
		{
			float value = 25.f;
		} : BaseEvadeImpulseModifier, 
		{
			value = 0.22f;
		} : EquipItemTime_GangModifier, 
		{
			value = 0.3f;
		} : EquipAnimationDuration_GangModifier, 
		{
			value = 0.7f;
		} : EquipActionDuration_GangModifier, 
		{
			value = 0.434f;
		} : UnequipItemTime_GangModifier, 
		{
			value = 1.033f;
		} : UnequipAnimationDuration_GangModifier, 
		{
			value = 1.1f;
		} : UnequipDuration_GangModifier, 
		{
			value = 0.068f;
		} : EquipItemTime_CorpoModifier, 
		{
			value = 0.5f;
		} : EquipAnimationDuration_CorpoModifier, 
		{
			value = 0.733f;
		} : EquipActionDuration_CorpoModifier, 
		{
			value = 0.5f;
		} : UnequipItemTime_CorpoModifier, 
		{
			value = 1.033f;
		} : UnequipAnimationDuration_CorpoModifier, 
		{
			value = 1.1f;
		} : UnequipDuration_CorpoModifier
	];
}

Base_Handgun_Sway_Stats : StatModifierGroup
{
	statModifiers = 
	[
		{
			value = 0.f;
		} : SwayResetOnAimStartModifier, 
		{
			value = 6.f;
		} : SwayTraversalTimeModifier, 
		{
			value = 1.8f;
		} : SwaySideMaximumAngleDistanceModifier, 
		{
			value = 1.6f;
		} : SwaySideMinimumAngleDistanceModifier, 
		{
			value = 60.f;
		} : SwaySideTopAngleLimitModifier, 
		{
			value = 60.f;
		} : SwaySideBottomAngleLimitModifier, 
		{
			value = 0.05f;
		} : SwaySideStepChangeMaximumFactorModifier, 
		{
			value = 0.05f;
		} : SwaySideStepChangeMinimumFactorModifier, 
		{
			value = 0.4f;
		} : SwayCurvatureMaximumFactorModifier, 
		{
			value = 0.3f;
		} : SwayCurvatureMinimumFactorModifier, 
		{
			value = 0.4f;
		} : SwayCenterMaximumAngleOffsetModifier, 
		{
			value = 0.0f;
		} : SwayInitialOffsetRandomFactorModifier, 
		{
			value = 0.03f;
		} : SwayStartDelayModifier, 
		{
			value = 2.0f;
		} : SwayStartBlendTimeModifier, 
		{
			statType = "BaseStats.RecoilDriftRandomRangeMin";
			modifierType = "Additive";
			value = 0.2f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilDriftRandomRangeMax";
			modifierType = "Additive";
			value = 0.5f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilMagForFullDrift";
			modifierType = "Additive";
			value = 3.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilAnimation";
			modifierType = "Additive";
			value = 1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.SpreadAnimation";
			modifierType = "Additive";
			value = 1.f;
		} : ConstantStatModifier
	];
}

Base_Handgun_Mult_Stats : StatModifierGroup
{
}

Base_Handgun_NPC_Data : Base_NPC_RPG_Data
{
	statModifiers += 
	[
		"AttackModifier.HandgunMinTBH", "AttackModifier.HandgunMinLineOfSight"
	];
	statModifierGroups += 
	[
		"Items.Base_Handgun_NPC_Stats"
	];
}

[ notQueryable ]
Base_Power_Handgun : Base_Handgun
{
	buyPrice += 
	[
		"Price.PowerWeapon"
	];
	sellPrice += 
	[
		"Price.PowerWeapon"
	];
	tags += 
	[
		"PowerWeapon"
	];
	fk< ItemBlueprint > blueprint = "Items.Base_Power_Handgun_Blueprint";
	rangedAttacks = "Attacks.PowerBulletsBulletPackage";
	previewEffectName = "weaponPreview";
	previewEffectTag = "ricochet";
	statModifierGroups += 
	[
		"Items.Base_Power_Stats", "Items.Base_Power_Handgun_Mult_Stats", "Items.Base_Power_Handgun_Stats", "Items.Base_Handgun_DeadReckoning_Stats"
	];
}

Base_Power_Handgun_Stats : StatModifierGroup
{
	statModifiers = 
	[
		{
			value = 0.05f;
		} : RicochetChanceModifier, 
		{
			statType = "BaseStats.RicochetChance";
			modifierType = "Additive";
			refObject = "Player";
			refStat = "BaseStats.HasPowerGrip";
			opSymbol = "*";
			value = 0.95f;
		} : CombinedStatModifier, 
		{
			value = 1.f;
		} : RicochetCountModifier, 
		{
			value = 12.5f;
		} : RicochetTargetSearchAngleModifier, 
		{
			value = 0.f;
		} : RicochetMinAngleModifier, 
		{
			value = 60.f;
		} : RicochetMaxAngleModifier
	];
}

Base_Power_Handgun_Mult_Stats : StatModifierGroup
{
	statModifiers += 
	[
		{
			column = "amount_of_possible_mods_for_power_hg_to_quality";
		} : ModsAmountInGenerationPoolCurveModifier
	];
}

Base_Power_Handgun_NPC_Data : Base_Handgun_NPC_Data
{
	statModifierGroups += 
	[
	];
	statModifiers += 
	[
		{
			column = "amount_of_possible_mods_for_power_hg_to_quality";
		} : ModsAmountInGenerationPoolCurveModifier
	];
}

Broken_Power_Handgun_NPC_Data : Base_Power_Handgun_NPC_Data
{
	statModifiers += 
	[
		"Quality.BrokenItem"
	];
}

[ notQueryable ]
Base_Tech_Handgun : Base_Handgun
{
	buyPrice += 
	[
		"Price.TechWeapon"
	];
	sellPrice += 
	[
		"Price.TechWeapon"
	];
	tags += 
	[
		"TechWeapon"
	];
	fk< ItemBlueprint > blueprint = "Items.Base_Tech_Handgun_NoMuzzle_Blueprint";
	statModifierGroups += 
	[
		"Items.Base_Tech_Stats", "Items.Base_Tech_Handgun_Mult_Stats", "Items.Base_Handgun_DeadReckoning_Stats"
	];
}

Base_Tech_Handgun_Mult_Stats : StatModifierGroup
{
	statModifiers += 
	[
		"AttackModifier.TechWeaponDPSReduction", {
			column = "amount_of_possible_mods_for_tech_hg_to_quality";
		} : ModsAmountInGenerationPoolCurveModifier
	];
}

Base_Tech_Handgun_RPG_Stats : StatModifierGroup
{
	statModifiers = [];
}

Base_Tech_Handgun_NPC_Data : Base_Handgun_NPC_Data
{
	statModifierGroups += 
	[
	];
	statModifiers += 
	[
		{
			column = "amount_of_possible_mods_for_tech_hg_to_quality";
		} : ModsAmountInGenerationPoolCurveModifier
	];
}

Broken_Tech_Handgun_NPC_Data : Base_Tech_Handgun_NPC_Data
{
	statModifiers += 
	[
		"Quality.BrokenItem"
	];
}

[ notQueryable ]
Base_Smart_Handgun : Base_Handgun
{
	tags += 
	[
		"Smart", "SmartWeapon"
	];
	buyPrice += 
	[
		"Price.SmartWeapon"
	];
	sellPrice += 
	[
		"Price.SmartWeapon"
	];
	blueprint = "Items.Base_Smart_Handgun_NoMuzzle_Blueprint";
	statModifierGroups = 
	[
		"Items.Base_Smart_Stats", "Items.Base_Smart_Handgun_Mult_Stats", "Items.Base_Smart_Handgun_No_Sway_Stats", "Items.Base_Handgun_RPG_Stats", "Items.Base_Handgun_Misc_Stats", "Items.Base_PlayerState_Spread_Stats", "Items.Base_Weapon_Damage_Type_Min_Max", "Items.Base_Weapon_Damage_Type_Physical", "Items.QualityRandomization", "Items.ItemPlusRandomizer_MaxQuality", "Items.ItemPlusRandomizer_Below_MaxQuality", "Items.WeaponModsWeights_On_Tier2Plus", "Items.WeaponModsWeights_On_Tier3Plus", "Items.WeaponModsWeights_On_Tier4Plus", "Items.WeaponModsWeights_On_Tier5Plus", "Items.WeaponModsWeights_On_Tier5PlusPlus"
	];
}

Base_Smart_Handgun_Mult_Stats : StatModifierGroup
{
	fk< StatModifier >[] statModifiers += 
	[
		"AttackModifier.SmartWeaponDPSReduction", {
			statType = "BaseStats.ItemRequiresSmartLink";
			modifierType = "Additive";
			value = 1;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.HeadshotDamageMultiplier";
			modifierType = "Additive";
			value = -0.15f;
		} : ConstantStatModifier, 
		{
			column = "amount_of_possible_mods_for_smart_hg_to_quality";
		} : ModsAmountInGenerationPoolCurveModifier
	];
}

Base_Smart_Handgun_No_Sway_Stats : StatModifierGroup
{
	statModifiers = 
	[
		{
			statType = "BaseStats.RecoilDriftRandomRangeMin";
			modifierType = "Additive";
			value = 0.7f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilDriftRandomRangeMax";
			modifierType = "Additive";
			value = 1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilMagForFullDrift";
			modifierType = "Additive";
			value = 3.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.RecoilAnimation";
			modifierType = "Additive";
			value = 1.f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.SpreadAnimation";
			modifierType = "Additive";
			value = 1.f;
		} : ConstantStatModifier
	];
}

Base_Smart_Handgun_NPC_Data : Base_Handgun_NPC_Data
{
	statModifierGroups += 
	[
		"Items.Base_NPC_SmartGun_Stats"
	];
	statModifiers += 
	[
		{
			column = "amount_of_possible_mods_for_smart_hg_to_quality";
		} : ModsAmountInGenerationPoolCurveModifier
	];
}

Broken_Smart_Handgun_NPC_Data : Base_Smart_Handgun_NPC_Data
{
	statModifiers += 
	[
		"Quality.BrokenItem"
	];
}

HandgunAndRevolverScopesPartList : SlotItemPartPreset
{
	slot = "AttachmentSlots.Scope";
	itemPartList = 
	[
		{
			item = "";
			weight = 0.85f;
		}, 
		{
			item = "Items.w_att_scope_short_01_Generated";
			weight = 0.05f;
		}, 
		{
			item = "Items.w_att_scope_short_03_Generated";
			weight = 0.05f;
		}, 
		{
			item = "Items.w_att_scope_short_06_Generated";
			weight = 0.05f;
		}
	];
}

HandgunPossibleScopesList : SlotItemPartListElement
{
	slot = "AttachmentSlots.Scope";
	itemPartList = 
	[
		{
			item = "Items.w_att_scope_short_01";
		}, 
		{
			item = "Items.w_att_scope_short_01_Generated";
		}, 
		{
			item = "Items.w_att_scope_short_01_Craftable";
		}, 
		{
			item = "Items.w_att_scope_short_02";
		}, 
		{
			item = "Items.w_att_scope_short_03";
		}, 
		{
			item = "Items.w_att_scope_short_03_Generated";
		}, 
		{
			item = "Items.w_att_scope_short_03_Craftable";
		}, 
		{
			item = "Items.w_att_scope_short_04";
		}, 
		{
			item = "Items.w_att_scope_short_05";
		}, 
		{
			item = "Items.w_att_scope_short_06";
		}, 
		{
			item = "Items.w_att_scope_short_06_Generated";
		}, 
		{
			item = "Items.w_att_scope_short_06_Craftable";
		}, 
		{
			item = "Items.w_att_scope_short_06_legendary";
		}, 
		{
			item = "Items.w_att_scope_short_07";
		}, 
		{
			item = "Items.w_att_scope_short_07_legendary";
		}, 
		{
			item = "Items.Lexington_Shooting_Competition_scope";
		}, 
		{
			item = "Items.Headsman_scope";
		}
	];
}

HandgunPossibleMuzzleBraksList : SlotItemPartListElement
{
	slot = "AttachmentSlots.PowerModule";
	itemPartList = 
	[
		{
			item = "Items.w_muzzle_brake_07";
		}, 
		{
			item = "Items.w_muzzle_brake_08";
		}, 
		{
			item = "Items.w_muzzle_brake_09";
		}, 
		{
			item = "Items.w_muzzle_brake_09_Craftable";
		}, 
		{
			item = "Items.w_muzzle_brake_09_legendary";
		}, 
		{
			item = "Items.w_muzzle_brake_10";
		}, 
		{
			item = "Items.w_muzzle_brake_10_legendary";
		}, 
		{
			item = "Items.w_muzzle_brake_11";
		}
	];
}

