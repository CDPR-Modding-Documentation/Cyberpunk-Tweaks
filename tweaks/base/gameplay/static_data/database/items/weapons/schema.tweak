package RTDB

WeaponItem : Item
{
	mass = 20.0f;
	CName[] tags = 
	[
		"Weapon"
	];
	fk< TriggerMode >[] triggerModes = [];
	fk< TriggerMode > primaryTriggerMode = "";
	fk< TriggerMode > secondaryTriggerMode = "";
	CName triggerEffectName = "";
	fk< Attack >[] attacks = [];
	fk< RangedAttackPackage > rangedAttacks = "";
	fk< ParentAttachmentType > parentAttachmentType = "ParentAttachmentType.Slot";
	fk< WeaponManufacturer > manufacturer = "WeaponManufacturer.Street";
	fk< WeaponEvolution > evolution = "WeaponEvolution.Power";
	fk< WeaponFxPackage > fxPackage = "WeaponFxPackage.WeaponBase";
	fk< WeaponFxPackage > fxPackageQuickMelee = "WeaponFxPackage.WeaponBase";
	fk< Item > ammo = "Ammo.Standard";
	fk< DamageType > damageType = "DamageTypes.Physical";
	fk< ItemCategory > itemCategory = "ItemCategory.Weapon";
	fk< AttachmentSlot >[] placementSlots = 
	[
		"AttachmentSlots.WeaponRight", "AttachmentSlots.WeaponLeft"
	];
	fk< EquipmentArea > equipArea = "EquipmentArea.Weapon";
	fk< Item > holsteredItem = "";
	fk< Crosshair > crosshair = "Crosshairs.Simple";
	CName NPCAnimWrapperWeightOverride = "";
	fk< AIPatternsPackage >[] shootingPatternPackages = [];
	Vector3 ikOffset = ( 0.0f, 0.0f, 0.0f );
	CName animFeatureName = "WeaponData";
	CName projectileEaseOutCurveName = "ProjectileEaseOut";
	CName effectiveRangeCurve = "";
	CName effectiveRangeFalloffCurve = "";
	CName previewEffectName = "";
	CName previewEffectTag = "";
	int forcedMinHitReaction = -1;
	CName audioWeaponConfiguration = "";
	bool isSingleInstance = false;
	float baseReloadTime = 0.f;
	float baseEmptyReloadTime = 0.f;
	float uninterruptibleEmptyReloadStart = 0.f;
	float uninterruptibleReloadStart = 0.f;
	bool useForcedTBHZOffset = false;
	bool IsIKEnabled = true;
	bool UseShootVFXOnlyOnFirstShot = false;
	fk< UIIcon > hudIcon = "HUDWeaponIcons.Default";
	LocKey gameplayDescription = "";
	buyPrice += 
	[
		"Price.BrokenItemPriceMult"
	];
	sellPrice += 
	[
		"Price.WeaponSellMultiplier", "Price.BrokenItemPriceMult"
	];
}

