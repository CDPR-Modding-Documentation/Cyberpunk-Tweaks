package AttackDirections
using RTDB

UpToDown : AttackDirection
{
	fk< MeleeAttackDirection > direction = "MeleeAttackDirection.UpToDown";
	Vector3 startPosition = ( 0.f, 0.f, 0.3f );
	Vector3 endPosition = ( 0.f, 0.f, -0.4f );
}

DownToUp : AttackDirection
{
	fk< MeleeAttackDirection > direction = "MeleeAttackDirection.DownToUp";
	Vector3 startPosition = ( 0.f, 0.f, -0.5f );
	Vector3 endPosition = ( 0.f, 0.f, 0.5f );
}

RightToLeft : AttackDirection
{
	fk< MeleeAttackDirection > direction = "MeleeAttackDirection.RightToLeft";
	Vector3 startPosition = ( 0.5f, 0, 0 );
	Vector3 endPosition = ( -0.5f, 0, 0 );
}

RightUpToLeftDown : AttackDirection
{
	fk< MeleeAttackDirection > direction = "MeleeAttackDirection.RightUpToLeftDown";
	Vector3 startPosition = ( 0.5f, 0, 0.2f );
	Vector3 endPosition = ( -0.5f, 0, -0.4f );
}

RightDownToLeftUp : AttackDirection
{
	fk< MeleeAttackDirection > direction = "MeleeAttackDirection.RightDownToLeftUp";
	Vector3 startPosition = ( 0.5f, 0, -0.4f );
	Vector3 endPosition = ( -0.5f, 0, 0.2f );
}

RightToLeftWide : AttackDirection
{
	fk< MeleeAttackDirection > direction = "MeleeAttackDirection.RightToLeft";
	Vector3 startPosition = ( 2.0f, 0, 0 );
	Vector3 endPosition = ( -2.0f, 0, 0 );
}

MountedRightToLeftWide : AttackDirection
{
	direction = "MeleeAttackDirection.RightToLeft";
	useMiddlePosition = true;
	startPosition = ( 1.5f, -1.f, 0.25f );
	middlePosition = ( 0.f, 0.25f, 0.25f );
	endPosition = ( -1.5f, -0.5f, 0.25f );
}

LeftToRight : AttackDirection
{
	fk< MeleeAttackDirection > direction = "MeleeAttackDirection.LeftToRight";
	Vector3 startPosition = ( -0.55f, 0, 0 );
	Vector3 endPosition = ( 0.55f, 0, 0 );
}

LeftDownToRightUp : AttackDirection
{
	fk< MeleeAttackDirection > direction = "MeleeAttackDirection.LeftDownToRightUp";
	Vector3 startPosition = ( -0.5f, 0, -0.4f );
	Vector3 endPosition = ( 0.5f, 0, 0.2f );
}

LeftUpToRightDown : AttackDirection
{
	fk< MeleeAttackDirection > direction = "MeleeAttackDirection.LeftUpToRightDown";
	Vector3 startPosition = ( -0.5f, 0, 0.2f );
	Vector3 endPosition = ( 0.5f, 0, -0.4f );
}

LeftToRightWide : AttackDirection
{
	fk< MeleeAttackDirection > direction = "MeleeAttackDirection.LeftToRight";
	Vector3 startPosition = ( -2.0f, 0, 0 );
	Vector3 endPosition = ( 2.0f, 0, 0 );
}

MountedLeftToRightWide : AttackDirection
{
	direction = "MeleeAttackDirection.LeftToRight";
	useMiddlePosition = true;
	startPosition = ( -1.f, -1.f, 0.25f );
	middlePosition = ( 0.375f, 0.25f, 0.25f );
	endPosition = ( 1.75f, -1.f, 0.25f );
}

Center : AttackDirection
{
	fk< MeleeAttackDirection > direction = "MeleeAttackDirection.Center";
	isThrust = true;
	Vector3 startPosition = ( 0, 0, 0 );
	Vector3 endPosition = ( 0, 1, 0 );
}

ThrustRightToLeft : Center
{
	Vector3 startPosition = ( 0.1, 0, 0 );
	Vector3 endPosition = ( -0.1, 1, 0 );
}

ThrustLeftToRight : Center
{
	Vector3 startPosition = ( -0.1, 0, 0 );
	Vector3 endPosition = ( 0.1, 1, 0 );
}

ThrustUpToDown : Center
{
	Vector3 startPosition = ( 0, 0, 0.1 );
	Vector3 endPosition = ( 0, 1, -0.1 );
}

ThrustDownToUp : Center
{
	Vector3 startPosition = ( 0, 0, -0.1 );
	Vector3 endPosition = ( 0, 1, 0.1 );
}

ThrustRightUpToLeftDown : Center
{
	Vector3 startPosition = ( 0.1, 0, 0.05 );
	Vector3 endPosition = ( -0.1, 1, -0.05 );
}

ThrustRightDownToLeftUp : Center
{
	Vector3 startPosition = ( 0.1, 0, -0.05 );
	Vector3 endPosition = ( -0.1, 1, 0.05 );
}

ThrustLeftDownToRightUp : Center
{
	Vector3 startPosition = ( -0.1, 0, -0.05 );
	Vector3 endPosition = ( 0.1, 1, 0.05 );
}

ThrustLeftUpToRightDown : Center
{
	Vector3 startPosition = ( -0.1, 0, 0.05 );
	Vector3 endPosition = ( 0.1, 1, -0.05 );
}

