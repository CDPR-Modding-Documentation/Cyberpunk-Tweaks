package NPCAttacks
using RTDB, Attacks

NPCMeleeAttack : Attack_Melee
{
	userDataPath = "attack.slash";
	attackType = "AttackType.Melee";
	audioTag = "normal";
	fk< StatModifier >[] statModifiers = 
	[
		"AttackModifier.PhysicalEnemyDamage", {
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Multiplier";
			value = 0.4;
		} : ConstantStatModifier
	];
	hitReactionSeverityMin = 2;
	hitReactionSeverityMax = 2;
}

NPCImpact : NPCMeleeAttack
{
	effectName = "melee";
	effectTag = "impact";
	blockCostFactor = 2.50f;
}

NPCStrongImpact : NPCImpact
{
	attackType = "AttackType.StrongMelee";
	blockCostFactor = 5.0f;
}

NPCStompImpact : NPCImpact
{
	effectName = "stomp_melee";
	effectTag = "impact";
	blockCostFactor = 10.0f;
}

NPCStrongStomp : NPCMeleeAttack
{
	attackType = "AttackType.StrongMelee";
	effectName = "melee";
	effectTag = "stomp";
	blockCostFactor = 10.0f;
}

SasquatchHammerStrongAttack : NPCImpact
{
	attackName = "NPCStrongAttack";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	fk< StatModifier >[] statModifiers = 
	[
		"AttackModifier.PhysicalEnemyDamage", {
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Multiplier";
			value = 0.75f;
		} : ConstantStatModifier
	];
	blockCostFactor = 30.0f;
}

QuickAttack : NPCImpact
{
	attackName = "NPCQuickAttack";
}

QuickAttackStagger : NPCImpact
{
	attackName = "NPCQuickAttackStagger";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.Stun";
			resistPool = "BaseStatPools.StunTrigger";
			applyImmediately = true;
		}
	];
}

QuickAttackBleeding : NPCImpact
{
	attackName = "NPCQuickAttackBleeding";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.Bleeding";
			applyImmediately = true;
		}
	];
}

StrongAttack : NPCStrongImpact
{
	attackName = "NPCStrongAttack";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
}

StrongAttackCenter : StrongAttack
{
}

StrongAttackDownToUp : StrongAttack
{
	fk< AttackDirection > attackDirection = "AttackDirections.DownToUp";
}

StrongAttackLeftDownToRightUp : StrongAttack
{
	fk< AttackDirection > attackDirection = "AttackDirections.LeftDownToRightUp";
}

StrongAttackLeftToRight : StrongAttack
{
	fk< AttackDirection > attackDirection = "AttackDirections.LeftToRight";
}

StrongAttackLeftUpToRightDown : StrongAttack
{
	fk< AttackDirection > attackDirection = "AttackDirections.LeftUpToRightDown";
}

StrongAttackRightDownToLeftUp : StrongAttack
{
	fk< AttackDirection > attackDirection = "AttackDirections.RightDownToLeftUp";
}

StrongAttackRightToLeft : StrongAttack
{
	fk< AttackDirection > attackDirection = "AttackDirections.RightToLeft";
}

StrongAttackRightUpToLeftDown : StrongAttack
{
	fk< AttackDirection > attackDirection = "AttackDirections.RightUpToLeftDown";
}

StrongAttackUpToDown : StrongAttack
{
	fk< AttackDirection > attackDirection = "AttackDirections.UpToDown";
}

StrongAttackStagger : NPCStrongImpact
{
	attackName = "NPCStrongAttackStagger";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.NpcMeleeAttackStun";
			applyImmediately = true;
		}
	];
}

StrongAttackStaggerCenter : StrongAttackStagger
{
}

StrongAttackStaggerDownToUp : StrongAttackStagger
{
	fk< AttackDirection > attackDirection = "AttackDirections.DownToUp";
}

StrongAttackStaggerLeftDownToRightUp : StrongAttackStagger
{
	fk< AttackDirection > attackDirection = "AttackDirections.LeftDownToRightUp";
}

StrongAttackStaggerLeftToRight : StrongAttackStagger
{
	fk< AttackDirection > attackDirection = "AttackDirections.LeftToRight";
}

StrongAttackStaggerLeftUpToRightDown : StrongAttackStagger
{
	fk< AttackDirection > attackDirection = "AttackDirections.LeftUpToRightDown";
}

StrongAttackStaggerRightDownToLeftUp : StrongAttackStagger
{
	fk< AttackDirection > attackDirection = "AttackDirections.RightDownToLeftUp";
}

StrongAttackStaggerRightToLeft : StrongAttackStagger
{
	fk< AttackDirection > attackDirection = "AttackDirections.RightToLeft";
}

StrongAttackStaggerRightUpToLeftDown : StrongAttackStagger
{
	fk< AttackDirection > attackDirection = "AttackDirections.RightUpToLeftDown";
}

StrongAttackStaggerUpToDown : StrongAttackStagger
{
	fk< AttackDirection > attackDirection = "AttackDirections.UpToDown";
}

StrongAttackKnockdown : NPCStrongImpact
{
	attackName = "NPCStrongAttackKnockdown";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.Knockdown";
			applyImmediately = true;
		}
	];
	blockCostFactor = 5.0f;
}

RoyceStrongAttackKnockdown : StrongAttackKnockdown
{
	fk< StatModifier >[] statModifiers = 
	[
		"AttackModifier.PhysicalEnemyDamage", {
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Multiplier";
			value = 2.f;
		} : ConstantStatModifier
	];
	blockCostFactor = 30.0f;
}

SasquatchHammerStrongAttackKnockdown : NPCStrongImpact
{
	attackName = "NPCStrongAttackKnockdown";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.Knockdown";
			applyImmediately = true;
		}
	];
	fk< StatModifier >[] statModifiers = 
	[
		"AttackModifier.PhysicalEnemyDamage", {
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Multiplier";
			value = 1.f;
		} : ConstantStatModifier
	];
	blockCostFactor = 50.0f;
}

OdaStrongAttack : NPCStrongImpact
{
	attackName = "NPCStrongAttack";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	blockCostFactor = 15.f;
}

OdaStompAttack : NPCStompImpact
{
	attackName = "NPStompAttack";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	blockCostFactor = 17.5f;
}

SmasherStrongAttack : NPCStrongImpact
{
	attackName = "NPCStrongAttack";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	blockCostFactor = 20.0f;
}

SmasherStrongAttackKnockdown : NPCStrongImpact
{
	attackName = "NPCStrongAttackKnockdown";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.Knockdown";
			applyImmediately = true;
		}
	];
	blockCostFactor = 50.0f;
}

SmasherStompAttackStagger : NPCStompImpact
{
	attackName = "NPCStompAttackStagger";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.Stun";
			resistPool = "BaseStatPools.StunTrigger";
			applyImmediately = true;
		}
	];
	blockCostFactor = 20.0f;
}

SmasherStrongAttackStompKnockdown : NPCStrongStomp
{
	attackName = "StrongAttackStompKnockdown";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.Knockdown";
			applyImmediately = true;
		}
	];
	blockCostFactor = 50.0f;
}

SasquatchStrongAttackFists : NPCStrongImpact
{
	attackName = "NPCStrongAttack";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	blockCostFactor = 20.0f;
}

SasquatchStrongAttackKnockdownFists : NPCStrongImpact
{
	attackName = "NPCStrongAttackKnockdown";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.Knockdown";
			applyImmediately = true;
		}
	];
	blockCostFactor = 50.0f;
}

SasquatchStompAttackStaggerFists : NPCStompImpact
{
	attackName = "NPCStompAttackStagger";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.Stun";
			resistPool = "BaseStatPools.StunTrigger";
			applyImmediately = true;
		}
	];
	blockCostFactor = 20.0f;
}

SasquatchStrongAttackStompKnockdownFists : NPCStrongStomp
{
	attackName = "StrongAttackStompKnockdown";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.Knockdown";
			applyImmediately = true;
		}
	];
	blockCostFactor = 50.0f;
}

SasquatchStrongAttackStaggerFists : NPCStrongImpact
{
	attackName = "NPCStrongAttackStagger";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.NpcMeleeAttackStun";
			applyImmediately = true;
		}
	];
}

StrongAttackStompKnockdown : NPCStrongStomp
{
	attackName = "StrongAttackStompKnockdown";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.Knockdown";
			applyImmediately = true;
		}
	];
}

StrongAttackStompStun : NPCStrongStomp
{
	attackName = "StrongAttackStompStun";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.Stun";
			applyImmediately = true;
		}
	];
}

StrongAttackSmokeBomb : StrongAttackStompStun
{
	attackName = "StrongAttackSmokeBomb";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.SmokeBomb";
			applyImmediately = true;
		}
	];
}

MassiveDamageAttack : NPCStrongImpact
{
	attackName = "NPCStrongAttackStagger";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 999;
		} : ConstantStatModifier
	];
}

StompAttack : NPCStompImpact
{
	attackName = "NPStompAttack";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
}

StompAttackStagger : NPCStompImpact
{
	attackName = "NPCStompAttackStagger";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.Stun";
			resistPool = "BaseStatPools.StunTrigger";
			applyImmediately = true;
		}
	];
}

StompAttackKnockdown : NPCStompImpact
{
	attackName = "StompAttackKnockdown";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.Knockdown";
			applyImmediately = true;
		}
	];
}

ParryEffect : NPCImpact
{
	attackName = "NPCParryEffect";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.Parry";
			applyImmediately = true;
		}
	];
}

PushEffect : StrongAttackStagger
{
	attackName = "NPCPushEffect";
	attackType = "AttackType.GuardBreak";
	fk< AttackDirection > attackDirection = "AttackDirections.Center";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.Parry";
			applyImmediately = true;
		}
	];
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Multiplier";
			value = 0f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ThermalDamage";
			modifierType = "Multiplier";
			value = 0f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ChemicalDamage";
			modifierType = "Multiplier";
			value = 0f;
		} : ConstantStatModifier, 
		{
			statType = "BaseStats.ElectricDamage";
			modifierType = "Multiplier";
			value = 0f;
		} : ConstantStatModifier
	];
}

GrabAttack : NPCImpact
{
	attackName = "NPCGrabAttack";
	effectName = "melee";
	effectTag = "grab";
}

SpecialGrabAttackNetwatcher : GrabAttack
{
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Multiplier";
			value = 0.05f;
		} : ConstantStatModifier
	];
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.Knockdown";
			applyImmediately = true;
		}, 
		{
			statusEffect = "BaseStatusEffect.NetwatcherGeneral";
			applyImmediately = true;
		}
	];
	blockCostFactor = 100.0f;
}

StrongThrowImpact : NPCStrongImpact
{
	attackName = "NPCStrongAttackStagger";
	effectName = "melee";
	effectTag = "throwImpact";
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.Knockdown";
			applyImmediately = true;
		}
	];
}

QuickMelee : NPCImpact
{
	attackName = "QuickMelee";
	attackType = "AttackType.QuickMelee";
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 5.f;
		} : ConstantStatModifier
	];
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.QuickMeleeStun";
			applyImmediately = true;
		}
	];
}

ToxicBlood : BaseExplosion
{
	effectTag = "toxic_blood_explosion";
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.ChemicalDamage";
			modifierType = "Additive";
			refStat = "BaseStats.Health";
			refObject = "Target";
			opSymbol = "*";
			value = 0.03f;
		} : CombinedStatModifier
	];
}

SelfDestructionBomb : BaseExplosion
{
	playerIncomingDamageMultiplier = 0.4f;
	effectTag = "frag_explosion";
	fk< StatModifier >[] statModifiers = 
	[
		{
			statType = "BaseStats.PhysicalDamage";
			modifierType = "Additive";
			value = 150;
		} : ConstantStatModifier
	];
	fk< StatusEffectAttackData >[] statusEffects = 
	[
		{
			statusEffect = "BaseStatusEffect.ExplosionStun";
			applyImmediately = true;
		}
	];
	hitFlags += 
	[
		"DetonateGrenades", "FriendlyFire", "CanDamageSelf"
	];
}

