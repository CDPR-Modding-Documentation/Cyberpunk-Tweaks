package playerStateMachineFinisher
using playerStateMachineBaseFinisher

finisherLeapToTarget : baseState
{
	hasOnEnter = true;
	string[] transitionTo = 
	[
		"finisherAttack"
	];
	string[] transitionCondition = 
	[
		"="
	];
	float downwardsGravity = -28.f;
	bool useSafetyDisplacement = true;
	float safetyDisplacement = 1.f;
	float minLeapDistance = 2.5f;
	float leapMaxPitch = 35.f;
	float minDistToTarget = 3.f;
	float maxDistToTarget = 15.f;
	float minAdjustmentDuration = 0.25f;
	float maxAdjustmentDuration = 0.5f;
	float attackStartupDuration = 0.2f;
	float attackStartupDurationKnives = 0.05f;
	bool canLeapWithoutTarget = false;
	float noTargetLeapDistance = 5.f;
	float noTargetMaxPitch = 35.f;
	float distanceRadius = 0.f;
	float distanceRadiusToTarget = 1.4f;
	float distanceRadiusToBoss = 1.4f;
	float distanceRadiusThrowables = 0.1f;
	float rotationDuration = -1.f;
}

finisherAttack : baseState
{
	bool hasOnEnter = true;
	string[] transitionTo = 
	[
		"finisherEnd"
	];
	string[] transitionCondition = 
	[
		""
	];
	float timeout = 1.f;
}

finisherEnd : baseState
{
	bool hasOnEnter = true;
	string[] transitionTo = [];
	string[] transitionCondition = [];
}

