package playerStateMachineCarriedObject

pickUp : baseCarriedObjectState
{
	bool hasOnEnter = true;
	bool hasExitCondition = true;
	string[] transitionTo = 
	[
		"carry", "release"
	];
	string[] transitionCondition = 
	[
		"", "ToRelease"
	];
	float durationTime = 2.6;
}

carry : baseCarriedObjectState
{
	bool hasExitCondition = false;
	bool hasOnEnter = true;
	bool hasOnUpdate = true;
	string[] transitionTo = 
	[
		"drop", "release", "dispose", "forceDropBody"
	];
	string[] transitionCondition = 
	[
		"ToDrop", "ToRelease", "ToDispose", "ToForceDropBody"
	];
}

drop : baseCarriedObjectState
{
	bool hasExitCondition = true;
	bool hasOnEnter = true;
	bool hasOnExit = true;
	bool hasOnUpdate = true;
	string[] transitionTo = 
	[
		"release"
	];
	string[] transitionCondition = 
	[
		""
	];
	float stateDuration = 1.5;
	float ragdollActivateTime = 1.5;
	float ragdollActivateTimeCrouch = 1.0;
}

dispose : baseCarriedObjectState
{
	bool hasExitCondition = true;
	bool hasOnEnter = true;
	bool hasOnExit = true;
	string[] transitionTo = 
	[
		"release"
	];
	string[] transitionCondition = 
	[
		""
	];
	float durationTime = 2.0;
	float ragdollActivateTime = 0.7;
}

forceDropBody : baseCarriedObjectState
{
	bool hasOnEnter = true;
	string[] transitionTo = 
	[
		"release"
	];
	string[] transitionCondition = 
	[
		""
	];
}

release : baseCarriedObjectState
{
	bool hasOnEnter = true;
	string[] transitionTo = [];
	string[] transitionCondition = [];
}

